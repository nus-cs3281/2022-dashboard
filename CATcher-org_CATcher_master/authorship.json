[{"path":"electron-utils/menu-bar.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { app, BrowserWindow, Menu, MenuItem, MenuItemConstructorOptions } from \u0027electron\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Edited version of a template menu-bar provided by the electron API,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// refer to https://electronjs.org/docs/api/menu for more information."},{"lineNumber":5,"author":{"gitId":"-"},"content":"const fileMenu: MenuItemConstructorOptions \u003d {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  label: \u0027File\u0027,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  submenu: ["},{"lineNumber":8,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"      label: \u0027Quit CATcher\u0027,"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"      accelerator: \u0027CmdOrCtrl+Q\u0027,"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"      click() {"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"        app.quit();"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"      }"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"};"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"const editMenu: MenuItemConstructorOptions \u003d {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  label: \u0027Edit\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  submenu: ["},{"lineNumber":21,"author":{"gitId":"-"},"content":"    { role: \u0027undo\u0027 },"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    { role: \u0027redo\u0027 },"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    { type: \u0027separator\u0027 },"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    { role: \u0027selectAll\u0027 },"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    { role: \u0027cut\u0027 },"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    { role: \u0027copy\u0027 },"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    { role: \u0027paste\u0027 },"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"    { role: \u0027delete\u0027 }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":30,"author":{"gitId":"-"},"content":"};"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"const viewMenu: MenuItemConstructorOptions \u003d {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  label: \u0027View\u0027,"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"  submenu: [{ role: \u0027resetZoom\u0027 }, { role: \u0027zoomIn\u0027 }, { role: \u0027zoomOut\u0027 }, { type: \u0027separator\u0027 }, { role: \u0027togglefullscreen\u0027 }]"},{"lineNumber":35,"author":{"gitId":"-"},"content":"};"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"export function createMenuOptions(isDevMode: boolean): MenuItemConstructorOptions[] {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  const mainMenuTemplate: MenuItemConstructorOptions[] \u003d [fileMenu, editMenu, viewMenu];"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  if (isDevMode) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    let viewSubMenu: MenuItemConstructorOptions[];"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    viewSubMenu \u003d mainMenuTemplate[2].submenu as MenuItemConstructorOptions[];"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"    viewSubMenu.push({ type: \u0027separator\u0027 }, { role: \u0027toggleDevTools\u0027 });"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  return mainMenuTemplate;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"chunweii"},"content":"function createInspectElementMenuItem(contextMenuCoords: { x; y }): MenuItem {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  return new MenuItem({"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    label: \u0027Inspect Element\u0027,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    click: (menuItem, window, event) \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      window.webContents.inspectElement(contextMenuCoords.x, contextMenuCoords.y);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":58,"author":{"gitId":"-"},"content":" * Creates a menu that is displayed when the context-menu event fires on the"},{"lineNumber":59,"author":{"gitId":"-"},"content":" * given BrowserWindow (i.e. usually when user right-clicks on the window)."},{"lineNumber":60,"author":{"gitId":"-"},"content":" * This menu will contain an \u0027Inspect Element\u0027 MenuItem."},{"lineNumber":61,"author":{"gitId":"-"},"content":" */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"export function createContextMenu(win: BrowserWindow): void {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  const contextMenuCoords \u003d { x: null, y: null };"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  const contextMenu \u003d new Menu();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  contextMenu.append(createInspectElementMenuItem(contextMenuCoords));"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  win.webContents.on(\u0027context-menu\u0027, (event, contextMenuParams) \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // record the mouse position, when context-menu event is fired"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    contextMenuCoords.x \u003d contextMenuParams.x;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    contextMenuCoords.y \u003d contextMenuParams.y;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    contextMenu.popup({ window: win });"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chunweii":9,"-":64}},{"path":"electron-utils/oauth.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { BrowserWindow, shell } from \u0027electron\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { v4 as uuid } from \u0027uuid\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"const nodeUrl \u003d require(\u0027url\u0027);"},{"lineNumber":5,"author":{"gitId":"-"},"content":"const fetch \u003d require(\u0027node-fetch\u0027);"},{"lineNumber":6,"author":{"gitId":"-"},"content":"const Logger \u003d require(\u0027electron-log\u0027);"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const CLIENT_ID \u003d \u00276750652c0c9001314434\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"const BASE_URL \u003d \u0027https://github.com\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"const ACCESS_TOKEN_URL \u003d \u0027https://catcher-auth.herokuapp.com/authenticate\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"const CALLBACK_URL \u003d \u0027http://localhost:4200\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"let authWindow;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Will retrieve the access token from a proxy server which acts as a intermediary to retrieve the tokens from Github."},{"lineNumber":17,"author":{"gitId":"-"},"content":" * @param window - The main window of CATcher."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * @param repoPermissionLevel - The level of permission required to be granted by the user to use CATcher."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export function getAccessToken(window: BrowserWindow, repoPermissionLevel: string): Promise\u003cany\u003e {"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"  return getAuthorizationCode(window, repoPermissionLevel)"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"    .then((code) \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      Logger.info(\u0027Obtained authorization code from Github\u0027);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      const accessTokenUrl \u003d `${ACCESS_TOKEN_URL}/${code}`;"},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"      return fetch(accessTokenUrl)"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"        .then((res) \u003d\u003e res.json())"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"        .then((data) \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          if (data.error) {"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"            throw new Error(data.error);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          return data;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"    })"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"    .catch((error) \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"      throw error;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Get the authorization code from Github after success login."},{"lineNumber":41,"author":{"gitId":"-"},"content":" * @param parentWindow - The main window of CATcher"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * @param repoPermissionLevel - The level of permission required to be granted by the user to use CATcher."},{"lineNumber":43,"author":{"gitId":"-"},"content":" */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"function getAuthorizationCode(parentWindow: BrowserWindow, repoPermissionLevel: string) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  let state: string;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  state \u003d generateStateString();"},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"  const oauthUrl \u003d encodeURI("},{"lineNumber":48,"author":{"gitId":"chunweii"},"content":"    `${BASE_URL}/login/oauth/authorize?client_id\u003d${CLIENT_ID}\u0026scope\u003d${repoPermissionLevel},read:user\u0026state\u003d${state}`"},{"lineNumber":49,"author":{"gitId":"chunweii"},"content":"  );"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  return new Promise(function (resolve, reject) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    const windowParams \u003d {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      autoHideMenuBar: true,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      alwaysOnTop: false,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      fullscreenable: false,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      parent: parentWindow,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      webPreferences: {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        nodeIntegration: true"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    authWindow \u003d new BrowserWindow(windowParams);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    authWindow.loadURL(oauthUrl);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    authWindow.show();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Logger.info(\u0027Opening authentication window\u0027);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    authWindow.on(\u0027closed\u0027, (event) \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      reject(new Error(\u0027WINDOW_CLOSED\u0027));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    authWindow.webContents.on(\u0027will-navigate\u0027, (event, newUrl) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      if (newUrl.startsWith(CALLBACK_URL)) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        onCallback(newUrl);"},{"lineNumber":73,"author":{"gitId":"chunweii"},"content":"      } else if (newUrl.startsWith(`${BASE_URL}/session`) || newUrl.startsWith(`${BASE_URL}/login`)) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // continue navigation within the auth window"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // do not navigate to external links in the auth window"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instead, navigate to them in the user\u0027s browser"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        event.preventDefault();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        shell.openExternal(newUrl).then(() \u003d\u003e Logger.info(\u0027External link is clicked on auth window, opening system browser...\u0027));"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    authWindow.webContents.on(\u0027new-window\u0027, (event, url, frameName, disposition, options) \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      event.preventDefault();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      shell.openExternal(url).then(() \u003d\u003e Logger.info(\u0027External link is clicked on auth window, opening system browser...\u0027));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    authWindow.webContents.on(\u0027will-redirect\u0027, (event, newUrl) \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      Logger.info(\u0027Received redirect in auth window\u0027);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      if (newUrl.startsWith(CALLBACK_URL)) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        onCallback(newUrl);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    function onCallback(callbackUrl: string) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      const url_parts \u003d nodeUrl.parse(callbackUrl, true);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      const query \u003d url_parts.query;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      const code \u003d query.code;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      const error \u003d query.error;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      const returnedState \u003d query.state;"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"      if (error !\u003d\u003d undefined) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        reject(error);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      } else if (isReturnedStateSame(state, returnedState) \u0026\u0026 code) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        resolve(code);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      setImmediate(function () {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        authWindow.close();"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        authWindow.on(\u0027closed\u0027, () \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          Logger.info(\u0027Closing authentication window\u0027);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          authWindow \u003d null;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":120,"author":{"gitId":"-"},"content":" * Generates and assigns an unguessable random \u0027state\u0027 string to pass to Github for protection against cross-site request forgery attacks"},{"lineNumber":121,"author":{"gitId":"-"},"content":" */"},{"lineNumber":122,"author":{"gitId":"-"},"content":"function generateStateString(): string {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  return uuid();"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"function isReturnedStateSame(state: string, returnedState: string): boolean {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  return state \u003d\u003d\u003d returnedState;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chunweii":13,"-":115}},{"path":"electron-utils/supporting-logic.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { app } from \u0027electron\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export function isDeveloperMode(): boolean {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  const args \u003d process.argv.slice(1),"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"    serve \u003d args.some((val) \u003d\u003e val \u003d\u003d\u003d \u0027--serve\u0027);"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  return !!serve;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export function isWindowsOs(): boolean {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  return process.platform \u003d\u003d\u003d \u0027win32\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"export function isMacOs(): boolean {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  return process.platform \u003d\u003d\u003d \u0027darwin\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"export function isLinuxOs(): boolean {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  return process.platform \u003d\u003d\u003d \u0027linux\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"export function getCurrentDirectory(isWindowsOs: boolean, isDevMode: boolean): string {"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"  return isWindowsOs ? (isDevMode ? app.getAppPath() : process.env.PORTABLE_EXECUTABLE_FILE) : app.getAppPath();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"export const appTitle: string \u003d require(\u0027../package.json\u0027).name + \u0027 \u0027 + require(\u0027../package.json\u0027).version;"}],"authorContributionMap":{"chunweii":2,"-":23}},{"path":"main.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { app, BrowserWindow, ipcMain, Menu, MenuItemConstructorOptions, nativeTheme, screen, shell } from \u0027electron\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import * as path from \u0027path\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import * as url from \u0027url\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { createContextMenu, createMenuOptions } from \u0027./electron-utils/menu-bar\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { getAccessToken } from \u0027./electron-utils/oauth\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { appTitle, isDeveloperMode, isLinuxOs, isMacOs } from \u0027./electron-utils/supporting-logic\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const Logger \u003d require(\u0027electron-log\u0027);"},{"lineNumber":9,"author":{"gitId":"-"},"content":"const ICON_PATH \u003d path.join(__dirname, \u0027dist/favicon.512x512.png\u0027);"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"let win: BrowserWindow \u003d null;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"const isDevMode \u003d isDeveloperMode();"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Will start the OAuth Web Flow and obtain the access token from Github."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ipcMain.on(\u0027github-oauth\u0027, (event, repoPermissionLevel) \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  Logger.info(\u0027Starting authentication\u0027);"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"  getAccessToken(win, repoPermissionLevel)"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"    .then((data) \u003d\u003e {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      Logger.info(\u0027Obtained access token from Github\u0027);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      event.sender.send(\u0027github-oauth-reply\u0027, { token: data.token });"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"    })"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"    .catch((error) \u003d\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      event.sender.send(\u0027github-oauth-reply\u0027, {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        error: error.message,"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"        isWindowClosed: error.message \u003d\u003d\u003d \u0027WINDOW_CLOSED\u0027"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"      });"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":30,"author":{"gitId":"-"},"content":"});"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"ipcMain.handle(\u0027clear-storage\u0027, () \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  return win.webContents.session.clearStorageData();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"});"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"ipcMain.handle(\u0027open-link\u0027, (e, address) \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  shell.openExternal(address);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"});"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"function createWindow() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  Logger.info(\u0027Creating primary window.\u0027);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  const size \u003d screen.getPrimaryDisplay().workAreaSize;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  const windowOptions \u003d {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    x: 0,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    y: 0,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: size.width,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: size.height,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    webPreferences: {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      nodeIntegration: true,"},{"lineNumber":50,"author":{"gitId":"chunweii"},"content":"      allowRunningInsecureContent: !isDevMode"},{"lineNumber":51,"author":{"gitId":"chunweii"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  if (isLinuxOs()) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // app icon needs to be set manually on Linux platforms"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    windowOptions[\u0027icon\u0027] \u003d ICON_PATH;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  // Create the browser window."},{"lineNumber":60,"author":{"gitId":"-"},"content":"  win \u003d new BrowserWindow(windowOptions);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  win.setTitle(appTitle);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  nativeTheme.themeSource \u003d \u0027light\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  if (isDevMode) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    require(\u0027electron-reload\u0027)(__dirname, {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      electron: require(`${__dirname}/node_modules/electron`)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    createContextMenu(win);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    win.loadURL(\u0027http://localhost:4200\u0027);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    win.webContents.openDevTools();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  } else {"},{"lineNumber":74,"author":{"gitId":"chunweii"},"content":"    win.loadURL("},{"lineNumber":75,"author":{"gitId":"chunweii"},"content":"      url.format({"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        pathname: path.join(__dirname, \u0027dist/index.html\u0027),"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        protocol: \u0027file:\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        slashes: true"},{"lineNumber":79,"author":{"gitId":"chunweii"},"content":"      })"},{"lineNumber":80,"author":{"gitId":"chunweii"},"content":"    );"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  // Emitted when the window is closed."},{"lineNumber":84,"author":{"gitId":"-"},"content":"  win.on(\u0027closed\u0027, () \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    // Dereference the window object, usually you would store window"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    // in an array if your app supports multi windows, this is the time"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // when you should delete the corresponding element."},{"lineNumber":88,"author":{"gitId":"-"},"content":"    win \u003d null;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"try {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  Logger.info(\u0027Initializing Electron app.\u0027);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  // This method will be called when Electron has finished"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  // initialization and is ready to create browser windows."},{"lineNumber":96,"author":{"gitId":"-"},"content":"  // Some APIs can only be used after this event occurs."},{"lineNumber":97,"author":{"gitId":"-"},"content":"  app.on(\u0027ready\u0027, () \u003d\u003e {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    Logger.info(\u0027Electron app in ready state.\u0027);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    // Build and Attach Menu-bar template to application."},{"lineNumber":100,"author":{"gitId":"-"},"content":"    const mainMenuTemplate: MenuItemConstructorOptions[] \u003d createMenuOptions(isDevMode);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    const mainMenu \u003d Menu.buildFromTemplate(mainMenuTemplate);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    Menu.setApplicationMenu(mainMenu);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    createWindow();"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  // Quit when all windows are closed."},{"lineNumber":108,"author":{"gitId":"-"},"content":"  app.on(\u0027window-all-closed\u0027, () \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    Logger.info(\u0027Closing all windows in Electron.\u0027);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    // On OS X it is common for applications and their menu bar"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    // to stay active until the user quits explicitly with Cmd + Q"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    if (!isMacOs()) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      app.quit();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  app.on(\u0027activate\u0027, () \u003d\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    Logger.info(\u0027Electron app is activated.\u0027);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    // On OS X it\u0027s common to re-create a window in the app when the"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    // dock icon is clicked and there are no other windows open."},{"lineNumber":121,"author":{"gitId":"-"},"content":"    if (win \u003d\u003d\u003d null) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      createWindow();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":125,"author":{"gitId":"-"},"content":"} catch (e) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  Logger.error(\u0027Something went wrong in Electron.\u0027, e);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chunweii":12,"-":115}},{"path":"src/app/app-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AuthModule } from \u0027./auth/auth.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthGuard } from \u0027./core/guards/auth.guard\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PhaseBugReportingModule } from \u0027./phase-bug-reporting/phase-bug-reporting.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PhaseModerationModule } from \u0027./phase-moderation/phase-moderation.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { PhaseTeamResponseModule } from \u0027./phase-team-response/phase-team-response.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PhaseTesterResponseModule } from \u0027./phase-tester-response/phase-tester-response.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":11,"author":{"gitId":"-"},"content":"  { path: \u0027\u0027, loadChildren: () \u003d\u003e AuthModule },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  { path: \u0027phaseBugReporting\u0027, loadChildren: () \u003d\u003e PhaseBugReportingModule, canLoad: [AuthGuard] },"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  { path: \u0027phaseTeamResponse\u0027, loadChildren: () \u003d\u003e PhaseTeamResponseModule, canLoad: [AuthGuard] },"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  { path: \u0027phaseTesterResponse\u0027, loadChildren: () \u003d\u003e PhaseTesterResponseModule, canLoad: [AuthGuard] },"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  { path: \u0027phaseModeration\u0027, loadChildren: () \u003d\u003e PhaseModerationModule, canLoad: [AuthGuard] }"},{"lineNumber":16,"author":{"gitId":"-"},"content":"];"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  imports: [RouterModule.forRoot(routes)],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class AppRoutingModule {}"}],"authorContributionMap":{"luminousleek":1,"-":21}},{"path":"src/app/app.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../environments/environment\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./core/services/electron.service\u0027;"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import { ErrorHandlingService } from \u0027./core/services/error-handling.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./core/services/logging.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  selector: \u0027app-root\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./app.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./app.component.css\u0027]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class AppComponent implements AfterViewInit {"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  NOT_CONNECTED_ERROR: Error \u003d new Error(\u0027You are not connected to the internet.\u0027);"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  constructor(public electronService: ElectronService, logger: LoggingService, public errorHandlingService: ErrorHandlingService) {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    logger.info(\u0027AppConfig\u0027, AppConfig);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    if (electronService.isElectron()) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      logger.info(\u0027Mode electron\u0027);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      logger.info(\u0027Mode web\u0027);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ngAfterViewInit() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.addListenerForHttpLinks();"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    this.addListenerForNetworkOffline();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * This listener will prevent the default behaviour of electron to open http links on electron browser itself."},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * Will use the client\u0027s default OS browser to open the link."},{"lineNumber":33,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  addListenerForHttpLinks() {"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    document.addEventListener("},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"      \u0027click\u0027,"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"      (event) \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        const elem \u003d \u003cHTMLLinkElement\u003e(\u003cHTMLElement\u003eevent.target).closest(\u0027a[href^\u003d\"http\"]\u0027);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (elem) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          event.preventDefault();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          event.stopPropagation();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          this.electronService.openLink(elem.href);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"      },"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"      false"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"  /**"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"   * This listener checks if CATcher has a connection to a network, and will show an error snackbar if it does not."},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"   */"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"  addListenerForNetworkOffline() {"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"    window.addEventListener("},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"      \u0027offline\u0027,"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"      (event) \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        this.errorHandlingService.handleError(this.NOT_CONNECTED_ERROR);"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"      },"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"      false"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":23,"-":38}},{"path":"src/app/app.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientModule } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ErrorHandler, NgModule, NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BrowserModule, Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Apollo, ApolloModule } from \u0027apollo-angular\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HttpLink, HttpLinkModule } from \u0027apollo-angular-link-http\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InMemoryCache, IntrospectionFragmentMatcher } from \u0027apollo-cache-inmemory\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ApolloLink } from \u0027apollo-link\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { setContext } from \u0027apollo-link-context\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { MarkdownModule, MarkedOptions } from \u0027ngx-markdown\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import \u0027reflect-metadata\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import graphqlTypes from \u0027../../graphql/graphql-types\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import \u0027../polyfills\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { AppRoutingModule } from \u0027./app-routing.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { AppComponent } from \u0027./app.component\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { AuthModule } from \u0027./auth/auth.module\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { UserConfirmationComponent } from \u0027./core/guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027./core/services/auth.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { DataService } from \u0027./core/services/data.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./core/services/electron.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027./core/services/error-handling.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { AuthServiceFactory } from \u0027./core/services/factories/factory.auth.service\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { GithubServiceFactory } from \u0027./core/services/factories/factory.github.service\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { IssueServiceFactory } from \u0027./core/services/factories/factory.issue.service\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./core/services/github.service\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./core/services/githubevent.service\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./core/services/issue.service\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./core/services/logging.service\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./core/services/phase.service\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { SessionFixConfirmationComponent } from \u0027./core/services/session-fix-confirmation/session-fix-confirmation.component\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./core/services/user.service\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { PhaseBugReportingModule } from \u0027./phase-bug-reporting/phase-bug-reporting.module\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { PhaseModerationModule } from \u0027./phase-moderation/phase-moderation.module\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { PhaseTeamResponseModule } from \u0027./phase-team-response/phase-team-response.module\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import { PhaseTesterResponseModule } from \u0027./phase-tester-response/phase-tester-response.module\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import { LabelDefinitionPopupComponent } from \u0027./shared/label-definition-popup/label-definition-popup.component\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { HeaderComponent } from \u0027./shared/layout\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { markedOptionsFactory } from \u0027./shared/lib/marked\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027./shared/shared.module\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"  declarations: [AppComponent, HeaderComponent, UserConfirmationComponent, LabelDefinitionPopupComponent, SessionFixConfirmationComponent],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BrowserModule,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    PhaseTesterResponseModule,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    BrowserAnimationsModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    AuthModule,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    PhaseBugReportingModule,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    PhaseTeamResponseModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    PhaseModerationModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    HttpClientModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    MarkdownModule.forRoot({"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      markedOptions: {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        provide: MarkedOptions,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        useFactory: markedOptionsFactory"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"      }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    AppRoutingModule,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ApolloModule,"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    HttpLinkModule"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  providers: ["},{"lineNumber":65,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      provide: GithubService,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      useFactory: GithubServiceFactory,"},{"lineNumber":68,"author":{"gitId":"chunweii"},"content":"      deps: [ErrorHandlingService, Apollo, ElectronService, LoggingService]"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      provide: AuthService,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      useFactory: AuthServiceFactory,"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"      deps: ["},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        ElectronService,"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"        Router,"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        NgZone,"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"        GithubService,"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        UserService,"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"        IssueService,"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"        PhaseService,"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        DataService,"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        GithubEventService,"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"        Title,"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"        LoggingService"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"      ]"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      provide: IssueService,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      useFactory: IssueServiceFactory,"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"      deps: [GithubService, UserService, PhaseService, ElectronService, DataService]"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      provide: ErrorHandler,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      useClass: ErrorHandlingService"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  bootstrap: [AppComponent],"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"  entryComponents: [UserConfirmationComponent, SessionFixConfirmationComponent, LabelDefinitionPopupComponent]"},{"lineNumber":99,"author":{"gitId":"-"},"content":"})"},{"lineNumber":100,"author":{"gitId":"-"},"content":"export class AppModule {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  constructor(private apollo: Apollo, private httpLink: HttpLink, private authService: AuthService) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    const URI \u003d \u0027https://api.github.com/graphql\u0027;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    const basic \u003d setContext(() \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      return { headers: { Accept: \u0027charset\u003dutf-8\u0027 } };"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    const auth \u003d setContext(() \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      return { headers: { Authorization: `Token ${this.authService.accessToken.getValue()}` } };"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    const link \u003d ApolloLink.from([basic, auth, this.httpLink.create({ uri: URI })]);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    const fragmentMatcher \u003d new IntrospectionFragmentMatcher({"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      introspectionQueryResultData: graphqlTypes"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    const cache \u003d new InMemoryCache({ fragmentMatcher });"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    this.apollo.create({"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      link: link,"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"      cache: cache"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":19,"chunweii":1,"-":99}},{"path":"src/app/auth/auth-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AuthComponent } from \u0027./auth.component\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    component: AuthComponent"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":10,"author":{"gitId":"-"},"content":"];"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  imports: [RouterModule.forChild(routes)],"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class AuthRoutingModule {}"}],"authorContributionMap":{"luminousleek":1,"-":15}},{"path":"src/app/auth/auth.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"isUserNotAuthenticated()\" class\u003d\"login-page\"\u003e"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"  \u003capp-session-selection [urlEncodedSessionName]\u003d\"this.urlEncodedSessionName\"\u003e\u003c/app-session-selection\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"isUserAuthenticating() || isAwaitingOAuthUserConfirm()\" class\u003d\"login-page\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cmat-card class\u003d\"login-card\"\u003e"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-card-header style\u003d\"margin-bottom: 20px\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cmat-card-title class\u003d\"login-title\"\u003e Confirm Login Account \u003c/mat-card-title\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003cmat-card-subtitle\u003e Session on {{ currentSessionOrg }} \u003c/mat-card-subtitle\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/mat-card-header\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cdiv style\u003d\"position: absolute; top: 15px; left: 15px\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cbutton mat-icon-button (click)\u003d\"goToSessionSelect()\" [disabled]\u003d\"isUserAuthenticating()\" class\u003d\"mat-primary\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003earrow_back_ios\u003c/mat-icon\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!isUserAuthenticating()\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003capp-auth-confirm-login [username]\u003d\"currentUserName\" [currentSessionOrg]\u003d\"this.currentSessionOrg\"\u003e\u003c/app-auth-confirm-login\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"isUserAuthenticating()\" class\u003d\"spinner-centralize\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cmat-spinner [diameter]\u003d\"47\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003c/mat-card\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":1,"chunweii":1,"-":23}},{"path":"src/app/auth/auth.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, NgZone, OnDestroy, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { filter, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ApplicationService } from \u0027../core/services/application.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../core/services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../core/services/electron.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../core/services/github.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../core/services/logging.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../core/services/phase.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../core/services/user.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"const APPLICATION_VERSION_OUTDATED_ERROR \u003d \u0027Please update to the latest version of CATcher.\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027app-auth\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./auth.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./auth.component.css\u0027]"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class AuthComponent implements OnInit, OnDestroy {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  authState: AuthState;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  accessTokenSubscription: Subscription;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  authStateSubscription: Subscription;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  currentUserName: string;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  urlEncodedSessionName: string;"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"  sessionInformation: string;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    public appService: ApplicationService,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public electronService: ElectronService,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ngZone: NgZone,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private activatedRoute: ActivatedRoute,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    this.electronService.registerIpcListener(\u0027github-oauth-reply\u0027, (event, { token, error, isWindowClosed }) \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      this.ngZone.run(() \u003d\u003e {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (error) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          if (!isWindowClosed) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.errorHandlingService.handleError(error);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          this.goToSessionSelect();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.authService.storeOAuthAccessToken(token);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.logger.startSession();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const oauthCode \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027code\u0027);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    const state \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027state\u0027);"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    if (this.authService.isAuthenticated()) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      this.router.navigate([this.phaseService.currentPhase]);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.initAccessTokenSubscription();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.initAuthStateSubscription();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.createProfileFromUrlQueryParams();"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    if (oauthCode) {"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"      // runs upon receiving oauthCode from the redirect"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      this.authService.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.restoreOrgDetailsFromLocalStorage();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      this.logger.info(\u0027Obtained authorisation code from Github\u0027);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      this.fetchAccessToken(oauthCode, state);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * Will fetch the access token from GitHub."},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * @param oauthCode - The authorisation code obtained from GitHub."},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * @param state - The state returned from GitHub."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  fetchAccessToken(oauthCode: string, state: string) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    if (!this.authService.isReturnedStateSame(state)) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      this.logger.info(`Received incorrect state ${state}, continue waiting for correct state`);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    this.logger.info(\u0027Retrieving access token from Github\u0027);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const accessTokenUrl \u003d `${AppConfig.accessTokenUrl}/${oauthCode}/client_id/${AppConfig.clientId}`;"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"    fetch(accessTokenUrl)"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"      .then((res) \u003d\u003e res.json())"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"      .then((data) \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (data.error) {"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"          throw new Error(data.error);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.authService.storeOAuthAccessToken(data.token);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.logger.info(\u0027Sucessfully obtained access token\u0027);"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"      .catch((err) \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.logger.info(`Error in data fetched from access token URL: ${err}`);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(err);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  ngOnDestroy() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.electronService.removeIpcListeners(\u0027github-oauth-reply\u0027);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    if (this.authStateSubscription) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      this.authStateSubscription.unsubscribe();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    if (this.accessTokenSubscription) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      this.accessTokenSubscription.unsubscribe();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Checks whether the current version of CATcher is outdated."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  checkAppIsOutdated(): Observable\u003cany\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    return this.appService.isApplicationOutdated().pipe("},{"lineNumber":125,"author":{"gitId":"-"},"content":"      map((isOutdated: boolean) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (isOutdated) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          throw new Error(APPLICATION_VERSION_OUTDATED_ERROR);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"chunweii"},"content":"  updateSession(sessionEvent: string) {"},{"lineNumber":134,"author":{"gitId":"chunweii"},"content":"    this.sessionInformation \u003d sessionEvent;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  goToSessionSelect() {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"  isUserNotAuthenticated(): boolean {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.NotAuthenticated;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  isUserAuthenticating(): boolean {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.AwaitingAuthentication;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  isAwaitingOAuthUserConfirm(): boolean {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.ConfirmOAuthUser;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  get currentSessionOrg(): string {"},{"lineNumber":154,"author":{"gitId":"chunweii"},"content":"    if (!this.sessionInformation) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      // Retrieve org details of session information from local storage"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      return window.localStorage.getItem(\u0027org\u0027);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"chunweii"},"content":"    return this.getOrgDetails(this.sessionInformation);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   * Extracts organization and data repository details from local storage"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   * and restores them to CATcher."},{"lineNumber":164,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  private restoreOrgDetailsFromLocalStorage() {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    const org \u003d window.localStorage.getItem(\u0027org\u0027);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    const dataRepo \u003d window.localStorage.getItem(\u0027dataRepo\u0027);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.githubService.storeOrganizationDetails(org, dataRepo);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.phaseService.setSessionData();"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   * Extracts the Organization Details from the input sessionInformation."},{"lineNumber":174,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  private getOrgDetails(sessionInformation: string) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[0];"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  private initAuthStateSubscription() {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    this.authStateSubscription \u003d this.authService.currentAuthState.subscribe((state) \u003d\u003e {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      this.ngZone.run(() \u003d\u003e {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        this.authState \u003d state;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"  private initAccessTokenSubscription() {"},{"lineNumber":189,"author":{"gitId":"luminousleek"},"content":"    this.accessTokenSubscription \u003d this.authService.accessToken"},{"lineNumber":190,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":191,"author":{"gitId":"-"},"content":"        filter((token: string) \u003d\u003e !!token),"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e this.userService.getAuthenticatedUser())"},{"lineNumber":193,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":194,"author":{"gitId":"luminousleek"},"content":"      .subscribe((user: GithubUser) \u003d\u003e {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        this.ngZone.run(() \u003d\u003e {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          this.currentUserName \u003d user.login;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"          this.authService.changeAuthState(AuthState.ConfirmOAuthUser);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  private createProfileFromUrlQueryParams() {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    const urlParams \u003d this.activatedRoute.snapshot.queryParamMap;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    if (urlParams.has(\u0027session\u0027)) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      this.urlEncodedSessionName \u003d urlParams.get(\u0027session\u0027);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":17,"chunweii":5,"-":186}},{"path":"src/app/auth/auth.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthRoutingModule } from \u0027./auth-routing.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AuthComponent } from \u0027./auth.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ConfirmLoginComponent } from \u0027./confirm-login/confirm-login.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { JsonParseErrorDialogComponent } from \u0027./profiles/json-parse-error-dialog/json-parse-error-dialog.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ProfilesComponent } from \u0027./profiles/profiles.component\u0027;"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"import { SessionSelectionComponent } from \u0027./session-selection/session-selection.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  imports: [AuthRoutingModule, SharedModule, CommonModule],"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"  declarations: [AuthComponent, ProfilesComponent, JsonParseErrorDialogComponent, ConfirmLoginComponent, SessionSelectionComponent],"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  entryComponents: [JsonParseErrorDialogComponent]"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class AuthModule {}"}],"authorContributionMap":{"luminousleek":2,"chunweii":2,"-":12}},{"path":"src/app/auth/confirm-login/confirm-login.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".sign-in-button {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  background: #f7fcfe;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  line-height: 45px;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  border: 1px solid currentColor;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":".logo {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  display: inline-flex;"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  margin: 0 3px 3px 3px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".github-logo {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  font-size: 20px;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  width: 20px;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  height: 20px;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":17}},{"path":"src/app/auth/confirm-login/confirm-login.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cbutton mat-stroked-button class\u003d\"sign-in-button\" color\u003d\"primary\" (click)\u003d\"this.completeLoginProcess()\"\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  \u003cspan class\u003d\"logo\"\u003e \u003cimg class\u003d\"github-logo\" src\u003d\"./assets/images/github-logo.png\" alt\u003d\"github-logo\" /\u003e \u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cspan\u003e Continue as {{ this.username }} \u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/button\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"\u003cbutton *ngIf\u003d\"electronService.isElectron()\" mat-button style\u003d\"margin-top: 10px; margin-bottom: 10px\" (click)\u003d\"logIntoAnotherAccount()\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Log in to another account"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"\u003cdiv *ngIf\u003d\"!electronService.isElectron()\" class\u003d\"mat-body-1\" style\u003d\"margin-top: 20px\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  To change account, please sign into the desired account from the"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003ca href\u003d\"https://github.com/\" (click)\u003d\"onGithubWebsiteClicked()\"\u003eofficial Github website\u003c/a\u003e."},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":3,"-":9}},{"path":"src/app/auth/confirm-login/confirm-login.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { flatMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../../core/services/electron.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027app-auth-confirm-login\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./confirm-login.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./confirm-login.component.css\u0027]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class ConfirmLoginComponent implements OnInit {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  @Input() username: string;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @Input() currentSessionOrg: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    public electronService: ElectronService,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private logger: LoggingService,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private router: Router"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  onGithubWebsiteClicked() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    window.open(\u0027https://github.com/\u0027, \u0027_blank\u0027);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    window.location.reload();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  logIntoAnotherAccount() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.logger.info(\u0027Logging into another account\u0027);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.electronService.clearCookies();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    this.authService.startOAuthProcess();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * Handles the clean up required after authentication and setting up of user data is completed."},{"lineNumber":47,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  handleAuthSuccess() {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    this.authService.setTitleWithPhaseDetail();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.Authenticated);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * Will complete the process of logging in the given user."},{"lineNumber":56,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  completeLoginProcess(): void {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.phaseService.setPhaseOwners(this.currentSessionOrg, this.username);"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"    this.userService"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"      .createUserModel(this.username)"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":63,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e this.phaseService.sessionSetup()),"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"        flatMap(() \u003d\u003e this.githubEventService.setLatestChangeEvent())"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"        () \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          this.handleAuthSuccess();"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          this.logger.info(`Completion of login process failed with an error: ${error}`);"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":13,"-":64}},{"path":"src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1 mat-dialog-title\u003eError in \"profiles.json\" format\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cdiv mat-dialog-content\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"  \u003cp align\u003d\"center\" style\u003d\"max-width: 390px\"\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    The format of the \"profiles.json\" file is not as required. You might not have included \u003ccode\u003eprofileName\u003c/code\u003e and"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    \u003ccode\u003erepoName\u003c/code\u003e keys. Please refer to our User Guide for the correct format."},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/p\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cdiv mat-dialog-actions align\u003d\"center\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cbutton mat-raised-button color\u003d\"primary\" (click)\u003d\"onClick()\"\u003eOk\u003c/button\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":3,"-":7}},{"path":"src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ProfilesComponent } from \u0027../profiles.component\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * This Component is responsible for informing the user if there"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * are errors in the profiles.json file that is available to the app."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-json-parse-error-dialog\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./json-parse-error-dialog.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./json-parse-error-dialog.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class JsonParseErrorDialogComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  constructor(public dialogRef: MatDialogRef\u003cProfilesComponent\u003e) {}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * Closes the Dialog"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  onClick(): void {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    this.dialogRef.close();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":25}},{"path":"src/app/auth/profiles/profiles.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cmat-form-field class\u003d\"profile-field\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-label\u003eSelect Session\u003c/mat-label\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cmat-select [value]\u003d\"this.selectedProfile.profileName\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cmat-option (click)\u003d\"selectProfile(this.blankProfile)\"\u003eNone\u003c/mat-option\u003e"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-option *ngFor\u003d\"let profile of profiles\" (click)\u003d\"selectProfile(profile)\" [value]\u003d\"profile.profileName\"\u003e{{"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"      profile.profileName"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    }}\u003c/mat-option\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/mat-select\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/mat-form-field\u003e"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"\u003cinput #fileInput type\u003d\"file\" style\u003d\"display: none\" accept\u003d\".json\" (change)\u003d\"this.fileSelected($event)\" /\u003e"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"\u003cbutton"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  class\u003d\"profile-input\""},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  type\u003d\"button\""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  mat-icon-button"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  (click)\u003d\"this.fileSelectorInitiation(fileInput)\""},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  disableRipple\u003d\"true\""},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  (mousedown)\u003d\"this.animationActivated \u003d true\""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  (mouseleave)\u003d\"this.animationActivated \u003d false\""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cmat-icon [@triggerFileInput]\u003d\"this.animationActivated ? \u0027pressed\u0027 : \u0027normal\u0027\"\u003efolder_open\u003c/mat-icon\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/button\u003e"}],"authorContributionMap":{"luminousleek":13,"-":8}},{"path":"src/app/auth/profiles/profiles.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { animate, state, style, transition, trigger } from \u0027@angular/animations\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { isValidProfile, Profile } from \u0027../../core/models/profile.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { MALFORMED_PROFILES_ERROR, ProfileService } from \u0027../../core/services/profile.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { JsonParseErrorDialogComponent } from \u0027./json-parse-error-dialog/json-parse-error-dialog.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-profiles\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./profiles.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./profiles.component.css\u0027],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  animations: ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // animation triggers go here"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    trigger(\u0027triggerFileInput\u0027, ["},{"lineNumber":16,"author":{"gitId":"-"},"content":"      state(\u0027normal\u0027, style({})),"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"      state("},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        \u0027pressed\u0027,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        style({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          color: \u0027orange\u0027"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        })"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"      ),"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"      transition(\u0027normal \u003d\u003e pressed\u0027, [animate(\u00270.25s ease\u0027)]),"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"      transition(\u0027pressed \u003d\u003e normal\u0027, [animate(\u00270.25s ease\u0027)])"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ])"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":27,"author":{"gitId":"-"},"content":"})"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export class ProfilesComponent implements OnInit {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  private readonly ANIMATION_DURATION: number \u003d 250;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  profiles: Profile[] \u003d []; // List of profiles taken from profiles.json"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  blankProfile: Profile \u003d { profileName: \u0027\u0027, repoName: \u0027\u0027 }; // A blank profile to reset values"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  animationActivated \u003d false; // Assists color change animations."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  selectedProfile: Profile \u003d this.blankProfile;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @Input() urlEncodedSessionName: string;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Output() selectedProfileEmitter: EventEmitter\u003cProfile\u003e \u003d new EventEmitter\u003cProfile\u003e();"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  profilesData \u003d {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    isDirectoryMessageVisible: false,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    fileName: null,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    fileDirectory: null"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"  constructor(public errorDialog: MatDialog, public profileService: ProfileService, public errorHandlingService: ErrorHandlingService) {}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    this.initProfiles();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Activates the button selection animation and opens the file selector."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * @param fileInput - OS default file selector."},{"lineNumber":54,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  fileSelectorInitiation(fileInput: HTMLInputElement): void {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.animationActivated \u003d true;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      this.animationActivated \u003d false;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      fileInput.click();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }, this.ANIMATION_DURATION);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * Reads the user selected file"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  fileSelected(event: Event): void {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const target \u003d event.target as HTMLInputElement;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const file \u003d target.files[0];"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    const reader \u003d new FileReader();"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    reader.onload \u003d () \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      if (!(reader.result instanceof ArrayBuffer)) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          const { profiles } \u003d JSON.parse(reader.result);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          this.profileService.validateProfiles(profiles);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          this.profiles \u003d profiles.concat(this.profiles).filter((p) \u003d\u003e !!p);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          target.value \u003d \u0027\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (e) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          this.openErrorDialog();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    reader.readAsText(file);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Processes available Profiles information from the external repository."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  initProfiles(): void {"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"    this.profileService"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"      .fetchExternalProfiles()"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"      .then((externalProfiles) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"        this.profiles \u003d this.profiles.concat(externalProfiles).filter((p) \u003d\u003e !!p);"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"      .then(() \u003d\u003e this.setUrlEncodedProfile(this.profiles))"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"      .catch((e) \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (e \u003d\u003d\u003d MALFORMED_PROFILES_ERROR) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          this.openErrorDialog();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(e);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Makes Error dialog visible to the user."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  openErrorDialog(): void {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    this.errorDialog.open(JsonParseErrorDialogComponent);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   * Sends the selected profile information to listening component."},{"lineNumber":114,"author":{"gitId":"-"},"content":"   * @param profile - Profile selected by user."},{"lineNumber":115,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  selectProfile(profile: Profile): void {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    if (profile \u003d\u003d\u003d this.blankProfile || isValidProfile(profile)) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      this.selectedProfileEmitter.emit(profile);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      this.openErrorDialog();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  setUrlEncodedProfile(validProfiles: Profile[]) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    if (!this.urlEncodedSessionName) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"    const profile \u003d validProfiles.find((profile) \u003d\u003e profile.profileName \u003d\u003d\u003d this.urlEncodedSessionName);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    if (profile) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      this.selectedProfile.profileName \u003d this.urlEncodedSessionName;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      this.selectProfile(profile);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(new Error(\u0027Invalid URL provided session\u0027));"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":17,"-":119}},{"path":"src/app/auth/session-selection/session-selection.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":".login-field {"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"  width: 100%;"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"}"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":".sign-in-button {"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"  background: #f7fcfe;"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"  line-height: 45px;"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"  border: 1px solid currentColor;"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"  width: 100%;"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"}"}],"authorContributionMap":{"chunweii":10}},{"path":"src/app/auth/session-selection/session-selection.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"\u003cmat-card class\u003d\"login-card\"\u003e"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"  \u003cmat-card-header style\u003d\"margin-bottom: 20px\"\u003e"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"    \u003cmat-card-title class\u003d\"login-title\"\u003e Select Your Session \u003c/mat-card-title\u003e"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"  \u003c/mat-card-header\u003e"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"  \u003cform [formGroup]\u003d\"profileForm\" (ngSubmit)\u003d\"setupSession()\"\u003e"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"    \u003capp-profiles"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"      class\u003d\"login-field\""},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"      [urlEncodedSessionName]\u003d\"this.urlEncodedSessionName\""},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"      (selectedProfileEmitter)\u003d\"onProfileSelect($event)\""},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"    \u003e\u003c/app-profiles\u003e"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"    \u003cmat-card-content\u003e"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"      \u003cmat-form-field class\u003d\"login-field\"\u003e"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"        \u003cinput matInput placeholder\u003d\"Settings Location (Org/Repo)\" formControlName\u003d\"session\" required /\u003e"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"      \u003cmat-card-actions\u003e"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"        \u003cbutton"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"          *ngIf\u003d\"!isSettingUpSession\""},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"          class\u003d\"sign-in-button\""},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"          type\u003d\"submit\""},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"          [disabled]\u003d\"profileForm.invalid || isSettingUpSession\""},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"          mat-stroked-button"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"          color\u003d\"primary\""},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"        \u003e"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"          \u003cdiv\u003eSubmit\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"        \u003c/button\u003e"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"        \u003cdiv *ngIf\u003d\"isSettingUpSession\" class\u003d\"spinner-centralize\"\u003e"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"          \u003cmat-spinner [diameter]\u003d\"47\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"        \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"      \u003c/mat-card-actions\u003e"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"    \u003c/mat-card-content\u003e"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"  \u003c/form\u003e"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"\u003c/mat-card\u003e"}],"authorContributionMap":{"chunweii":34}},{"path":"src/app/auth/session-selection/session-selection.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"import { FormBuilder, FormGroup, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"import { Profile } from \u0027../../core/models/profile.model\u0027;"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"import { AuthService, AuthState } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"import { PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"  selector: \u0027app-session-selection\u0027,"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"  templateUrl: \u0027./session-selection.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"  styleUrls: [\u0027./session-selection.component.css\u0027, \u0027../auth.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"})"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"export class SessionSelectionComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"  // isSettingUpSession is used to indicate whether CATcher is in the midst of setting up the session."},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"  isSettingUpSession: boolean;"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"  profileForm: FormGroup;"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"  @Input() urlEncodedSessionName: string;"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"  @Output() sessionEmitter: EventEmitter\u003cstring\u003e \u003d new EventEmitter\u003cstring\u003e();"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"  constructor("},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"    private logger: LoggingService,"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"    private githubService: GithubService,"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"    private phaseService: PhaseService,"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"    private authService: AuthService,"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"    private errorHandlingService: ErrorHandlingService"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"  ) {}"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"  ngOnInit() {"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"    this.isSettingUpSession \u003d false;"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"    this.initProfileForm();"},{"lineNumber":36,"author":{"gitId":"chunweii"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":38,"author":{"gitId":"chunweii"},"content":"  /**"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"   * Fills the login form with data from the given Profile."},{"lineNumber":40,"author":{"gitId":"chunweii"},"content":"   * @param profile - Profile selected by the user."},{"lineNumber":41,"author":{"gitId":"chunweii"},"content":"   */"},{"lineNumber":42,"author":{"gitId":"chunweii"},"content":"  onProfileSelect(profile: Profile): void {"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"    this.profileForm.get(\u0027session\u0027).setValue(profile.repoName);"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"    this.sessionEmitter.emit(profile.repoName);"},{"lineNumber":45,"author":{"gitId":"chunweii"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"  setupSession() {"},{"lineNumber":48,"author":{"gitId":"chunweii"},"content":"    if (this.profileForm.invalid) {"},{"lineNumber":49,"author":{"gitId":"chunweii"},"content":"      return;"},{"lineNumber":50,"author":{"gitId":"chunweii"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"chunweii"},"content":"    this.isSettingUpSession \u003d true;"},{"lineNumber":52,"author":{"gitId":"chunweii"},"content":"    const sessionInformation: string \u003d this.profileForm.get(\u0027session\u0027).value;"},{"lineNumber":53,"author":{"gitId":"chunweii"},"content":"    const org: string \u003d this.getOrgDetails(sessionInformation);"},{"lineNumber":54,"author":{"gitId":"chunweii"},"content":"    const dataRepo: string \u003d this.getDataRepoDetails(sessionInformation);"},{"lineNumber":55,"author":{"gitId":"chunweii"},"content":"    // Persist session information in local storage"},{"lineNumber":56,"author":{"gitId":"chunweii"},"content":"    window.localStorage.setItem(\u0027org\u0027, org);"},{"lineNumber":57,"author":{"gitId":"chunweii"},"content":"    window.localStorage.setItem(\u0027dataRepo\u0027, dataRepo);"},{"lineNumber":58,"author":{"gitId":"chunweii"},"content":"    this.githubService.storeOrganizationDetails(org, dataRepo);"},{"lineNumber":59,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":60,"author":{"gitId":"chunweii"},"content":"    this.logger.info(`Selected Settings Repo: ${sessionInformation}`);"},{"lineNumber":61,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":62,"author":{"gitId":"chunweii"},"content":"    this.phaseService.storeSessionData().subscribe("},{"lineNumber":63,"author":{"gitId":"chunweii"},"content":"      () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"chunweii"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"chunweii"},"content":"          this.authService.startOAuthProcess();"},{"lineNumber":66,"author":{"gitId":"chunweii"},"content":"        } catch (error) {"},{"lineNumber":67,"author":{"gitId":"chunweii"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":68,"author":{"gitId":"chunweii"},"content":"          this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":69,"author":{"gitId":"chunweii"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"chunweii"},"content":"      },"},{"lineNumber":71,"author":{"gitId":"chunweii"},"content":"      (error) \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"chunweii"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":73,"author":{"gitId":"chunweii"},"content":"        this.isSettingUpSession \u003d false;"},{"lineNumber":74,"author":{"gitId":"chunweii"},"content":"      },"},{"lineNumber":75,"author":{"gitId":"chunweii"},"content":"      () \u003d\u003e (this.isSettingUpSession \u003d false)"},{"lineNumber":76,"author":{"gitId":"chunweii"},"content":"    );"},{"lineNumber":77,"author":{"gitId":"chunweii"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":79,"author":{"gitId":"chunweii"},"content":"  /**"},{"lineNumber":80,"author":{"gitId":"chunweii"},"content":"   * Extracts the Organization Details from the input sessionInformation."},{"lineNumber":81,"author":{"gitId":"chunweii"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":82,"author":{"gitId":"chunweii"},"content":"   */"},{"lineNumber":83,"author":{"gitId":"chunweii"},"content":"  private getOrgDetails(sessionInformation: string) {"},{"lineNumber":84,"author":{"gitId":"chunweii"},"content":"    return sessionInformation.split(\u0027/\u0027)[0];"},{"lineNumber":85,"author":{"gitId":"chunweii"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":87,"author":{"gitId":"chunweii"},"content":"  /**"},{"lineNumber":88,"author":{"gitId":"chunweii"},"content":"   * Extracts the Data Repository Details from the input sessionInformation."},{"lineNumber":89,"author":{"gitId":"chunweii"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":90,"author":{"gitId":"chunweii"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"chunweii"},"content":"  private getDataRepoDetails(sessionInformation: string) {"},{"lineNumber":92,"author":{"gitId":"chunweii"},"content":"    return sessionInformation.split(\u0027/\u0027)[1];"},{"lineNumber":93,"author":{"gitId":"chunweii"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":95,"author":{"gitId":"chunweii"},"content":"  private initProfileForm() {"},{"lineNumber":96,"author":{"gitId":"chunweii"},"content":"    this.profileForm \u003d this.formBuilder.group({"},{"lineNumber":97,"author":{"gitId":"chunweii"},"content":"      session: [\u0027\u0027, Validators.required]"},{"lineNumber":98,"author":{"gitId":"chunweii"},"content":"    });"},{"lineNumber":99,"author":{"gitId":"chunweii"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"chunweii"},"content":"}"}],"authorContributionMap":{"chunweii":100}},{"path":"src/app/core/directives/form-disable-control.directive.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Directive, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgControl } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Directive({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027[disableControl]\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"})"},{"lineNumber":7,"author":{"gitId":"-"},"content":"export class FormDisableControlDirective {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  @Input() set disableControl(condition: boolean) {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    condition ? this.ngControl.control.disable() : this.ngControl.control.enable();"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  constructor(private ngControl: NgControl) {}"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":12}},{"path":"src/app/core/guards/auth.guard.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRouteSnapshot, CanActivate, CanLoad, Route, Router, RouterStateSnapshot, UrlSegment } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../services/auth.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":8,"author":{"gitId":"-"},"content":"})"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export class AuthGuard implements CanActivate, CanLoad {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  constructor(private auth: AuthService, private router: Router) {}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable\u003cboolean\u003e | Promise\u003cboolean\u003e | boolean {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    if (this.auth.isAuthenticated()) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      this.router.navigate([\u0027\u0027]);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  canLoad(route: Route, segments: UrlSegment[]): Observable\u003cboolean\u003e | Promise\u003cboolean\u003e | boolean {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    if (this.auth.isAuthenticated()) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      this.router.navigate([\u0027\u0027]);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":28}},{"path":"src/app/core/guards/can-deactivate-issue-guard.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Location } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRouteSnapshot, CanDeactivate, Router, RouterStateSnapshot } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../services/dialog.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class CanDeactivateIssueGuard implements CanDeactivate\u003cany\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  // Messages for the modal dialog view"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  private readonly modalDialogMessages \u003d [\u0027Do you wish to leave the page?\u0027, \u0027You have unsaved changes that will be discarded.\u0027];"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  private readonly yesButtonDialogMessage \u003d \u0027Yes, I wish to leave\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  private readonly noButtonDialogMessage \u003d \"No, I don\u0027t wish to leave\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  constructor(private location: Location, private router: Router, private dialogService: DialogService) {}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   * Makes the dialog visible to the user."},{"lineNumber":20,"author":{"gitId":"-"},"content":"   * @return The Promise of a User Selected boolean."},{"lineNumber":21,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  openDialog(): Observable\u003cboolean\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"      this.modalDialogMessages,"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"      this.yesButtonDialogMessage,"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"      this.noButtonDialogMessage"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    return dialogRef.afterClosed();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"  canDeactivate("},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    component: any,"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    currentRoute: ActivatedRouteSnapshot,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    currentState: RouterStateSnapshot,"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    nextState?: RouterStateSnapshot"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"  ): Observable\u003cboolean\u003e {"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    if (component.canDeactivate \u0026\u0026 !component.canDeactivate() \u0026\u0026 nextState.url !\u003d\u003d \u0027/\u0027) {"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"      const currentUrlTree \u003d this.router.createUrlTree([], currentRoute);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      const currentUrl \u003d currentUrlTree.toString();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      this.location.go(currentUrl);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      return this.openDialog();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    return of(true);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":14,"-":32}},{"path":"src/app/core/guards/user-confirmation/user-confirmation.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MAT_DIALOG_DATA, MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CanDeactivateIssueGuard } from \u0027../can-deactivate-issue-guard.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The UserConfirmationComponent is responsible for rendering the UserDialog"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * to verify if certain changes made to relevant inputs are to be discarded."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-user-confirmation\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./user-confirmation.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./user-confirmation.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class UserConfirmationComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  // Injection of a reference to Dialog from the Service that it is to be"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  // displayed in."},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  constructor(public dialogRef: MatDialogRef\u003cCanDeactivateIssueGuard\u003e, @Inject(MAT_DIALOG_DATA) public data) {}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * Closes the dialog."},{"lineNumber":24,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  onNoClick(): void {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.dialogRef.close(false);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":26}},{"path":"src/app/core/models/generators/github-issue.generator.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../github/github-issue.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export default function generateGithubIssuesArray(numberOfElements: number \u003d 1): Array\u003cGithubIssue\u003e {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  const created_and_updated_date: string \u003d getRandomDate().toISOString();"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"  return new Array\u003cGithubIssue\u003e(10).map((value: GithubIssue, index: number, array: GithubIssue[]) \u003d\u003e {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    return new GithubIssue({"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      id: index,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      number: Math.random(),"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      assignees: undefined,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      body: `Automatically Generated Issue No id: ${index}.`,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      created_at: created_and_updated_date,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      labels: undefined,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      title: `Autogen Issue ${index}`,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      updated_at: created_and_updated_date,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      url: \u0027\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      user: undefined,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      comments: undefined"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Returns a random Date between the start and end dates."},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @param start - Date representing the start of the date range. Default: 1/1/2018"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @param end - Date representing the end of the date range. Default: Current Date"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"function getRandomDate(start: Date \u003d new Date(2018, 1, 1), end: Date \u003d new Date()): Date {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":28}},{"path":"src/app/core/models/github/github-comment.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export class GithubComment {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  body: string;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  created_at: string;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  id: number;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  issue_url: string;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  updated_at: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  url: string; // api url"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  user: {"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    login: string;"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    id: number;"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    avatar_url: string;"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    url: string;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":4,"-":10}},{"path":"src/app/core/models/github/github-graphql.issue.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueModelFragment } from \u0027../../../../../graphql/graphql-types\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { flattenEdges } from \u0027../../../shared/lib/graphgql-common\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027./github-issue.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"export class GithubGraphqlIssue extends GithubIssue {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  constructor(issue: IssueModelFragment) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    super({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      id: issue.id,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      number: issue.number,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      body: issue.body,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      created_at: String(issue.createdAt),"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      updated_at: String(issue.updatedAt),"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      url: String(issue.url),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      title: issue.title,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      state: issue.state,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      user: {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        login: issue.author.login,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        url: issue.author.url,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        avatar_url: issue.author.avatarUrl"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      assignees: flattenEdges(issue.assignees.edges),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      labels: flattenEdges(issue.labels.edges),"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"      comments: flattenEdges(issue.comments.edges, (node) \u003d\u003e ({"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ...node,"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        id: node.databaseId"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"      }))"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":4,"-":25}},{"path":"src/app/core/models/github/github-issue-filter.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueFilters, IssueState } from \u0027../../../../../graphql/graphql-types\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export type RestGithubIssueState \u003d \u0027open\u0027 | \u0027close\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export type RestGithubSortBy \u003d \u0027created\u0027 | \u0027updated\u0027 | \u0027comments\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"export type RestGithubSortDir \u003d \u0027asc\u0027 | \u0027desc\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"export interface RestGithubIssueFilterData {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  state?: RestGithubIssueState;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  labels?: Array\u003cstring\u003e;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  sort?: RestGithubSortBy;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  direction?: RestGithubSortDir;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  since?: string; // ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  milestone?: number | \u0027*\u0027 | \u0027none\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  assignee?: string;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  creator?: string;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  mentioned?: string;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A filter to filter out the issues to retrieve from github."},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Ref: https://developer.github.com/v3/issues/#parameters-3"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export default class RestGithubIssueFilter implements RestGithubIssueFilterData {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  state?: RestGithubIssueState;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  labels?: Array\u003cstring\u003e;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  sort?: RestGithubSortBy;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  direction?: RestGithubSortDir;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  since?: string;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  milestone?: number | \u0027*\u0027 | \u0027none\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  assignee?: string;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  creator?: string;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  mentioned?: string;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  constructor(data: RestGithubIssueFilterData) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    Object.assign(this, data);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  convertToGraphqlFilter(): IssueFilters {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    return \u003cIssueFilters\u003e{"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      assignee: this.assignee,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      createdBy: this.creator,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      labels: this.labels,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      mentioned: this.mentioned,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      milestone: this.milestone,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      since: this.since,"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"      states: [this.state \u003d\u003d\u003d \u0027close\u0027 ? IssueState.Closed : IssueState.Open]"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":47}},{"path":"src/app/core/models/github/github-issue.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueState } from \u0027../../../../../graphql/graphql-types\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027./github-comment.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027./github-label.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"export class GithubIssue {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  id: string; // Github\u0027s backend\u0027s id"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  number: number; // Issue\u0027s display id"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  assignees: Array\u003c{"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    id: number;"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    login: string;"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    url: string;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }\u003e;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  body: string;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  created_at: string;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  labels: Array\u003cGithubLabel\u003e;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  state: IssueState;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  title: string;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  updated_at: string;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  url: string;"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  user: {"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    // Author of the issue"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    login: string;"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    avatar_url: string;"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    url: string;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  comments: Array\u003cGithubComment\u003e;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  constructor(githubIssue: {}) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Object.assign(this, githubIssue);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    this.labels \u003d [];"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    for (const label of githubIssue[\u0027labels\u0027]) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      this.labels.push(new GithubLabel(label));"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * @param name Depending on the isCategorical flag, this name either refers to the category name of label or the exact name of label."},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * @param isCategorical Whether the label is categorical."},{"lineNumber":40,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  findLabel(name: string, isCategorical: boolean \u003d true): string {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    if (!isCategorical) {"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"      const label \u003d this.labels.find((l) \u003d\u003e !l.isCategorical() \u0026\u0026 l.name \u003d\u003d\u003d name);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      return label ? label.getValue() : undefined;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Find labels with the same category name as what is specified in the parameter."},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    const labels \u003d this.labels.filter((l) \u003d\u003e l.isCategorical() \u0026\u0026 l.getCategory() \u003d\u003d\u003d name);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    if (labels.length \u003d\u003d\u003d 0) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      return undefined;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    } else if (labels.length \u003d\u003d\u003d 1) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      return labels[0].getValue();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      // If Label order is not specified, return the first label value else"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      // If Label order is specified, return the highest ranking label value"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      if (!GithubLabel.LABEL_ORDER[name]) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return labels[0].getValue();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        const order \u003d GithubLabel.LABEL_ORDER[name];"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        return labels"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"          .reduce((result, currLabel) \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return order[currLabel.getValue()] \u003e order[result.getValue()] ? currLabel : result;"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"          })"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"          .getValue();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  findTeamId(): string {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    return `${this.findLabel(\u0027team\u0027)}.${this.findLabel(\u0027tutorial\u0027)}`;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":14,"-":58}},{"path":"src/app/core/models/github/github-label.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export class GithubLabel {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  static readonly LABEL_ORDER \u003d {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    severity: { Low: 0, Medium: 1, High: 2 },"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    type: { DocumentationBug: 0, FunctionalityBug: 1 }"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  static readonly LABELS \u003d {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    severity: \u0027severity\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    type: \u0027type\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    response: \u0027response\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    duplicated: \u0027duplicated\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    status: \u0027status\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    unsure: \u0027unsure\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    pending: \u0027pending\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    team: \u0027team\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    tutorial: \u0027tutorial\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  color: string;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  id: number;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  name: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  category: string;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  label: string;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  url: string;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  constructor(githubLabels: {}) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Object.assign(this, githubLabels);"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    if (this.isCategorical()) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      this.category \u003d this.name.split(\u0027.\u0027)[0];"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      this.label \u003d this.name.split(\u0027.\u0027)[1];"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      this.category \u003d this.name;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      this.label \u003d this.name;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    Object.freeze(this);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  getCategory(): string {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    return this.category;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  getValue(): string {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    return this.label;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  isCategorical(): boolean {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const regex \u003d /^[^.]+\\.[^.]+$/;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    return regex.test(this.name);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":49}},{"path":"src/app/core/models/hidden-data.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * A model to represent a hidden dataset stored in a string."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export class HiddenData {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  private static REGEX \u003d /\u003c!--(.*?)--\u003e/gm;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  readonly originalStringWithoutHiddenData: string;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  private data \u003d new Map\u003cstring, string\u003e();"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  constructor(data: string) {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    const matches \u003d data.match(HiddenData.REGEX);"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    this.originalStringWithoutHiddenData \u003d data.replace(HiddenData.REGEX, \u0027\u0027).trim();"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    if (matches \u003d\u003d\u003d null) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    for (const match of matches) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      let info \u003d match.replace(\u0027\u003c!--\u0027, \u0027\u0027).trim();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      info \u003d info.replace(\u0027--\u003e\u0027, \u0027\u0027).trim();"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"      const keyValuePair \u003d info.split(\u0027:\u0027).map((v) \u003d\u003e v.trim());"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      if (keyValuePair.length !\u003d\u003d 2) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.originalStringWithoutHiddenData +\u003d `\\n${match}`;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"      const [key, value] \u003d keyValuePair;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      if (!this.data.has(key)) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.data.set(key, value);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * @param originalString - The original string to append the hidden data into."},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * @param hiddenData - The map of hidden data to be embedded into the string."},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * @returns - The string with the embedded data."},{"lineNumber":37,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  static embedDataIntoString(originalString: string, hiddenData: Map\u003cstring, string\u003e): string {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    let result \u003d originalString;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    hiddenData.forEach((value, key) \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      result +\u003d `\\n\u003c!--${key}: ${value}--\u003e`;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  toString(): string {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    let result \u003d \u0027\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    this.data.forEach((value, key) \u003d\u003e {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      result +\u003d `\u003c!--${key}: ${value}--\u003e`;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":52}},{"path":"src/app/core/models/issue.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027./comment.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027./github/github-comment.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027./github/github-issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027./github/github-label.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HiddenData } from \u0027./hidden-data.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027./issue-dispute.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Team } from \u0027./team.model\u0027;"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import { TeamAcceptedTemplate } from \u0027./templates/team-accepted-template.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TeamResponseTemplate } from \u0027./templates/team-response-template.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TesterResponseTemplate } from \u0027./templates/tester-response-template.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { TutorModerationIssueTemplate } from \u0027./templates/tutor-moderation-issue-template.model\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TutorModerationTodoTemplate } from \u0027./templates/tutor-moderation-todo-template.model\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { TesterResponse } from \u0027./tester-response.model\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class Issue {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  /** Basic Fields */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  readonly globalId: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  readonly id: number;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  readonly created_at: string;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  readonly githubIssue: GithubIssue;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  githubComments: GithubComment[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  title: string;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  description: string;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  hiddenDataInDescription: HiddenData;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  /** Fields derived from Labels */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  severity: string;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  type: string;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  responseTag?: string;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  duplicated?: boolean;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  status?: string;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  pending?: string;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  unsure?: boolean;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  teamAssigned?: Team;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  /** Depending on the phase, assignees attribute can be derived from Github\u0027s assignee feature OR from the Github\u0027s issue description */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  assignees?: string[];"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  /** Fields derived from parsing of Github\u0027s issue description */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  duplicateOf?: number;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  teamResponse?: string;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  testerResponses?: TesterResponse[];"},{"lineNumber":45,"author":{"gitId":"gycgabriel"},"content":"  testerDisagree?: boolean; // whether tester agrees or disagree to teams reponse"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  issueComment?: IssueComment; // Issue comment is used for Tutor Response and Tester Response"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  issueDisputes?: IssueDispute[];"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  teamChosenSeverity?: string;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  teamChosenType?: string;"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"  teamAccepted?: boolean;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * Formats the text to create space at the end of the user input to prevent any issues with"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * the markdown interpretation."},{"lineNumber":55,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * Brought over from comment-editor.component.ts"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  static formatText(text: string): string {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    if (text \u003d\u003d\u003d null) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    if (text \u003d\u003d\u003d undefined) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      return undefined;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const newLinesRegex \u003d /[\\n\\r]/gi;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const textSplitArray \u003d text.split(newLinesRegex);"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"    if (textSplitArray.filter((split) \u003d\u003e split.trim() !\u003d\u003d \u0027\u0027).length \u003e 0) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      return `${text}\\n\\n`;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      return text;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * Processes and cleans a raw issue description obtained from user input."},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  static updateDescription(description: string): string {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    const defaultString \u003d \u0027No details provided by bug reporter.\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    return Issue.orDefaultString(Issue.formatText(description), defaultString);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   * Processes and cleans a raw team response obtained from user input."},{"lineNumber":86,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  static updateTeamResponse(teamResponse: string): string {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const defaultString \u003d \u0027No details provided by team.\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    return Issue.orDefaultString(Issue.formatText(teamResponse), defaultString);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   * Given two strings, returns the first if it is not an empty string or a false value such as null/undefined."},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Returns the second string if the first is an empty string."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  private static orDefaultString(stringA: string, def: string): string {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    if (!stringA) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      return def;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    return stringA.length !\u003d\u003d 0 ? stringA : def;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  protected constructor(githubIssue: GithubIssue) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /** Basic Fields */"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    this.globalId \u003d githubIssue.id;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    this.id \u003d +githubIssue.number;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.created_at \u003d moment(githubIssue.created_at).format(\u0027lll\u0027);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    this.title \u003d githubIssue.title;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    this.hiddenDataInDescription \u003d new HiddenData(githubIssue.body);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.description \u003d Issue.updateDescription(this.hiddenDataInDescription.originalStringWithoutHiddenData);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.githubIssue \u003d githubIssue;"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /** Fields derived from Labels */"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    this.severity \u003d githubIssue.findLabel(GithubLabel.LABELS.severity);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.type \u003d githubIssue.findLabel(GithubLabel.LABELS.type);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.responseTag \u003d githubIssue.findLabel(GithubLabel.LABELS.response);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    this.duplicated \u003d !!githubIssue.findLabel(GithubLabel.LABELS.duplicated, false);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    this.status \u003d githubIssue.findLabel(GithubLabel.LABELS.status);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    this.pending \u003d githubIssue.findLabel(GithubLabel.LABELS.pending);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  public static createPhaseBugReportingIssue(githubIssue: GithubIssue): Issue {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    return new Issue(githubIssue);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  public static createPhaseTeamResponseIssue(githubIssue: GithubIssue, teamData: Team): Issue {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    const template \u003d new TeamResponseTemplate(githubIssue.comments);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    issue.teamAssigned \u003d teamData;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    issue.issueComment \u003d template.comment;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d template.teamResponse \u0026\u0026 Issue.updateTeamResponse(template.teamResponse.content);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    issue.duplicateOf \u003d template.duplicateOf \u0026\u0026 template.duplicateOf.issueNumber;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    issue.duplicated \u003d issue.duplicateOf !\u003d\u003d undefined \u0026\u0026 issue.duplicateOf !\u003d\u003d null;"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"    issue.assignees \u003d githubIssue.assignees.map((assignee) \u003d\u003e assignee.login);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"  public static createPhaseTesterResponseIssue(githubIssue: GithubIssue): Issue {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"    const testerResponseTemplate \u003d new TesterResponseTemplate(githubIssue.comments);"},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"    const teamAcceptedTemplate \u003d new TeamAcceptedTemplate(githubIssue.comments);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":146,"author":{"gitId":"luminousleek"},"content":"    issue.teamAccepted \u003d teamAcceptedTemplate.teamAccepted;"},{"lineNumber":147,"author":{"gitId":"luminousleek"},"content":"    issue.issueComment \u003d testerResponseTemplate.comment;"},{"lineNumber":148,"author":{"gitId":"luminousleek"},"content":"    issue.teamResponse \u003d testerResponseTemplate.teamResponse \u0026\u0026 Issue.updateTeamResponse(testerResponseTemplate.teamResponse.content);"},{"lineNumber":149,"author":{"gitId":"luminousleek"},"content":"    issue.testerResponses \u003d testerResponseTemplate.testerResponse \u0026\u0026 testerResponseTemplate.testerResponse.testerResponses;"},{"lineNumber":150,"author":{"gitId":"gycgabriel"},"content":"    issue.testerDisagree \u003d testerResponseTemplate.testerDisagree;"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"luminousleek"},"content":"    issue.teamChosenSeverity \u003d testerResponseTemplate.teamChosenSeverity || null;"},{"lineNumber":153,"author":{"gitId":"luminousleek"},"content":"    issue.teamChosenType \u003d testerResponseTemplate.teamChosenType || null;"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"  public static createPhaseModerationIssue(githubIssue: GithubIssue, teamData: Team): Issue {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    const issueTemplate \u003d new TutorModerationIssueTemplate(githubIssue);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    const todoTemplate \u003d new TutorModerationTodoTemplate(githubIssue.comments);"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    issue.teamAssigned \u003d teamData;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    issue.description \u003d issueTemplate.description.content;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d issueTemplate.teamResponse \u0026\u0026 Issue.updateTeamResponse(issueTemplate.teamResponse.content);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    issue.issueDisputes \u003d issueTemplate.dispute.disputes;"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    if (todoTemplate.moderation \u0026\u0026 todoTemplate.comment) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      issue.issueDisputes \u003d todoTemplate.moderation.disputesToResolve.map((dispute, i) \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        dispute.description \u003d issueTemplate.dispute.disputes[i].description;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return dispute;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      issue.issueComment \u003d todoTemplate.comment;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   * Creates a new copy of an exact same issue."},{"lineNumber":181,"author":{"gitId":"-"},"content":"   * This would come useful in the event when you want to update the issue but not the actual"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   * state of the application."},{"lineNumber":183,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  clone(phase: Phase): Issue {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    switch (phase) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(this.githubIssue);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTeamResponseIssue(this.githubIssue, this.teamAssigned);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTesterResponseIssue(this.githubIssue);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return Issue.createPhaseModerationIssue(this.githubIssue, this.teamAssigned);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(this.githubIssue);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   * Depending on the phase of the peer testing, each phase will have a response associated to them."},{"lineNumber":201,"author":{"gitId":"-"},"content":"   * This function will allow the current instance of issue to retain the state of response of the given `issue`."},{"lineNumber":202,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   * @param phase - The phase in which you want to retain your responses."},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * @param issue - The issue which you want your current instance to retain from."},{"lineNumber":205,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  retainResponses(phase: Phase, issue: Issue) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.issueComment \u003d issue.issueComment;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    this.githubComments \u003d issue.githubComments;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    switch (phase) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        this.description \u003d issue.description;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        this.teamResponse \u003d issue.teamResponse;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        this.testerResponses \u003d issue.testerResponses;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        this.teamResponse \u003d issue.teamResponse;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        this.issueDisputes \u003d issue.issueDisputes;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Updates the tester\u0027s responses and team response based on the given githubComment."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   * @param githubComment - A version of githubComment to update the issue with."},{"lineNumber":231,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  updateTesterResponse(githubComment: GithubComment): void {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    const template \u003d new TesterResponseTemplate([githubComment]);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    this.issueComment \u003d template.comment;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    this.teamResponse \u003d template.teamResponse \u0026\u0026 template.teamResponse.content;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    this.testerResponses \u003d template.testerResponse \u0026\u0026 template.testerResponse.testerResponses;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":240,"author":{"gitId":"-"},"content":"   * Updates the tutor\u0027s resolution of the disputes with a new version of githubComment."},{"lineNumber":241,"author":{"gitId":"-"},"content":"   * @param githubComment - A version of githubComment to update the dispute with."},{"lineNumber":242,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  updateDispute(githubComment: GithubComment): void {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    const todoTemplate \u003d new TutorModerationTodoTemplate([githubComment]);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    this.issueComment \u003d todoTemplate.comment;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    this.issueDisputes \u003d todoTemplate.moderation.disputesToResolve.map((dispute, i) \u003d\u003e {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      dispute.description \u003d this.issueDisputes[i].description;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      return dispute;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"  createGithubIssueDescription(): string {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    return `${this.description}\\n${this.hiddenDataInDescription.toString()}`;"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#dev-response-phase"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  createGithubTeamResponse(): string {"},{"lineNumber":258,"author":{"gitId":"luminousleek"},"content":"    return ("},{"lineNumber":259,"author":{"gitId":"luminousleek"},"content":"      `# Team\\\u0027s Response\\n${this.teamResponse}\\n` +"},{"lineNumber":260,"author":{"gitId":"luminousleek"},"content":"      `## Duplicate status (if any):\\n${this.duplicateOf ? `Duplicate of #${this.duplicateOf}` : `--`}`"},{"lineNumber":261,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#tutor-moderation"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  createGithubTutorResponse(): string {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    let tutorResponseString \u003d \u0027# Tutor Moderation\\n\\n\u0027;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    for (const issueDispute of this.issueDisputes) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      tutorResponseString +\u003d issueDispute.toTutorResponseString();"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    return tutorResponseString;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#teams-response-1"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  createGithubTesterResponse(): string {"},{"lineNumber":275,"author":{"gitId":"luminousleek"},"content":"    return ("},{"lineNumber":276,"author":{"gitId":"luminousleek"},"content":"      `# Team\\\u0027s Response\\n${this.teamResponse}\\n` +"},{"lineNumber":277,"author":{"gitId":"luminousleek"},"content":"      `# Items for the Tester to Verify\\n${this.getTesterResponsesString(this.testerResponses)}`"},{"lineNumber":278,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":282,"author":{"gitId":"-"},"content":"   * Gets the number of unresolved disputes in an Issue."},{"lineNumber":283,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  numOfUnresolvedDisputes(): number {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    if (!this.issueDisputes) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      return 0;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    return this.issueDisputes.reduce((prev, current) \u003d\u003e prev + Number(!current.isDone()), 0);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"  private getTesterResponsesString(testerResponses: TesterResponse[]): string {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    let testerResponsesString \u003d \u0027\u0027;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    for (const testerResponse of testerResponses) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      testerResponsesString +\u003d testerResponse.toString();"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    return testerResponsesString;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"export interface Issues {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"  [id: number]: Issue;"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"export const SEVERITY_ORDER \u003d { \u0027-\u0027: 0, VeryLow: 1, Low: 2, Medium: 3, High: 4 };"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"export const ISSUE_TYPE_ORDER \u003d { \u0027-\u0027: 0, DocumentationBug: 1, FeatureFlaw: 2, FunctionalityBug: 3 };"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"export enum STATUS {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  Incomplete \u003d \u0027Incomplete\u0027,"},{"lineNumber":311,"author":{"gitId":"luminousleek"},"content":"  Done \u003d \u0027Done\u0027"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"export const IssuesFilter \u003d {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  phaseBugReporting: {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    Student: \u0027FILTER_BY_CREATOR\u0027,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    Tutor: \u0027NO_FILTER\u0027,"},{"lineNumber":318,"author":{"gitId":"luminousleek"},"content":"    Admin: \u0027NO_FILTER\u0027"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  phaseTeamResponse: {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    Student: \u0027FILTER_BY_TEAM\u0027,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"},{"lineNumber":323,"author":{"gitId":"luminousleek"},"content":"    Admin: \u0027NO_FILTER\u0027"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  phaseTesterResponse: {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    Student: \u0027NO_FILTER\u0027,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    Tutor: \u0027NO_ACCESS\u0027,"},{"lineNumber":328,"author":{"gitId":"luminousleek"},"content":"    Admin: \u0027NO_FILTER\u0027"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  phaseModeration: {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    Student: \u0027NO_ACCESS\u0027,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"},{"lineNumber":333,"author":{"gitId":"luminousleek"},"content":"    Admin: \u0027NO_FILTER\u0027"},{"lineNumber":334,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":335,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"luminousleek":25,"-":308,"gycgabriel":2}},{"path":"src/app/core/models/label.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export class Label {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  labelCategory: string;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  labelValue: string;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  labelColor: string;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  labelDefinition?: string;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  constructor(labelCategory: string, labelValue: string, labelColor: string, labelDefinition?: string) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    this.labelValue \u003d labelValue;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    this.labelColor \u003d labelColor;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    this.labelCategory \u003d labelCategory;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    this.labelDefinition \u003d labelDefinition;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   * Returns the name of the label with the format of"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   * \u0027category\u0027.\u0027value\u0027 (e.g. severity.Low) if a category exists or"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   * \u0027value\u0027 if the category does not exist."},{"lineNumber":18,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  public getFormattedName(): string {"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    return this.labelCategory \u003d\u003d\u003d undefined || this.labelCategory \u003d\u003d\u003d \u0027\u0027"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      ? this.labelValue"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"      : this.labelCategory.concat(\u0027.\u0027, this.labelValue);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  public equals(label: Label) {"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    return this.labelValue \u003d\u003d\u003d label.labelValue \u0026\u0026 this.labelColor \u003d\u003d\u003d label.labelColor \u0026\u0026 this.labelCategory \u003d\u003d\u003d label.labelCategory;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":25}},{"path":"src/app/core/models/parser/roles.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export interface Roles {"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  students?: {"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    [loginId: string]: string;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"  tutors?: {"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    [loginId: string]: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  admins?: {"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    [loginId: string]: string;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":6,"-":5}},{"path":"src/app/core/models/parser/students.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export interface Students {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  [studentname: string]: {"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    teamId?: string;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":4}},{"path":"src/app/core/models/parser/tabulated-user-data.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { Admins } from \u0027./admins.model\u0027;"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import { Roles } from \u0027./roles.model\u0027;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import { Students } from \u0027./students.model\u0027;"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import { Teams } from \u0027./teams.model\u0027;"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import { Tutors } from \u0027./tutors.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"export interface TabulatedUserData {"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  \u0027admins-allocation\u0027?: Admins;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  roles?: Roles;"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  \u0027students-allocation\u0027?: Students;"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  \u0027team-structure\u0027?: Teams;"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  \u0027tutors-allocation\u0027?: Tutors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":9,"-":4}},{"path":"src/app/core/models/parser/teams.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export interface Teams {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  [teamId: string]: {"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    [teamMember: string]: string;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":4}},{"path":"src/app/core/models/parser/tutors.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export interface Tutors {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  [name: string]: {"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    [tutorialGroup: string]: string;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":4}},{"path":"src/app/core/models/session.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { pipe } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { throwIfFalse } from \u0027../../shared/lib/custom-ops\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Phase } from \u0027./phase.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"export interface SessionData {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  openPhases: Phase[];"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  [Phase.phaseBugReporting]: string;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  [Phase.phaseTeamResponse]: string;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  [Phase.phaseTesterResponse]: string;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  [Phase.phaseModeration]: string;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"export const SESSION_DATA_UNAVAILABLE \u003d \u0027Session Data Unavailable\u0027;"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"export const SESSION_DATA_MISSING_OPENPHASES_KEY \u003d \"Session data does not define an \u0027openPhases\u0027 key\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export const NO_ACCESSIBLE_PHASES \u003d \u0027There are no accessible phases\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export const NO_VALID_OPEN_PHASES \u003d \u0027Invalid Open Phases detected\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export const OPENED_PHASE_REPO_UNDEFINED \u003d \u0027Opened Phase has no repo defined\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"export function assertSessionDataIntegrity() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  return pipe("},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    throwIfFalse("},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"      (sessionData) \u003d\u003e sessionData !\u003d\u003d undefined,"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"      () \u003d\u003e new Error(SESSION_DATA_UNAVAILABLE)"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    ),"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    throwIfFalse(isOpenPhasesKeyPresent, () \u003d\u003e new Error(SESSION_DATA_MISSING_OPENPHASES_KEY)),"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    throwIfFalse(hasOpenPhases, () \u003d\u003e new Error(NO_ACCESSIBLE_PHASES)),"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    throwIfFalse(areOpenPhasesValid, () \u003d\u003e new Error(NO_VALID_OPEN_PHASES)),"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    throwIfFalse(isOpenPhasesRepoDefined, () \u003d\u003e new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  );"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Checks if Session Data has all its crucial fields present."},{"lineNumber":34,"author":{"gitId":"-"},"content":" * @param sessionData"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"function isOpenPhasesKeyPresent(sessionData: SessionData): boolean {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  return sessionData.openPhases !\u003d null;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Checks if Open Phases belong to a pre-defined Phase."},{"lineNumber":42,"author":{"gitId":"-"},"content":" * @param sessionData"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"function areOpenPhasesValid(sessionData: SessionData): boolean {"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"  return sessionData.openPhases.reduce("},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    (isOpenPhasesValidSoFar: boolean, currentOpenPhase: string) \u003d\u003e isOpenPhasesValidSoFar \u0026\u0026 currentOpenPhase in Phase,"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    true"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"  );"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":52,"author":{"gitId":"-"},"content":" * Checks if each stated Open Phase has an associated repo defined as well."},{"lineNumber":53,"author":{"gitId":"-"},"content":" * @param sessionData"},{"lineNumber":54,"author":{"gitId":"-"},"content":" */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"function isOpenPhasesRepoDefined(sessionData: SessionData): boolean {"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"  return sessionData.openPhases.reduce("},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    (isOpenPhasesRepoDefinedSoFar: boolean, currentOpenPhase: string) \u003d\u003e isOpenPhasesRepoDefinedSoFar \u0026\u0026 !!sessionData[currentOpenPhase],"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"    true"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"  );"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"function hasOpenPhases(sessionData: SessionData): boolean {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  return sessionData.openPhases.length !\u003d\u003d 0;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":17,"-":47}},{"path":"src/app/core/models/templates/sections/issue-dispute-section.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../../issue-dispute.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Section, SectionalDependency } from \u0027./section.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"export class IssueDisputeSection extends Section {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  disputes: IssueDispute[] \u003d [];"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  constructor(sectionalDependency: SectionalDependency, unprocessedContent: string) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    super(sectionalDependency, unprocessedContent);"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    if (!this.parseError) {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      let matches;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      const regex \u003d /#{2} *:question: *(.*)[\\r\\n]*([\\s\\S]*?(?\u003d-{19}))/gi;"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"      while ((matches \u003d regex.exec(this.content))) {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        if (matches) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          const [_regexString, title, description] \u003d matches;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          this.disputes.push(new IssueDispute(title, description.trim()));"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  toString(): string {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    let toString \u003d \u0027\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    toString +\u003d `${this.header.toString()}\\n`;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    for (const dispute of this.disputes) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      toString +\u003d `${dispute.toString()}\\n`;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    return toString;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":28}},{"path":"src/app/core/models/templates/sections/moderation-section.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Checkbox } from \u0027../../checkbox.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../../issue-dispute.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Section, SectionalDependency } from \u0027./section.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"export class ModerationSection extends Section {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  disputesToResolve: IssueDispute[] \u003d [];"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  constructor(sectionalDependency: SectionalDependency, unprocessedContent: string) {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    super(sectionalDependency, unprocessedContent);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    if (!this.parseError) {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      let matches;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      const regex \u003d /#{2} *:question: *(.*)[\\n\\r]*(.*)[\\n\\r]*([\\s\\S]*?(?\u003d-{19}))/gi;"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"      while ((matches \u003d regex.exec(this.content))) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        if (matches) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          const [_regexString, title, todo, tutorResponse] \u003d matches;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          const description \u003d `${todo}\\n${tutorResponse}`;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          const newDispute \u003d new IssueDispute(title, description);"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"          newDispute.todo \u003d new Checkbox(todo, false);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          newDispute.tutorResponse \u003d tutorResponse.trim();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          this.disputesToResolve.push(newDispute);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  get todoList(): Checkbox[] {"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    return this.disputesToResolve.map((e) \u003d\u003e e.todo);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  toString(): string {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    let toString \u003d \u0027\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    toString +\u003d `${this.header.toString()}\\n`;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    for (const dispute of this.disputesToResolve) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      toString +\u003d `${dispute.toTutorResponseString()}\\n`;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    return toString;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":37}},{"path":"src/app/core/models/templates/sections/section.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * A SectionalDependency defines a format that is needed to create a successful Section in a template."},{"lineNumber":3,"author":{"gitId":"-"},"content":" * It will require the Section\u0027s header to be defined and the other headers that are present in the template."},{"lineNumber":4,"author":{"gitId":"-"},"content":" *"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Reason for the dependencies on other headers: We need them to create a regex expression that is capable of parsing the current"},{"lineNumber":6,"author":{"gitId":"-"},"content":" *                                               section out of the string."},{"lineNumber":7,"author":{"gitId":"-"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Header } from \u0027../template.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"export interface SectionalDependency {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  sectionHeader: Header;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  remainingTemplateHeaders: Header[];"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class Section {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  header: Header;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  sectionRegex: RegExp;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  content: string;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  parseError: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * @param sectionalDependency The dependency that is need to create a section\u0027s regex"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   * @param unprocessedContent The string that stores the section\u0027s amongst other things"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  constructor(sectionalDependency: SectionalDependency, unprocessedContent: string) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.header \u003d sectionalDependency.sectionHeader;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // If length \u003d\u003d\u003d 0, match till end of string else match till regex hits another section"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    const matchTillRegex \u003d"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"      sectionalDependency.remainingTemplateHeaders.length \u003d\u003d\u003d 0 ? \u0027$\u0027 : sectionalDependency.remainingTemplateHeaders.join(\u0027|\u0027);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.sectionRegex \u003d new RegExp(`(${this.header})\\\\s+([\\\\s\\\\S]*?)(?\u003d${matchTillRegex}|$)`, \u0027i\u0027);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    const matches \u003d this.sectionRegex.exec(unprocessedContent);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    if (matches) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      const [_originalString, _header, description] \u003d matches;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      this.content \u003d description.trim();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      this.parseError \u003d null;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      this.content \u003d null;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      this.parseError \u003d `Unable to extract ${this.header.name} Section`;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":40}},{"path":"src/app/core/models/templates/sections/tester-response-section.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { extractStringBetween } from \u0027../../../../shared/lib/string-utils\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { TesterResponse } from \u0027../../tester-response.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Section, SectionalDependency } from \u0027./section.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"// match format e.g. ## :question: Issue Title"},{"lineNumber":6,"author":{"gitId":"-"},"content":"const matchTitle \u003d \u0027#{2} *:question: *([\\\\w ]+)\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// match format e.g. Team Chose severity.Low \\r\\n Originally (or Team Chose) severity.High \\r\\n"},{"lineNumber":8,"author":{"gitId":"-"},"content":"const matchDescription \u003d \u0027(Team Chose.*[\\\\r\\\\n]* *Originally.*|Team Chose.*[\\\\r\\\\n]*)\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// match format e.g. - [x] (or - [ ]) **Reason for disagreement:** disagreement explanation"},{"lineNumber":10,"author":{"gitId":"-"},"content":"const matchDisagreement \u003d \u0027(- \\\\[x? ?\\\\] I disagree)[\\\\r\\\\n]*\\\\*\\\\*Reason *for *disagreement:\\\\*\\\\* *([\\\\s\\\\S]*?)\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"const matchLinebreak \u003d \u0027[\\\\n\\\\r]-{19}\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class TesterResponseSection extends Section {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  testerResponses: TesterResponse[] \u003d [];"},{"lineNumber":15,"author":{"gitId":"gycgabriel"},"content":"  testerDisagree: boolean;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  teamChosenSeverity?: string;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  teamChosenType?: string;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  ISSUE_SEVERITY_DISPUTE \u003d \u0027Issue severity\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ISSUE_TYPE_DISPUTE \u003d \u0027Issue type\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  TEAM_RESPONSE_DESCRIPTION_TYPE_VALUE_PREFIX \u003d \u0027[`type.\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  TEAM_RESPONSE_DESCRIPTION_SEVERITY_VALUE_PREFIX \u003d \u0027[`severity.\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  TEAM_RESPONSE_DESCRIPTION_VALUE_SUFFIX \u003d \u0027`]\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  constructor(sectionalDependency: SectionalDependency, unprocessedContent: string) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    super(sectionalDependency, unprocessedContent);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    if (!this.parseError) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      let matches;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      const regex: RegExp \u003d new RegExp([matchTitle, matchDescription, matchDisagreement].join(\u0027[\\\\r\\\\n]*\u0027) + matchLinebreak, \u0027gi\u0027);"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"      while ((matches \u003d regex.exec(this.content))) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (matches) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          const [_, title, description, disagreeCheckbox, reasonForDisagreement] \u003d matches;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"          if (this.isSeverityDispute(title)) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            this.teamChosenSeverity \u003d this.parseTeamChosenSeverity(description);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          } else if (this.isTypeDispute(title)) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            this.teamChosenType \u003d this.parseTeamChosenType(description);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"gycgabriel"},"content":"          const disagreeCheckboxValue \u003d this.parseCheckboxValue(disagreeCheckbox);"},{"lineNumber":41,"author":{"gitId":"gycgabriel"},"content":"          if (disagreeCheckboxValue) {"},{"lineNumber":42,"author":{"gitId":"gycgabriel"},"content":"            this.testerDisagree \u003d true; // on any disagree, overall disagree with team response"},{"lineNumber":43,"author":{"gitId":"gycgabriel"},"content":"          }"},{"lineNumber":44,"author":{"gitId":"gycgabriel"},"content":""},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"          this.testerResponses.push("},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"            new TesterResponse("},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"              title,"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"              description,"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"              this.parseCheckboxDescription(disagreeCheckbox),"},{"lineNumber":50,"author":{"gitId":"gycgabriel"},"content":"              disagreeCheckboxValue,"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"              reasonForDisagreement.trim()"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"            )"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"          );"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  isSeverityDispute(title: string): boolean {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    return title.trim() \u003d\u003d\u003d this.ISSUE_SEVERITY_DISPUTE;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  isTypeDispute(title: string): boolean {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    return title.trim() \u003d\u003d\u003d this.ISSUE_TYPE_DISPUTE;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  getTeamChosenType(): string {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    return this.teamChosenType;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  getTeamChosenSeverity(): string {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    return this.teamChosenSeverity;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"gycgabriel"},"content":"  getTesterDisagree(): boolean {"},{"lineNumber":76,"author":{"gitId":"gycgabriel"},"content":"    return this.testerDisagree;"},{"lineNumber":77,"author":{"gitId":"gycgabriel"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"gycgabriel"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  parseTeamChosenSeverity(description: string): string {"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"    return extractStringBetween("},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"      description,"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"      this.TEAM_RESPONSE_DESCRIPTION_SEVERITY_VALUE_PREFIX,"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"      this.TEAM_RESPONSE_DESCRIPTION_VALUE_SUFFIX"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  parseTeamChosenType(description: string): string {"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"    return extractStringBetween(description, this.TEAM_RESPONSE_DESCRIPTION_TYPE_VALUE_PREFIX, this.TEAM_RESPONSE_DESCRIPTION_VALUE_SUFFIX);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  parseCheckboxValue(checkboxString: string): boolean {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    return checkboxString.charAt(3) \u003d\u003d\u003d \u0027x\u0027; // checkboxString in the format of - [x] or - [ ]"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  parseCheckboxDescription(checkboxString: string): string {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    return checkboxString.substring(6).trim(); // checkboxString has a fixed 5 characters at the start before the description"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  toString(): string {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    let toString \u003d \u0027\u0027;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    toString +\u003d `${this.header.toString()}\\n`;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    for (const response of this.testerResponses) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      toString +\u003d `${response.toString()}\\n`;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return toString;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":15,"-":81,"gycgabriel":11}},{"path":"src/app/core/models/templates/team-accepted-template.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { GithubComment } from \u0027../github/github-comment.model\u0027;"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import { Header, Template } from \u0027./template.model\u0027;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"export const TeamAcceptedMessage \u003d \u0027Your response not required for this bug as the team has accepted the bug as it is.\u0027;"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"export const TeamAcceptedHeader \u003d { teamAccepted: new Header(TeamAcceptedMessage, 0) };"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"export class TeamAcceptedTemplate extends Template {"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  teamAccepted?: boolean;"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  constructor(githubIssueComments: GithubComment[]) {"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    super(Object.values(TeamAcceptedHeader));"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    const teamAcceptedComment \u003d githubIssueComments.find((comment) \u003d\u003e this.test(comment.body));"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    if (teamAcceptedComment \u003d\u003d\u003d undefined) {"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"      return;"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    this.teamAccepted \u003d true;"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"}"}],"authorContributionMap":{"luminousleek":21}},{"path":"src/app/core/models/templates/team-response-template.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../comment.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../github/github-comment.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DuplicateOfSection } from \u0027./sections/duplicate-of-section.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Section } from \u0027./sections/section.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Header, Template } from \u0027./template.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"export const TeamResponseHeaders \u003d {"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  teamResponse: new Header(\"Team\u0027s Response\", 1),"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  duplicateOf: new Header(\u0027Duplicate status \\\\(if any\\\\):\u0027, 2)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"};"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class TeamResponseTemplate extends Template {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  teamResponse: Section;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  duplicateOf: DuplicateOfSection;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  comment: IssueComment;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor(githubComments: GithubComment[]) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    super(Object.values(TeamResponseHeaders));"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    const comment \u003d githubComments.find((githubComment: GithubComment) \u003d\u003e this.test(githubComment.body));"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    if (comment \u003d\u003d\u003d undefined) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    this.comment \u003d \u003cIssueComment\u003e{"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      ...comment,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      description: comment.body,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      createdAt: comment.created_at,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      updatedAt: comment.updated_at"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    const commentsContent: string \u003d comment.body;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.teamResponse \u003d this.parseTeamResponse(commentsContent);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.duplicateOf \u003d this.parseDuplicateOf(commentsContent);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  parseTeamResponse(toParse: string): Section {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    return new Section(this.getSectionalDependency(TeamResponseHeaders.teamResponse), toParse);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  parseDuplicateOf(toParse: string): DuplicateOfSection {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    return new DuplicateOfSection(this.getSectionalDependency(TeamResponseHeaders.duplicateOf), toParse);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":39}},{"path":"src/app/core/models/templates/template.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { SectionalDependency } from \u0027./sections/section.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export abstract class Template {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  headers: Header[];"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  regex: RegExp;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  protected constructor(headers: Header[]) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    this.headers \u003d headers;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    const headerString \u003d headers.join(\u0027|\u0027);"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    this.regex \u003d new RegExp(`(${headerString})(\\\\s+|$)([\\\\s\\\\S]*?)(?\u003d${headerString}|$)`, \u0027gi\u0027);"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  getSectionalDependency(header: Header): SectionalDependency {"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    const otherHeaders \u003d this.headers.filter((e) \u003d\u003e !e.equals(header));"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    return \u003cSectionalDependency\u003e{"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      sectionHeader: header,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      remainingTemplateHeaders: otherHeaders"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * Check whether the given string conforms to the template."},{"lineNumber":24,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  test(toTest: string): boolean {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    let numOfMatch \u003d 0;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    while (this.regex.exec(toTest) !\u003d null) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      numOfMatch +\u003d 1;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    this.regex.lastIndex \u003d 0;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    return numOfMatch \u003e\u003d this.headers.length;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"export class Header {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  name: string;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  headerHash: string;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  prefix?: string;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  constructor(name, headerSize, prefix: string \u003d \u0027\u0027) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.name \u003d name;"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    this.headerHash \u003d \u0027#\u0027.repeat(headerSize);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.prefix \u003d prefix;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  toString(): string {"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    const prefix \u003d this.prefix !\u003d\u003d \u0027\u0027 ? this.prefix + \u0027 \u0027 : \u0027\u0027;"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    const headerHashPrefix \u003d this.headerHash !\u003d\u003d \u0027\u0027 ? this.headerHash + \u0027 \u0027 : \u0027\u0027;"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    return `${headerHashPrefix}${prefix}${this.name}`;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  equals(section: Header): boolean {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    return this.name \u003d\u003d\u003d section.name;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":6,"-":49}},{"path":"src/app/core/models/templates/tester-response-template.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../comment.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../github/github-comment.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Section } from \u0027./sections/section.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { TesterResponseSection } from \u0027./sections/tester-response-section.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Header, Template } from \u0027./template.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"export const TesterResponseHeaders \u003d {"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  teamResponse: new Header(\"Team\u0027s Response\", 1),"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  testerResponses: new Header(\u0027Items for the Tester to Verify\u0027, 1)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"};"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class TesterResponseTemplate extends Template {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  teamResponse: Section;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  testerResponse: TesterResponseSection;"},{"lineNumber":15,"author":{"gitId":"gycgabriel"},"content":"  testerDisagree: boolean;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  comment: IssueComment;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  teamChosenSeverity?: string;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  teamChosenType?: string;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  constructor(githubIssueComments: GithubComment[]) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    super(Object.values(TesterResponseHeaders));"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    const templateConformingComment \u003d githubIssueComments.find((comment) \u003d\u003e this.test(comment.body));"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    if (templateConformingComment \u003d\u003d\u003d undefined) {"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"      return;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    this.comment \u003d \u003cIssueComment\u003e{"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      ...templateConformingComment,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      description: templateConformingComment.body"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.teamResponse \u003d this.parseTeamResponse(this.comment.description);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.testerResponse \u003d this.parseTesterResponse(this.comment.description);"},{"lineNumber":35,"author":{"gitId":"gycgabriel"},"content":"    this.testerDisagree \u003d this.testerResponse.getTesterDisagree();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    this.teamChosenSeverity \u003d this.testerResponse.getTeamChosenSeverity();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    this.teamChosenType \u003d this.testerResponse.getTeamChosenType();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  parseTeamResponse(toParse: string): Section {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    return new Section(this.getSectionalDependency(TesterResponseHeaders.teamResponse), toParse);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  parseTesterResponse(toParse: string): TesterResponseSection {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    return new TesterResponseSection(this.getSectionalDependency(TesterResponseHeaders.testerResponses), toParse);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":6,"-":39,"gycgabriel":2}},{"path":"src/app/core/models/templates/tutor-moderation-issue-template.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../github/github-issue.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { IssueDisputeSection } from \u0027./sections/issue-dispute-section.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Section } from \u0027./sections/section.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Header, Template } from \u0027./template.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"const tutorModerationIssueDescriptionHeaders \u003d {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  description: new Header(\u0027Issue Description\u0027, 1),"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  teamResponse: new Header(\"Team\u0027s Response\", 1),"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  disputes: new Header(\u0027Disputes\u0027, 1)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"};"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class TutorModerationIssueTemplate extends Template {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  description: Section;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  teamResponse: Section;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  dispute: IssueDisputeSection;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor(githubIssue: GithubIssue) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    super(Object.values(tutorModerationIssueDescriptionHeaders));"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    const issueContent \u003d githubIssue.body;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    this.description \u003d this.parseDescription(issueContent);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    this.teamResponse \u003d this.parseTeamResponse(issueContent);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    this.dispute \u003d this.parseDisputes(issueContent);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  parseDescription(toParse: string): Section {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    return new Section(this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.description), toParse);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  parseTeamResponse(toParse: string): Section {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    return new Section(this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.teamResponse), toParse);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  parseDisputes(toParse: string): IssueDisputeSection {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    return new IssueDisputeSection(this.getSectionalDependency(tutorModerationIssueDescriptionHeaders.disputes), toParse);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":36}},{"path":"src/app/core/models/templates/tutor-moderation-todo-template.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../comment.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../github/github-comment.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ModerationSection } from \u0027./sections/moderation-section.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Header, Template } from \u0027./template.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"const tutorModerationTodoHeaders \u003d {"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  todo: new Header(\u0027Tutor Moderation\u0027, 1)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"};"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class TutorModerationTodoTemplate extends Template {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  moderation: ModerationSection;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  comment: IssueComment;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  constructor(githubComments: GithubComment[]) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    super(Object.values(tutorModerationTodoHeaders));"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    const templateConformingComment \u003d githubComments.find((comment) \u003d\u003e this.test(comment.body));"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    if (templateConformingComment) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      this.comment \u003d \u003cIssueComment\u003e{"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ...templateConformingComment,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        description: templateConformingComment.body"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      this.moderation \u003d this.parseModeration(this.comment.description);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  parseModeration(toParse: string): ModerationSection {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    return new ModerationSection(this.getSectionalDependency(tutorModerationTodoHeaders.todo), toParse);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":28}},{"path":"src/app/core/models/tester-response.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { Checkbox } from \u0027./checkbox.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export class TesterResponse {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  readonly TITLE_PREFIX \u003d \u0027## :question: \u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  readonly DISAGREEMENT_PREFIX \u003d \u0027**Reason for disagreement:** \u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  readonly INITIAL_RESPONSE \u003d \u0027[replace this with your explanation]\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  readonly LINE_BREAK \u003d \u0027-------------------\\n\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  title: string; // e.g Issue Severity"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  description: string; // e.g Team chose `Low`. Originally `High`."},{"lineNumber":10,"author":{"gitId":"-"},"content":"  disagreeCheckbox: Checkbox; // e.g - [x] I disagree"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  reasonForDisagreement: string;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  constructor(title: string, description: string, checkboxDescription: string, isChecked: boolean, reasonForDiagreement: string) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    this.title \u003d title;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    this.disagreeCheckbox \u003d new Checkbox(checkboxDescription, isChecked);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    this.reasonForDisagreement \u003d reasonForDiagreement;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  toString(): string {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    let toString \u003d \u0027\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    toString +\u003d this.TITLE_PREFIX + this.title + \u0027\\n\\n\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    toString +\u003d this.description + \u0027\\n\\n\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toString +\u003d this.disagreeCheckbox.toString() + \u0027\\n\\n\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    toString +\u003d this.DISAGREEMENT_PREFIX + this.reasonForDisagreement + \u0027\\n\\n\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    toString +\u003d this.LINE_BREAK;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    return toString;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  isDisagree(): boolean {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    return this.disagreeCheckbox.isChecked;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  compareTo(anotherResponse: TesterResponse): number {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    if (this.isDisagree() \u003d\u003d\u003d anotherResponse.isDisagree()) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      return this.reasonForDisagreement.localeCompare(anotherResponse.reasonForDisagreement);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    return this.isDisagree() ? 1 : -1;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  getTitleInMarkDown(): string {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    return `## ${this.title}`;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  getDisagreementWithoutDefaultResponse(): string {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    return this.reasonForDisagreement.replace(this.INITIAL_RESPONSE, \u0027 \u0027);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  setDisagree(isDisagree: boolean) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.disagreeCheckbox.setChecked(isDisagree);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  setReasonForDisagreement(reason: string) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.reasonForDisagreement \u003d reason;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":55}},{"path":"src/app/core/services/application.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubRelease } from \u0027../models/github/github.release\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"export const appVersion \u003d AppConfig.version;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class ApplicationService {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  readonly currentVersion: string;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  latestVersion: string;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  latestReleaseUrl: string;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    this.currentVersion \u003d appVersion;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * Determines whether the application is outdated."},{"lineNumber":24,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  isApplicationOutdated(): Observable\u003cboolean\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    if (this.latestVersion) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      return of(this.isOutdatedVersion(this.latestVersion, this.currentVersion));"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    return this.githubService.fetchLatestRelease().pipe("},{"lineNumber":31,"author":{"gitId":"-"},"content":"      map((githubRelease: GithubRelease) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.latestVersion \u003d githubRelease.tag_name.substring(1);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.latestReleaseUrl \u003d githubRelease.html_url;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return this.isOutdatedVersion(this.latestVersion, this.currentVersion);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * Determines whether the current version is outdated compared to the latest version."},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * @param latestVersion"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * @param currentVersion"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  private isOutdatedVersion(latestVersion: string, currentVersion: string): boolean {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    const result \u003d this.compareVersions(latestVersion, currentVersion);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    return result \u003d\u003d\u003d 1;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * Compares the 2 given string versions v1 and v2 assuming that the version string"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * has the following format: \u003cnumber\u003e.\u003cnumber\u003e..."},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * If v1 is greater than v2, return 1"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * If v1 is less than v2, return -1"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * If v1 is equal to v2, return 0"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * @param v1 - The first version."},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * @param v2 - The second version."},{"lineNumber":57,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  private compareVersions(v1: string, v2: string): number {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    const v1Arr \u003d v1.split(\u0027.\u0027);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const v2Arr \u003d v2.split(\u0027.\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const k \u003d Math.min(v1.length, v2.length);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const v1IntArr: number[] \u003d [];"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const v2IntArr: number[] \u003d [];"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    for (let i \u003d 0; i \u003c k; ++i) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      v1IntArr[i] \u003d parseInt(v1Arr[i], 10);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      v2IntArr[i] \u003d parseInt(v2Arr[i], 10);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      if (v1IntArr[i] \u003e v2IntArr[i]) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return 1;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      if (v1IntArr[i] \u003c v2IntArr[i]) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"    return v1.length \u003d\u003d\u003d v2.length ? 0 : v1.length \u003c v2.length ? -1 : 1;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":76}},{"path":"src/app/core/services/auth.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { BehaviorSubject } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { generateSessionId } from \u0027../../shared/lib/session\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { uuid } from \u0027../../shared/lib/uuid\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { DataService } from \u0027./data.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./githubevent.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./issue.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./phase.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"export enum AuthState {"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  \u0027NotAuthenticated\u0027,"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  \u0027AwaitingAuthentication\u0027,"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"  \u0027ConfirmOAuthUser\u0027,"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"  \u0027Authenticated\u0027"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":27,"author":{"gitId":"-"},"content":"})"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Responsible for initiating the authentication process and querying or"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * updating the application state with regards to authentication."},{"lineNumber":32,"author":{"gitId":"-"},"content":" */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"export class AuthService {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  authStateSource \u003d new BehaviorSubject(AuthState.NotAuthenticated);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  currentAuthState \u003d this.authStateSource.asObservable();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  accessToken \u003d new BehaviorSubject(undefined);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  private state: string;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  ENABLE_POPUP_MESSAGE \u003d \u0027Please enable pop-ups in your browser\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    private electronService: ElectronService,"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"    private router: Router,"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    private ngZone: NgZone,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private dataService: DataService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private titleService: Title,"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    private logger: LoggingService"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * Will store the OAuth token."},{"lineNumber":57,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(token: string) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.githubService.storeOAuthAccessToken(token);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.accessToken.next(token);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.accessToken.next(undefined);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.ngZone.run(() \u003d\u003e this.router.navigate([\u0027\u0027]));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  logOut(): void {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.userService.reset();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    this.issueService.reset(true);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.phaseService.reset();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    this.dataService.reset();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.githubEventService.reset();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.logger.reset();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    this.setLandingPageTitle();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(\u0027All Teams\u0027);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    this.reset();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  setTitleWithPhaseDetail(): void {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version} - ${this.phaseService.getPhaseDetail()}`;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  setLandingPageTitle(): void {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version}`;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  isAuthenticated(): boolean {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    return this.authStateSource.getValue() \u003d\u003d\u003d AuthState.Authenticated;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  changeAuthState(newAuthState: AuthState) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    if (newAuthState \u003d\u003d\u003d AuthState.Authenticated) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      const sessionId \u003d generateSessionId();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      this.issueService.setSessionId(sessionId);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.logger.info(`Successfully authenticated with session: ${sessionId}`);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    this.authStateSource.next(newAuthState);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Generates and assigns an unguessable random \u0027state\u0027 string to pass to Github for protection against cross-site request forgery attacks"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  generateStateString() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.state \u003d uuid();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    sessionStorage.setItem(\u0027state\u0027, this.state);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  isReturnedStateSame(returnedState: string): boolean {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const state \u003d sessionStorage.getItem(\u0027state\u0027);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    return returnedState \u003d\u003d\u003d state;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Will start the Github OAuth web flow process."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  startOAuthProcess() {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.logger.info(\u0027Starting authentication\u0027);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    const githubRepoPermission \u003d this.phaseService.githubRepoPermissionLevel();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    if (this.electronService.isElectron()) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      this.electronService.sendIpcMessage(\u0027github-oauth\u0027, githubRepoPermission);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      this.generateStateString();"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"      this.redirectToOAuthPage("},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"        encodeURI("},{"lineNumber":134,"author":{"gitId":"-"},"content":"          `${AppConfig.githubUrl}/login/oauth/authorize?client_id\u003d${AppConfig.clientId}\u0026scope\u003d${githubRepoPermission},read:user\u0026state\u003d${this.state}`"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"        )"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      this.logger.info(\u0027Redirecting for Github authentication\u0027);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   * Will redirect to GitHub OAuth page"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  private redirectToOAuthPage(url: string): void {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    if (url \u003d\u003d null) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    window.location.href \u003d url;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":16,"-":134}},{"path":"src/app/core/services/data.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { DataFile } from \u0027../models/data-file.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Admins } from \u0027../models/parser/admins.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ParsedUserData } from \u0027../models/parser/parsed-user-data.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { Roles } from \u0027../models/parser/roles.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Students } from \u0027../models/parser/students.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { TabulatedUserData } from \u0027../models/parser/tabulated-user-data.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { Teams } from \u0027../models/parser/teams.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { Tutors } from \u0027../models/parser/tutors.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { Team } from \u0027../models/team.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { User, UserRole } from \u0027../models/user.model\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"})"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Responsible for retrieving and parsing data related to staff"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * and student information for the current session in CATcher."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class DataService {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  public static ROLES \u003d \u0027roles\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  public static TEAM_STRUCTURE \u003d \u0027team-structure\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  public static STUDENTS_ALLOCATION \u003d \u0027students-allocation\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  public static TUTORS_ALLOCATION \u003d \u0027tutors-allocation\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  public static ADMINS_ALLOCATION \u003d \u0027admins-allocation\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  // CSV Headers"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  public static NAME \u003d \u0027name\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  public static TEAM \u003d \u0027team\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  public static ROLE \u003d \u0027role\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  // Team Notation"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  public static TEAM_ID \u003d \u0027teamId\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  public static STUDENTS \u003d \u0027students\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  public static TUTORS \u003d \u0027tutors\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  public static ADMINS \u003d \u0027admins\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  public dataFile: DataFile;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * Retrieves the csv file from the settings repo and constructs"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * the required data file for the app."},{"lineNumber":50,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  getDataFile(): Observable\u003c{}\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    return this.githubService.fetchDataFile().pipe("},{"lineNumber":53,"author":{"gitId":"-"},"content":"      map((allCsvDataWrapper: {}) \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this.constructData(allCsvDataWrapper);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      map((jsonData: TabulatedUserData) \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.dataFile \u003d \u003cDataFile\u003e{"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          teamStructure: this.extractTeamStructure(jsonData)"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return jsonData;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * Merges all parsed Csv Data into a single readable JSON"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * format."},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * @param allCsvDataWrapper - Object containing strings of csv data."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   * @return jsonData - CSV Data Object the tabulated information of the different users"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  private constructData(allCsvDataWrapper: {}): TabulatedUserData {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const jsonData: TabulatedUserData \u003d {};"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const allCsvData: string \u003d allCsvDataWrapper[\u0027data\u0027];"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    jsonData[DataService.ROLES] \u003d this.parseRolesData(allCsvData);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    jsonData[DataService.TEAM_STRUCTURE] \u003d this.parseTeamStructureData(allCsvData);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    jsonData[DataService.STUDENTS_ALLOCATION] \u003d this.parseStudentAllocation(allCsvData);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    jsonData[DataService.TUTORS_ALLOCATION] \u003d this.parseTutorAllocation(allCsvData);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    jsonData[DataService.ADMINS_ALLOCATION] \u003d this.parseAdminAllocation(allCsvData);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    return jsonData;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   * Parses the input string containing admin allocation information"},{"lineNumber":86,"author":{"gitId":"-"},"content":"   * into application readable Object."},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * @param csvInput - string containing csv data."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   * @return admins - object that represents parsed csv data."},{"lineNumber":89,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  private parseAdminAllocation(csvInput: string): Admins {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    const admins: Admins \u003d {};"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    const parsedCSV: ParsedUserData[] \u003d this.parseUsersData(csvInput);"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    // Formats the parsed information for easier app reading"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    parsedCSV.forEach((entry) \u003d\u003e {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      if (entry[DataService.ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        admins[entry[DataService.NAME].toLowerCase()] \u003d {};"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    return admins;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   * Parses the input string containing tutor allocation information"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * into application readable Object."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * @param csvInput - string containing csv data."},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * @return tutors- object that represents parsed csv data."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  private parseTutorAllocation(csvInput: string): Tutors {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    const tutors: Tutors \u003d {};"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    const parsedCSV: ParsedUserData[] \u003d this.parseUsersData(csvInput);"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    // Formats the parsed information for easier app reading"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    parsedCSV.forEach((entry) \u003d\u003e {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      if (!(entry[DataService.ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase())) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      const tutor \u003d tutors[entry[DataService.NAME].toLowerCase()] || {};"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"      tutor[entry[DataService.TEAM]] \u003d \u0027true\u0027;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      tutors[entry[DataService.NAME].toLowerCase()] \u003d tutor;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    return tutors;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * Parses the input string containing student allocation information"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   * into a Student Object"},{"lineNumber":131,"author":{"gitId":"-"},"content":"   * @param csvInput - string containing csv data."},{"lineNumber":132,"author":{"gitId":"-"},"content":"   * @return students - object that represents parsed csv data about the students\u0027 team allocation"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  private parseStudentAllocation(csvInput: string): Students {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    const students: Students \u003d {};"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    const parsedCSV: ParsedUserData[] \u003d this.parseUsersData(csvInput);"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    // Formats the parsed information for easier app reading"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    parsedCSV.forEach((entry) \u003d\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      if (!(entry[DataService.ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      const newStudent \u003d {};"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      newStudent[DataService.TEAM_ID] \u003d entry[DataService.TEAM];"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      students[entry[DataService.NAME].toLowerCase()] \u003d newStudent;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    return students;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   * Parses the input string containing team structure information"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * into a Teams Object"},{"lineNumber":154,"author":{"gitId":"-"},"content":"   * @param csvInput - string containing csv data."},{"lineNumber":155,"author":{"gitId":"-"},"content":"   * @return teams - object that represents parsed csv data containing the team structures."},{"lineNumber":156,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  private parseTeamStructureData(csvInput: string): Teams {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    const teams: Teams \u003d {};"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    const parsedCSV: ParsedUserData[] \u003d this.parseUsersData(csvInput);"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    // Formats the parsed information for easier app reading"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    parsedCSV.forEach((entry) \u003d\u003e {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      if (!(entry[DataService.ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      const team \u003d teams[entry[DataService.TEAM]] || {};"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"      team[entry[DataService.NAME].toLowerCase()] \u003d entry[DataService.NAME];"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      teams[entry[DataService.TEAM]] \u003d team;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    return teams;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   * Parses the input string containing roles information"},{"lineNumber":177,"author":{"gitId":"-"},"content":"   * into a Roles object which indicates their allocated roles"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   * @param csvInput - string containing csv data."},{"lineNumber":179,"author":{"gitId":"-"},"content":"   * @return roles - object that represents parsed csv data regarding the allocated user roles."},{"lineNumber":180,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  private parseRolesData(csvInput: string): Roles {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    const roles: Roles \u003d {};"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    const students \u003d {};"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    const tutors \u003d {};"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    const admins \u003d {};"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    const parsedCSV: ParsedUserData[] \u003d this.parseUsersData(csvInput);"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    // Formats the parsed information for easier app reading"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    parsedCSV.forEach((entry) \u003d\u003e {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (entry[DataService.ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase()) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        students[entry[DataService.NAME].toLowerCase()] \u003d \u0027true\u0027;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      } else if (entry[DataService.ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase()) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        tutors[entry[DataService.NAME].toLowerCase()] \u003d \u0027true\u0027;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      } else if (entry[DataService.ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        admins[entry[DataService.NAME].toLowerCase()] \u003d \u0027true\u0027;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"    roles[DataService.STUDENTS] \u003d students;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    roles[DataService.TUTORS] \u003d tutors;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    roles[DataService.ADMINS] \u003d admins;"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    return roles;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   * Converts the input csv information to an array of"},{"lineNumber":208,"author":{"gitId":"-"},"content":"   * parsed user data. Each object\u0027s values are"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * marked by the respective csv table headers."},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * @param csvText - csv information."},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * @return - Subjects that tracks the parsed data."},{"lineNumber":212,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  private parseUsersData(csvText: string): ParsedUserData[] {"},{"lineNumber":214,"author":{"gitId":"luminousleek"},"content":"    const lines \u003d csvText.split(\u0027\\n\u0027).filter((v) \u003d\u003e v.trim());"},{"lineNumber":215,"author":{"gitId":"luminousleek"},"content":"    const headers \u003d lines[0].split(\u0027,\u0027).map((h) \u003d\u003e h.trim());"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    const result: ParsedUserData[] \u003d [];"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    for (let i \u003d 1; i \u003c lines.length; i++) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      const line \u003d lines[i].trim();"},{"lineNumber":219,"author":{"gitId":"luminousleek"},"content":"      const lineValues \u003d line.split(\u0027,\u0027).map((v) \u003d\u003e v.trim());"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      const lineObj: ParsedUserData \u003d {};"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      for (let j \u003d 0; j \u003c headers.length; j++) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (!lineValues[j]) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          lineObj[headers[j]] \u003d null;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          lineObj[headers[j]] \u003d lineValues[j];"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      result.push(lineObj);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"  getTeam(teamId: string): Team {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    return this.dataFile.teamStructure.get(teamId);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"  getTeams(): string[] {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    return Array.from(this.dataFile.teamStructure.keys());"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  // returns a mapping from teamId to their respective team structure."},{"lineNumber":243,"author":{"gitId":"-"},"content":"  private extractTeamStructure(jsonData: TabulatedUserData): Map\u003cstring, Team\u003e {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    const teamStructure \u003d new Map\u003cstring, Team\u003e();"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    const jsonTeamStructure \u003d jsonData[DataService.TEAM_STRUCTURE];"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    const teamIds \u003d Object.keys(jsonTeamStructure);"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    teamIds.forEach((teamId: string) \u003d\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      const teamMemberIds \u003d Object.values(jsonTeamStructure[teamId]);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      const teamMembers: Array\u003cUser\u003e \u003d teamMemberIds.map((teamMemberId: string) \u003d\u003e \u003cUser\u003e{ loginId: teamMemberId, role: UserRole.Student });"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"      teamStructure.set(teamId, new Team({ id: teamId, teamMembers: teamMembers }));"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    return teamStructure;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    this.dataFile \u003d undefined;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":258}},{"path":"src/app/core/services/dialog.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import { LabelDefinitionPopupComponent } from \u0027../../shared/label-definition-popup/label-definition-popup.component\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { UserConfirmationComponent } from \u0027../guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":8,"author":{"gitId":"-"},"content":"})"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export class DialogService {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  constructor(private dialog: MatDialog) {}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  openUserConfirmationModal(messages: string[], yesButtonMessage: string, noButtonMessage: string) {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    return this.dialog.open(UserConfirmationComponent, {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      data: {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        messages: messages,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        yesMessage: yesButtonMessage,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        noMessage: noButtonMessage"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  openLabelDefinitionDialog(labelName: String, labelDefinition: String) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    return this.dialog.open(LabelDefinitionPopupComponent, {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      data: {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        header: labelName,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        body: labelDefinition"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":29}},{"path":"src/app/core/services/electron.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ipcRenderer } from \u0027electron\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"declare var window: Window;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"declare global {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  interface Window {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    process: any;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    require: any;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Responsible for setting up the electron application environment and the"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * respective event listeners and handlers."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class ElectronService {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  ipcRenderer: typeof ipcRenderer;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    if (this.isElectron()) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      this.ipcRenderer \u003d window.require(\u0027electron\u0027).ipcRenderer;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  isElectron(): boolean {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    return window \u0026\u0026 window.process \u0026\u0026 window.process.type;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  clearCookies() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    if (this.isElectron()) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      this.ipcRenderer.invoke(\u0027clear-storage\u0027);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  registerIpcListener(channel: string, callback: (...params) \u003d\u003e void) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    if (this.isElectron()) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      this.ipcRenderer.on(channel, callback);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  sendIpcMessage(channel: string, ...messages: any) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    if (this.isElectron()) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      this.ipcRenderer.send(channel, messages);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  removeIpcListeners(channel: string) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    if (this.isElectron()) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      this.ipcRenderer.removeAllListeners(channel);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  openLink(address: string) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    if (this.isElectron()) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      this.ipcRenderer.invoke(\u0027open-link\u0027, address);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      window.open(address);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":63}},{"path":"src/app/core/services/error-handling.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ErrorHandler, Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatSnackBar } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RequestError } from \u0027@octokit/request-error\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FormErrorComponent } from \u0027../../shared/error-toasters/form-error/form-error.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GeneralMessageErrorComponent } from \u0027../../shared/error-toasters/general-message-error/general-message-error.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const ERRORCODE_NOT_FOUND \u003d 404;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"const FILTERABLE \u003d [\u0027node_modules\u0027];"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class ErrorHandlingService implements ErrorHandler {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor(private snackBar: MatSnackBar, private logger: LoggingService) {}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  handleError(error: HttpErrorResponse | Error | RequestError, actionCallback?: () \u003d\u003e void) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    this.logger.error(error);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    if (error instanceof Error) {"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"      this.logger.debug(this.cleanStack(error.stack));"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"    if (error instanceof HttpErrorResponse) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      this.handleHttpError(error, actionCallback);"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"    } else if (error.constructor.name \u003d\u003d\u003d \u0027RequestError\u0027) {"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"      this.handleHttpError(error as RequestError, actionCallback);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      this.handleGeneralError(error.message || JSON.stringify(error));"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  private cleanStack(stacktrace: string): string {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    return stacktrace"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      .split(\u0027\\n\u0027)"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"      .filter((line) \u003d\u003e !FILTERABLE.some((word) \u003d\u003e line.includes(word))) // exclude lines that contain words in FILTERABLE"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .join(\u0027\\n\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  // Ref: https://developer.github.com/v3/#client-errors"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  private handleHttpError(error: HttpErrorResponse | RequestError, actionCallback?: () \u003d\u003e void): void {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Angular treats 304 Not Modified as an error, we will ignore it."},{"lineNumber":43,"author":{"gitId":"-"},"content":"    if (error.status \u003d\u003d\u003d 304) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    if (!navigator.onLine) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      this.handleGeneralError(\u0027No Internet Connection\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    switch (error.status) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      case 500: // Internal Server Error."},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      case 422: // Form errors"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(FormErrorComponent, { data: error });"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      case 400: // Bad request"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      case 401: // Unauthorized"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      case 404: // Not found"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  private handleGeneralError(error: string): void {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: { message: error } });"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"chunweii":4,"-":67}},{"path":"src/app/core/services/factories/factory.auth.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../../environments/environment\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../auth.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { DataService } from \u0027../data.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../electron.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../github.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../githubevent.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../issue.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../logging.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { MockAuthService } from \u0027../mocks/mock.auth.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../phase.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../user.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"export function AuthServiceFactory("},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  electronService: ElectronService,"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  router: Router,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  ngZone: NgZone,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  githubService: GithubService,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  userService: UserService,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  issueService: IssueService,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  phaseService: PhaseService,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  dataService: DataService,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  githubEventService: GithubEventService,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  titleService: Title,"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"  logger: LoggingService"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":") {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  if (AppConfig.test) {"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    return new MockAuthService("},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"      router,"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"      ngZone,"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"      githubService,"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"      userService,"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"      issueService,"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"      phaseService,"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"      dataService,"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"      githubEventService,"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"      titleService,"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"      logger"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  console.log(logger);"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"  return new AuthService("},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    electronService,"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    router,"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    ngZone,"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    githubService,"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    userService,"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    issueService,"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    phaseService,"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    dataService,"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"    githubEventService,"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"    titleService,"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"    logger"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"  );"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":31,"-":26}},{"path":"src/app/core/services/factories/factory.github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Apollo } from \u0027apollo-angular\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../../environments/environment\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../electron.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../error-handling.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../github.service\u0027;"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"import { LoggingService } from \u0027../logging.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { MockGithubService } from \u0027../mocks/mock.github.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"export function GithubServiceFactory(handling: ErrorHandlingService, apollo: Apollo, electron: ElectronService, logger: LoggingService) {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  if (AppConfig.test) {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    return new MockGithubService();"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"  return new GithubService(handling, apollo, electron, logger);"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chunweii":3,"-":11}},{"path":"src/app/core/services/factories/factory.issue.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../../environments/environment\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { DataService } from \u0027../data.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../electron.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../github.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../issue.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { MockIssueService } from \u0027../mocks/mock.issue.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../phase.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../user.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"export function IssueServiceFactory("},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  githubService: GithubService,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  userService: UserService,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  phaseService: PhaseService,"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  electronService: ElectronService,"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  dataService: DataService"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":") {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  if (AppConfig.test) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    return new MockIssueService(githubService, phaseService, dataService);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  return new IssueService(githubService, userService, phaseService, electronService, dataService);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":8,"-":13}},{"path":"src/app/core/services/github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Apollo, QueryRef } from \u0027apollo-angular\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ApolloQueryResult } from \u0027apollo-client\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { DocumentNode } from \u0027graphql\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, from, Observable, of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, filter, flatMap, map, throwIfEmpty } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FetchIssue,"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  FetchIssueQuery,"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  FetchIssues,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  FetchIssuesByTeam,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  FetchIssuesByTeamQuery,"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  FetchIssuesQuery"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027../../../../graphql/graphql-types\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { getNumberOfPages } from \u0027../../shared/lib/github-paginator-parser\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../models/comment.model\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../models/github-user.model\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { IssueLastModifiedManagerModel } from \u0027../models/github/cache-manager/issue-last-modified-manager.model\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { IssuesCacheManager } from \u0027../models/github/cache-manager/issues-cache-manager.model\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../models/github/github-comment.model\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssue } from \u0027../models/github/github-graphql.issue\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubResponse } from \u0027../models/github/github-response.model\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { GithubRelease } from \u0027../models/github/github.release\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { ERRORCODE_NOT_FOUND, ErrorHandlingService } from \u0027./error-handling.service\u0027;"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"const Octokit \u003d require(\u0027@octokit/rest\u0027);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"const CATCHER_ORG \u003d \u0027CATcher-org\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"const CATCHER_REPO \u003d \u0027CATcher\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"const UNABLE_TO_OPEN_IN_BROWSER \u003d \u0027Unable to open this issue in Browser\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"let ORG_NAME \u003d \u0027\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"let MOD_ORG \u003d \u0027\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"let REPO \u003d \u0027\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"let DATA_REPO \u003d \u0027\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"const MAX_ITEMS_PER_PAGE \u003d 100;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"let octokit \u003d new Octokit();"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":48,"author":{"gitId":"-"},"content":"})"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":51,"author":{"gitId":"-"},"content":" * Responsible for communicating with GitHub to create, update, read and delete"},{"lineNumber":52,"author":{"gitId":"-"},"content":" * features related to Github using GitHub API Requests."},{"lineNumber":53,"author":{"gitId":"-"},"content":" * For example, issues, issue labels and repositories."},{"lineNumber":54,"author":{"gitId":"-"},"content":" */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"export class GithubService {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  private static readonly IF_NONE_MATCH_EMPTY \u003d { \u0027If-None-Match\u0027: \u0027\u0027 };"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  private issuesCacheManager \u003d new IssuesCacheManager();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  private issuesLastModifiedManager \u003d new IssueLastModifiedManagerModel();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  private issueQueryRefs \u003d new Map\u003cNumber, QueryRef\u003cFetchIssueQuery\u003e\u003e();"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private apollo: Apollo,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":66,"author":{"gitId":"chunweii"},"content":"    private logger: LoggingService"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(accessToken: string) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    octokit \u003d new Octokit({"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      auth() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return `Token ${accessToken}`;"},{"lineNumber":73,"author":{"gitId":"chunweii"},"content":"      },"},{"lineNumber":74,"author":{"gitId":"chunweii"},"content":"      log: {"},{"lineNumber":75,"author":{"gitId":"chunweii"},"content":"        debug: (message, ...otherInfo) \u003d\u003e this.logger.debug(message, ...otherInfo),"},{"lineNumber":76,"author":{"gitId":"chunweii"},"content":"        // Do not log info for HTTP response 304 due to repeated polling"},{"lineNumber":77,"author":{"gitId":"chunweii"},"content":"        info: (message, ...otherInfo) \u003d\u003e (/304 in \\d+ms$/.test(message) ? undefined : this.logger.info(message, ...otherInfo)),"},{"lineNumber":78,"author":{"gitId":"chunweii"},"content":"        warn: (message, ...otherInfo) \u003d\u003e this.logger.warn(message, ...otherInfo),"},{"lineNumber":79,"author":{"gitId":"chunweii"},"content":"        error: (message, ...otherInfo) \u003d\u003e this.logger.error(message, ...otherInfo)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  storeOrganizationDetails(orgName: string, dataRepo: string) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    MOD_ORG \u003d orgName;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    DATA_REPO \u003d dataRepo;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  storePhaseDetails(phaseRepoOwner: string, repoName: string) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    REPO \u003d repoName;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ORG_NAME \u003d phaseRepoOwner;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  fetchIssuesGraphqlByTeam(tutorial: string, team: string, issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    return this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesByTeamQuery, GithubGraphqlIssue\u003e("},{"lineNumber":100,"author":{"gitId":"-"},"content":"          FetchIssuesByTeam,"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"          {"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"            owner: ORG_NAME,"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"            name: REPO,"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"            filter: {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"              ...graphqlFilter,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"              labels: [...(graphqlFilter.labels ? graphqlFilter.labels : []), team]"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"            },"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"            tutorial"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"          },"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.label.issues.edges,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          GithubGraphqlIssue"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  fetchIssuesGraphql(issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    return this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesQuery, GithubGraphqlIssue\u003e("},{"lineNumber":123,"author":{"gitId":"-"},"content":"          FetchIssues,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO, filter: graphqlFilter },"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.issues.edges,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          GithubGraphqlIssue"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Will make multiple request to Github as per necessary and determine whether a graphql fetch is required."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  private toFetchIssues(filter: RestGithubIssueFilter): Observable\u003cboolean\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubIssue[]\u003e;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    return this.getIssuesAPICall(filter, 1).pipe("},{"lineNumber":138,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue[]\u003e) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      flatMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e[] \u003d [];"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (let i \u003d 2; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          apiCalls.push(this.getIssuesAPICall(filter, i));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      map((resultArray: GithubResponse\u003cGithubIssue[]\u003e[]) \u003d\u003e {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        const responses \u003d [responseInFirstPage, ...resultArray];"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        const isCached \u003d responses.reduce((result, response) \u003d\u003e {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          return result \u0026\u0026 response.isCached;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }, true);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        responses.forEach((resp, index) \u003d\u003e this.issuesCacheManager.set(index + 1, resp));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return !isCached;"},{"lineNumber":156,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":157,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   * Checks if the specified repository exists."},{"lineNumber":162,"author":{"gitId":"-"},"content":"   * @param owner - Owner of Specified Repository."},{"lineNumber":163,"author":{"gitId":"-"},"content":"   * @param repo - Name of Repository."},{"lineNumber":164,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  isRepositoryPresent(owner: string, repo: string): Observable\u003cboolean\u003e {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    return from(octokit.repos.get({ owner: owner, repo: repo, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":167,"author":{"gitId":"-"},"content":"      map((rawData: { status: number }) \u003d\u003e {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return rawData.status !\u003d\u003d ERRORCODE_NOT_FOUND;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":170,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return of(false);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":173,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch repo data.\u0027))"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   * Creates a repository in for the authenticated user location."},{"lineNumber":179,"author":{"gitId":"-"},"content":"   * @param name - Name of Repo to create."},{"lineNumber":180,"author":{"gitId":"-"},"content":"   * @return Observable\u003cboolean\u003e - That returns true if the repository has been successfully"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   *                                created."},{"lineNumber":182,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  createRepository(name: string): void {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    octokit.repos.createForAuthenticatedUser({ name: name });"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"  fetchIssueGraphql(id: number): Observable\u003cGithubGraphqlIssue\u003e {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    if (this.issueQueryRefs.get(id) \u003d\u003d\u003d undefined) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      const newQueryRef \u003d this.apollo.watchQuery\u003cFetchIssueQuery\u003e({"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        query: FetchIssue,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        variables: {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"          owner: ORG_NAME,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          name: REPO,"},{"lineNumber":194,"author":{"gitId":"luminousleek"},"content":"          issueId: id"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      this.issueQueryRefs.set(id, newQueryRef);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    const queryRef \u003d this.issueQueryRefs.get(id);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    return this.toFetchIssue(id).pipe("},{"lineNumber":202,"author":{"gitId":"luminousleek"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e from(queryRef.refetch())),"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      map((value: ApolloQueryResult\u003cFetchIssueQuery\u003e) \u003d\u003e {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return new GithubGraphqlIssue(value.data.repository.issue);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e new HttpErrorResponse({ status: 304 }))"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"  toFetchIssue(id: number): Observable\u003cboolean\u003e {"},{"lineNumber":212,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":213,"author":{"gitId":"luminousleek"},"content":"      octokit.issues.get({"},{"lineNumber":214,"author":{"gitId":"luminousleek"},"content":"        owner: ORG_NAME,"},{"lineNumber":215,"author":{"gitId":"luminousleek"},"content":"        repo: REPO,"},{"lineNumber":216,"author":{"gitId":"luminousleek"},"content":"        issue_number: id,"},{"lineNumber":217,"author":{"gitId":"luminousleek"},"content":"        headers: { \u0027If-Modified-Since\u0027: this.issuesLastModifiedManager.get(id) }"},{"lineNumber":218,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":219,"author":{"gitId":"luminousleek"},"content":"    ).pipe("},{"lineNumber":220,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":224,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch issue.\u0027))"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":229,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":230,"author":{"gitId":"luminousleek"},"content":"      octokit.issues.listLabelsForRepo({"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        headers: GithubService.IF_NONE_MATCH_EMPTY"},{"lineNumber":235,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":236,"author":{"gitId":"luminousleek"},"content":"    ).pipe("},{"lineNumber":237,"author":{"gitId":"luminousleek"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":240,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch labels.\u0027))"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":245,"author":{"gitId":"-"},"content":"   * Creates a label in the current repository."},{"lineNumber":246,"author":{"gitId":"-"},"content":"   * @param formattedLabelName - name of new label."},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * @param labelColor - colour of new label."},{"lineNumber":248,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  createLabel(formattedLabelName: string, labelColor: string): void {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    octokit.issues.createLabel({ owner: ORG_NAME, repo: REPO, name: formattedLabelName, color: labelColor });"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":254,"author":{"gitId":"-"},"content":"   * Updates a label\u0027s information in the current repository."},{"lineNumber":255,"author":{"gitId":"-"},"content":"   * @param labelName - name of existing label"},{"lineNumber":256,"author":{"gitId":"-"},"content":"   * @param labelColor - new color to be assigned to existing label."},{"lineNumber":257,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  updateLabel(labelName: string, labelColor: string): void {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    octokit.issues.updateLabel({ owner: ORG_NAME, repo: REPO, name: labelName, current_name: labelName, color: labelColor });"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"chunweii"},"content":"  /**"},{"lineNumber":263,"author":{"gitId":"chunweii"},"content":"   * Checks if the given list of users are allowed to be assigned to an issue."},{"lineNumber":264,"author":{"gitId":"chunweii"},"content":"   * @param assignees - GitHub usernames to be checked"},{"lineNumber":265,"author":{"gitId":"chunweii"},"content":"   */"},{"lineNumber":266,"author":{"gitId":"chunweii"},"content":"  areUsersAssignable(assignees: string[]): Observable\u003cvoid\u003e {"},{"lineNumber":267,"author":{"gitId":"chunweii"},"content":"    return from("},{"lineNumber":268,"author":{"gitId":"chunweii"},"content":"      octokit.issues.listAssignees({"},{"lineNumber":269,"author":{"gitId":"chunweii"},"content":"        owner: ORG_NAME,"},{"lineNumber":270,"author":{"gitId":"chunweii"},"content":"        repo: REPO"},{"lineNumber":271,"author":{"gitId":"chunweii"},"content":"      })"},{"lineNumber":272,"author":{"gitId":"chunweii"},"content":"    ).pipe("},{"lineNumber":273,"author":{"gitId":"chunweii"},"content":"      map(({ data }: { data: { login: string }[] }) \u003d\u003e data.map(({ login }) \u003d\u003e login)),"},{"lineNumber":274,"author":{"gitId":"chunweii"},"content":"      map((assignables: string[]) \u003d\u003e"},{"lineNumber":275,"author":{"gitId":"chunweii"},"content":"        assignees.forEach((assignee) \u003d\u003e {"},{"lineNumber":276,"author":{"gitId":"chunweii"},"content":"          if (!assignables.includes(assignee)) {"},{"lineNumber":277,"author":{"gitId":"chunweii"},"content":"            throw new Error(`Cannot assign ${assignee} to the issue. Please check if ${assignee} is authorized.`);"},{"lineNumber":278,"author":{"gitId":"chunweii"},"content":"          }"},{"lineNumber":279,"author":{"gitId":"chunweii"},"content":"        })"},{"lineNumber":280,"author":{"gitId":"chunweii"},"content":"      )"},{"lineNumber":281,"author":{"gitId":"chunweii"},"content":"    );"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"  closeIssue(id: number): Observable\u003cGithubIssue\u003e {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    return from(octokit.issues.update({ owner: ORG_NAME, repo: REPO, issue_number: id, state: \u0027closed\u0027 })).pipe("},{"lineNumber":286,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, labels: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    return from(octokit.issues.create({ owner: ORG_NAME, repo: REPO, title: title, body: description, labels: labels })).pipe("},{"lineNumber":295,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"  createIssueComment(issueId: number, description: string): Observable\u003cGithubComment\u003e {"},{"lineNumber":302,"author":{"gitId":"luminousleek"},"content":"    return from(octokit.issues.createComment({ owner: ORG_NAME, repo: REPO, issue_number: issueId, body: description })).pipe("},{"lineNumber":303,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"  updateIssue(id: number, title: string, description: string, labels: string[], assignees?: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":310,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":311,"author":{"gitId":"luminousleek"},"content":"      octokit.issues.update({"},{"lineNumber":312,"author":{"gitId":"luminousleek"},"content":"        owner: ORG_NAME,"},{"lineNumber":313,"author":{"gitId":"luminousleek"},"content":"        repo: REPO,"},{"lineNumber":314,"author":{"gitId":"luminousleek"},"content":"        issue_number: id,"},{"lineNumber":315,"author":{"gitId":"luminousleek"},"content":"        title: title,"},{"lineNumber":316,"author":{"gitId":"luminousleek"},"content":"        body: description,"},{"lineNumber":317,"author":{"gitId":"luminousleek"},"content":"        labels: labels,"},{"lineNumber":318,"author":{"gitId":"luminousleek"},"content":"        assignees: assignees"},{"lineNumber":319,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":320,"author":{"gitId":"luminousleek"},"content":"    ).pipe("},{"lineNumber":321,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":325,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        return throwError(err);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"  updateIssueComment(issueComment: IssueComment): Observable\u003cGithubComment\u003e {"},{"lineNumber":332,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":333,"author":{"gitId":"luminousleek"},"content":"      octokit.issues.updateComment({ owner: ORG_NAME, repo: REPO, comment_id: issueComment.id, body: issueComment.description })"},{"lineNumber":334,"author":{"gitId":"luminousleek"},"content":"    ).pipe("},{"lineNumber":335,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"  uploadFile(filename: string, base64String: string): Observable\u003cany\u003e {"},{"lineNumber":342,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":343,"author":{"gitId":"luminousleek"},"content":"      octokit.repos.createOrUpdateFile({"},{"lineNumber":344,"author":{"gitId":"luminousleek"},"content":"        owner: ORG_NAME,"},{"lineNumber":345,"author":{"gitId":"luminousleek"},"content":"        repo: REPO,"},{"lineNumber":346,"author":{"gitId":"luminousleek"},"content":"        path: `files/${filename}`,"},{"lineNumber":347,"author":{"gitId":"luminousleek"},"content":"        message: \u0027upload file\u0027,"},{"lineNumber":348,"author":{"gitId":"luminousleek"},"content":"        content: base64String"},{"lineNumber":349,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":350,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"  fetchEventsForRepo(): Observable\u003cany[]\u003e {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    return from(octokit.issues.listEventsForRepo({ owner: ORG_NAME, repo: REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":355,"author":{"gitId":"luminousleek"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":358,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch events for repo.\u0027))"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"  fetchDataFile(): Observable\u003c{}\u003e {"},{"lineNumber":363,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":364,"author":{"gitId":"luminousleek"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":365,"author":{"gitId":"luminousleek"},"content":"    ).pipe("},{"lineNumber":366,"author":{"gitId":"luminousleek"},"content":"      map((rawData) \u003d\u003e {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        return { data: atob(rawData[\u0027data\u0027][\u0027content\u0027]) };"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":369,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch data file.\u0027))"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"  fetchLatestRelease(): Observable\u003cGithubRelease\u003e {"},{"lineNumber":374,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":375,"author":{"gitId":"luminousleek"},"content":"      octokit.repos.getLatestRelease({ owner: CATCHER_ORG, repo: CATCHER_REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":376,"author":{"gitId":"luminousleek"},"content":"    ).pipe("},{"lineNumber":377,"author":{"gitId":"luminousleek"},"content":"      map((res) \u003d\u003e res[\u0027data\u0027]),"},{"lineNumber":378,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch latest release.\u0027))"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":380,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":383,"author":{"gitId":"-"},"content":"   * Fetches the data file that is regulates session information."},{"lineNumber":384,"author":{"gitId":"-"},"content":"   * @return Observable\u003cSessionData\u003e representing session information."},{"lineNumber":385,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":386,"author":{"gitId":"-"},"content":"  fetchSettingsFile(): Observable\u003cSessionData\u003e {"},{"lineNumber":387,"author":{"gitId":"luminousleek"},"content":"    return from("},{"lineNumber":388,"author":{"gitId":"luminousleek"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027settings.json\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":389,"author":{"gitId":"luminousleek"},"content":"    ).pipe("},{"lineNumber":390,"author":{"gitId":"luminousleek"},"content":"      map((rawData) \u003d\u003e JSON.parse(atob(rawData[\u0027data\u0027][\u0027content\u0027]))),"},{"lineNumber":391,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch settings file.\u0027))"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"  fetchAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    return from(octokit.users.getAuthenticated()).pipe("},{"lineNumber":397,"author":{"gitId":"luminousleek"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":400,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch authenticated user.\u0027))"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"  getRepoURL(): string {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    return ORG_NAME.concat(\u0027/\u0027).concat(REPO);"},{"lineNumber":406,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"chunweii"},"content":"  viewIssueInBrowser(id: number, event: Event) {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    if (id) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      this.electronService.openLink(\u0027https://github.com/\u0027.concat(this.getRepoURL()).concat(\u0027/issues/\u0027).concat(String(id)));"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(new Error(UNABLE_TO_OPEN_IN_BROWSER));"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":415,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    this.issuesCacheManager.clear();"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    this.issuesLastModifiedManager.clear();"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    this.issueQueryRefs.clear();"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"  getProfilesData(): Promise\u003cResponse\u003e {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    return fetch(AppConfig.clientDataUrl);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"  private getIssuesAPICall(filter: RestGithubIssueFilter, pageNumber: number): Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e {"},{"lineNumber":428,"author":{"gitId":"luminousleek"},"content":"    const apiCall: Promise\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e \u003d octokit.issues.listForRepo({"},{"lineNumber":429,"author":{"gitId":"luminousleek"},"content":"      ...filter,"},{"lineNumber":430,"author":{"gitId":"luminousleek"},"content":"      owner: ORG_NAME,"},{"lineNumber":431,"author":{"gitId":"luminousleek"},"content":"      repo: REPO,"},{"lineNumber":432,"author":{"gitId":"luminousleek"},"content":"      sort: \u0027created\u0027,"},{"lineNumber":433,"author":{"gitId":"luminousleek"},"content":"      direction: \u0027desc\u0027,"},{"lineNumber":434,"author":{"gitId":"luminousleek"},"content":"      per_page: 100,"},{"lineNumber":435,"author":{"gitId":"luminousleek"},"content":"      page: pageNumber,"},{"lineNumber":436,"author":{"gitId":"luminousleek"},"content":"      headers: { \u0027If-None-Match\u0027: this.issuesCacheManager.getEtagFor(pageNumber) }"},{"lineNumber":437,"author":{"gitId":"luminousleek"},"content":"    });"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    const apiCall$ \u003d from(apiCall);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    return apiCall$.pipe("},{"lineNumber":440,"author":{"gitId":"luminousleek"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        return of(this.issuesCacheManager.get(pageNumber));"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":444,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"  private fetchGraphqlList\u003cT, M\u003e("},{"lineNumber":447,"author":{"gitId":"-"},"content":"    query: DocumentNode,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    variables: {},"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e,"},{"lineNumber":450,"author":{"gitId":"luminousleek"},"content":"    Model: new (data) \u003d\u003e M"},{"lineNumber":451,"author":{"gitId":"-"},"content":"  ): Observable\u003cArray\u003cM\u003e\u003e {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    return from(this.withPagination\u003cT\u003e(pluckEdges)(query, variables)).pipe("},{"lineNumber":453,"author":{"gitId":"-"},"content":"      map((results: Array\u003cApolloQueryResult\u003cT\u003e\u003e) \u003d\u003e {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        const issues \u003d results.reduce((accumulated, current) \u003d\u003e accumulated.concat(pluckEdges(current)), []);"},{"lineNumber":455,"author":{"gitId":"luminousleek"},"content":"        return issues.map((issue) \u003d\u003e new Model(issue.node));"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        return new HttpErrorResponse({ status: 304 });"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"  private withPagination\u003cT\u003e(pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e) {"},{"lineNumber":464,"author":{"gitId":"luminousleek"},"content":"    return async (query: DocumentNode, variables: { [key: string]: any } \u003d {}): Promise\u003cArray\u003cApolloQueryResult\u003cT\u003e\u003e\u003e \u003d\u003e {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      const maxResultsCount \u003d 100;"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      const cursor \u003d variables.cursor || null;"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      const graphqlQuery \u003d this.apollo.watchQuery\u003cT\u003e({ query, variables: { ...variables, cursor } });"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      return graphqlQuery.refetch().then(async (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        const intermediate \u003d Array.isArray(results) ? results : [results];"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        const edges \u003d pluckEdges(results);"},{"lineNumber":471,"author":{"gitId":"luminousleek"},"content":"        const nextCursor \u003d edges.length \u003d\u003d\u003d 0 ? null : edges[edges.length - 1].cursor;"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"        if (edges.length \u003c maxResultsCount || !nextCursor) {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"          return intermediate;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":476,"author":{"gitId":"luminousleek"},"content":"        const nextResults \u003d await this.withPagination\u003cT\u003e(pluckEdges)(query, {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"          ...variables,"},{"lineNumber":478,"author":{"gitId":"luminousleek"},"content":"          cursor: nextCursor"},{"lineNumber":479,"author":{"gitId":"luminousleek"},"content":"        });"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        return intermediate.concat(nextResults);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":483,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":484,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":98,"chunweii":30,"-":356}},{"path":"src/app/core/services/githubevent.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./issue.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class GithubEventService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  private lastModified: string; // The timestamp when the title or label of an issue is changed"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  private lastModifiedComment: string; // The timestamp when the comment of an issue is changed"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService, private issueService: IssueService) {}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   * Calls the Github service api to return the latest github event (e.g renaming an issue\u0027s title)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   * of current repository and store the timestamps of the event in this service"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  setLatestChangeEvent(): Observable\u003cany\u003e {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    return this.githubService.fetchEventsForRepo().pipe("},{"lineNumber":22,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (response.length \u003d\u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          return response;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.setLastModifiedTime(response[0][\u0027created_at\u0027]);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.setLastModifiedCommentTime(response[0][\u0027issue\u0027][\u0027updated_at\u0027]);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return response;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * Returns the result whether the latest github event (e.g renaming an issue\u0027s title)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * of current repository has been retrieved or not."},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * @returns true if the issues were fetched from GitHub."},{"lineNumber":37,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  reloadPage(): Observable\u003cboolean\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    return this.githubService.fetchEventsForRepo().pipe("},{"lineNumber":40,"author":{"gitId":"-"},"content":"      flatMap((response: any[]) \u003d\u003e {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (response.length \u003d\u003d\u003d 0) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          return of(false);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        const eventResponse \u003d response[0];"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Will only allow page to reload if the latest modify time is different"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // from last modified, meaning that some changes to the repo has occured."},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        if (eventResponse[\u0027created_at\u0027] !\u003d\u003d this.lastModified || eventResponse[\u0027issue\u0027][\u0027updated_at\u0027] !\u003d\u003d this.lastModifiedComment) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          this.setLastModifiedTime(eventResponse[\u0027created_at\u0027]);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          this.setLastModifiedCommentTime(eventResponse[\u0027issue\u0027][\u0027updated_at\u0027]);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          return this.issueService.reloadAllIssues().pipe(map((response: any[]) \u003d\u003e true));"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return of(false);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  private setLastModifiedTime(lastModified: string): void {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.lastModified \u003d lastModified;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  private setLastModifiedCommentTime(lastModified: string): void {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.lastModifiedComment \u003d lastModified;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.setLastModifiedTime(undefined);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.setLastModifiedCommentTime(undefined);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":68}},{"path":"src/app/core/services/issue.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"import { BehaviorSubject, EMPTY, forkJoin, Observable, of, Subscription, throwError, timer } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { catchError, exhaustMap, finalize, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../models/comment.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../models/github/github-comment.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../models/github/github-label.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { HiddenData } from \u0027../models/hidden-data.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../models/issue-dispute.model\u0027;"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import { Issue, Issues, IssuesFilter, STATUS } from \u0027../models/issue.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { appVersion } from \u0027./application.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { DataService } from \u0027./data.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./phase.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Responsible for creating and updating issues, and periodically fetching issues"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * using GitHub."},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export class IssueService {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  static readonly POLL_INTERVAL \u003d 5000; // 5 seconds"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  issues: Issues;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  issues$: BehaviorSubject\u003cIssue[]\u003e;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  private sessionId: string;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private issueTeamFilter \u003d \u0027All Teams\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private issuesPollSubscription: Subscription;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  /** Whether the IssueService is downloading the data from Github*/"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  public isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    private githubService: GithubService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    private dataService: DataService"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"  ) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    this.issues$ \u003d new BehaviorSubject(new Array\u003cIssue\u003e());"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  startPollIssues() {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription \u003d\u003d\u003d undefined) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      if (this.issues$.getValue().length \u003d\u003d\u003d 0) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.isLoading.next(true);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"      this.issuesPollSubscription \u003d timer(0, IssueService.POLL_INTERVAL)"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"        .pipe("},{"lineNumber":58,"author":{"gitId":"-"},"content":"          exhaustMap(() \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return this.reloadAllIssues().pipe("},{"lineNumber":60,"author":{"gitId":"-"},"content":"              catchError(() \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                return EMPTY;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              }),"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              finalize(() \u003d\u003e this.isLoading.next(false))"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"          })"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        )"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"        .subscribe();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  stopPollIssues() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription.unsubscribe();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription \u003d undefined;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * Will constantly poll and update the application\u0027s state\u0027s with the updated issue."},{"lineNumber":80,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * @param issueId - The issue\u0027s id to poll for."},{"lineNumber":82,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  pollIssue(issueId: number): Observable\u003cIssue\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    return timer(0, IssueService.POLL_INTERVAL).pipe("},{"lineNumber":85,"author":{"gitId":"-"},"content":"      exhaustMap(() \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this.githubService.fetchIssueGraphql(issueId).pipe("},{"lineNumber":87,"author":{"gitId":"-"},"content":"          map((response) \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            const issue \u003d this.createIssueModel(response);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            this.updateLocalStore(issue);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return issue;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          catchError((err) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return this.getIssue(issueId);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  reloadAllIssues() {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    return this.initializeData();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  getIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    if (this.issues \u003d\u003d\u003d undefined) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      return this.getLatestIssue(id);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      return of(this.issues[id]);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  getLatestIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    return this.githubService.fetchIssueGraphql(id).pipe("},{"lineNumber":114,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.createAndSaveIssueModel(response);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this.issues[id];"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return of(this.issues[id]);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, severity: string, type: string): Observable\u003cIssue\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    const labelsArray \u003d [this.createLabel(\u0027severity\u0027, severity), this.createLabel(\u0027type\u0027, type)];"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const clientType \u003d this.electronService.isElectron() ? \u0027Desktop\u0027 : \u0027Web\u0027;"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"    const hiddenData \u003d new Map(["},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"      [\u0027session\u0027, this.sessionId],"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"      [\u0027Version\u0027, `${clientType} v${appVersion}`]"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"    ]);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    const issueDescription \u003d HiddenData.embedDataIntoString(description, hiddenData);"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"    return this.githubService"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"      .createIssue(title, issueDescription, labelsArray)"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"      .pipe(map((response: GithubIssue) \u003d\u003e this.createIssueModel(response)));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"chunweii"},"content":"  updateIssueWithAssigneeCheck(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":138,"author":{"gitId":"chunweii"},"content":"    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseModeration ? [] : issue.assignees;"},{"lineNumber":139,"author":{"gitId":"chunweii"},"content":"    return this.githubService.areUsersAssignable(assignees).pipe(flatMap(() \u003d\u003e this.updateIssue(issue)));"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  updateIssue(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseModeration ? [] : issue.assignees;"},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"    return this.githubService"},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"      .updateIssue(issue.id, issue.title, this.createGithubIssueDescription(issue), this.createLabelsForIssue(issue), assignees)"},{"lineNumber":146,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":147,"author":{"gitId":"-"},"content":"        map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          response.comments \u003d issue.githubComments;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          return this.createIssueModel(response);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  updateIssueWithComment(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    return this.githubService.updateIssueComment(issueComment).pipe("},{"lineNumber":156,"author":{"gitId":"-"},"content":"      flatMap((updatedComment: GithubComment) \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"luminousleek"},"content":"        issue.githubComments \u003d [updatedComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d updatedComment.id)];"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return this.updateIssue(issue);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"  updateTesterResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    const isTesterResponseExist \u003d this.issues[issue.id].testerResponses;"},{"lineNumber":165,"author":{"gitId":"luminousleek"},"content":"    const commentApiToCall \u003d isTesterResponseExist"},{"lineNumber":166,"author":{"gitId":"luminousleek"},"content":"      ? this.githubService.updateIssueComment(issueComment)"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      : this.githubService.createIssueComment(issue.id, issueComment.description);"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    const issueClone \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    issueClone.status \u003d STATUS.Done;"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    return forkJoin([commentApiToCall, this.updateIssue(issueClone)]).pipe("},{"lineNumber":173,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        issue.updateTesterResponse(githubComment);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  updateTutorResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.updateIssueComment(issueComment), this.updateIssue(issue)]).pipe("},{"lineNumber":183,"author":{"gitId":"luminousleek"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  createTeamResponse(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    const teamResponse \u003d issue.createGithubTeamResponse();"},{"lineNumber":193,"author":{"gitId":"chunweii"},"content":"    return this.githubService.areUsersAssignable(issue.assignees || []).pipe("},{"lineNumber":194,"author":{"gitId":"chunweii"},"content":"      flatMap(() \u003d\u003e"},{"lineNumber":195,"author":{"gitId":"chunweii"},"content":"        this.githubService.createIssueComment(issue.id, teamResponse).pipe("},{"lineNumber":196,"author":{"gitId":"-"},"content":"          flatMap((githubComment: GithubComment) \u003d\u003e {"},{"lineNumber":197,"author":{"gitId":"luminousleek"},"content":"            issue.githubComments \u003d [githubComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d githubComment.id)];"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return this.updateIssue(issue);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":200,"author":{"gitId":"chunweii"},"content":"        )"},{"lineNumber":201,"author":{"gitId":"chunweii"},"content":"      ),"},{"lineNumber":202,"author":{"gitId":"chunweii"},"content":"      catchError((err) \u003d\u003e throwError(err))"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  createTutorResponse(issue: Issue, response: string): Observable\u003cIssue\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.createIssueComment(issue.id, response), this.updateIssue(issue)]).pipe("},{"lineNumber":208,"author":{"gitId":"luminousleek"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * This function will create a github representation of issue\u0027s description. Given the issue model, it will piece together the different"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * attributes to create the github\u0027s description."},{"lineNumber":219,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  private createGithubIssueDescription(issue: Issue): string {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":224,"author":{"gitId":"luminousleek"},"content":"        return ("},{"lineNumber":225,"author":{"gitId":"luminousleek"},"content":"          `# Issue Description\\n${issue.createGithubIssueDescription()}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          // `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}\\n` +"},{"lineNumber":227,"author":{"gitId":"luminousleek"},"content":"          `# Disputes\\n\\n${this.getIssueDisputeString(issue.issueDisputes)}\\n`"},{"lineNumber":228,"author":{"gitId":"luminousleek"},"content":"        );"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return issue.createGithubIssueDescription();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"  private getIssueDisputeString(issueDisputes: IssueDispute[]): string {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    let issueDisputeString \u003d \u0027\u0027;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    for (const issueDispute of issueDisputes) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      issueDisputeString +\u003d issueDispute.toString();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    return issueDisputeString;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  deleteIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    return this.githubService.closeIssue(id).pipe("},{"lineNumber":244,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        const deletedIssue \u003d this.createIssueModel(response);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.deleteFromLocalStore(deletedIssue);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return deletedIssue;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":253,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is deleted."},{"lineNumber":254,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  deleteFromLocalStore(issueToDelete: Issue) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    const { [issueToDelete.id]: issueToRemove, ...withoutIssueToRemove } \u003d this.issues;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    this.issues \u003d withoutIssueToRemove;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is added/updated."},{"lineNumber":263,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  updateLocalStore(issueToUpdate: Issue) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    this.issues \u003d {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      ...this.issues,"},{"lineNumber":267,"author":{"gitId":"luminousleek"},"content":"      [issueToUpdate.id]: issueToUpdate"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":273,"author":{"gitId":"-"},"content":"   * Check whether the issue has been responded in the phase 2/3."},{"lineNumber":274,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  hasTeamResponse(issueId: number): boolean {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    return !!this.issues[issueId].teamResponse;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":280,"author":{"gitId":"-"},"content":"   * Obtain an observable containing an array of issues that are duplicates of the parentIssue."},{"lineNumber":281,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  getDuplicateIssuesFor(parentIssue: Issue): Observable\u003cIssue[]\u003e {"},{"lineNumber":283,"author":{"gitId":"luminousleek"},"content":"    return this.issues$.pipe("},{"lineNumber":284,"author":{"gitId":"luminousleek"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":285,"author":{"gitId":"luminousleek"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          return issue.duplicateOf \u003d\u003d\u003d parentIssue.id;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":288,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":289,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"  reset(resetSessionId: boolean) {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    if (resetSessionId) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      this.sessionId \u003d undefined;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"    this.issues \u003d undefined;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    this.issues$.next(new Array\u003cIssue\u003e());"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    this.stopPollIssues();"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    this.isLoading.complete();"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    this.isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"  private initializeData(): Observable\u003cIssue[]\u003e {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    const issuesAPICallsByFilter: Array\u003cObservable\u003cArray\u003cGithubIssue\u003e\u003e\u003e \u003d [];"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"    switch (IssuesFilter[this.phaseService.currentPhase][this.userService.currentUser.role]) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      case \u0027FILTER_BY_CREATOR\u0027:"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        issuesAPICallsByFilter.push("},{"lineNumber":311,"author":{"gitId":"-"},"content":"          this.githubService.fetchIssuesGraphql(new RestGithubIssueFilter({ creator: this.userService.currentUser.loginId }))"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      case \u0027FILTER_BY_TEAM\u0027: // Only student has this filter"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        issuesAPICallsByFilter.push("},{"lineNumber":316,"author":{"gitId":"-"},"content":"          this.githubService.fetchIssuesGraphqlByTeam("},{"lineNumber":317,"author":{"gitId":"-"},"content":"            this.createLabel(\u0027tutorial\u0027, this.userService.currentUser.team.tutorialClassId),"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            this.createLabel(\u0027team\u0027, this.userService.currentUser.team.teamId),"},{"lineNumber":319,"author":{"gitId":"luminousleek"},"content":"            new RestGithubIssueFilter({})"},{"lineNumber":320,"author":{"gitId":"luminousleek"},"content":"          )"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027: // Only for Tutors and Admins"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        const allocatedTeams \u003d this.userService.currentUser.allocatedTeams;"},{"lineNumber":325,"author":{"gitId":"luminousleek"},"content":"        allocatedTeams.forEach((team) \u003d\u003e {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"          issuesAPICallsByFilter.push("},{"lineNumber":327,"author":{"gitId":"-"},"content":"            this.githubService.fetchIssuesGraphqlByTeam("},{"lineNumber":328,"author":{"gitId":"-"},"content":"              this.createLabel(\u0027tutorial\u0027, team.tutorialClassId),"},{"lineNumber":329,"author":{"gitId":"-"},"content":"              this.createLabel(\u0027team\u0027, team.teamId),"},{"lineNumber":330,"author":{"gitId":"-"},"content":"              new RestGithubIssueFilter({})"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":332,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      case \u0027NO_FILTER\u0027:"},{"lineNumber":336,"author":{"gitId":"luminousleek"},"content":"        issuesAPICallsByFilter.push(this.githubService.fetchIssuesGraphql(new RestGithubIssueFilter({})));"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      case \u0027NO_ACCESS\u0027:"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return of([]);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    // const issuesAPICallsByFilter \u003d filters.map(filter \u003d\u003e this.githubService.fetchIssuesGraphql(filter));"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    return forkJoin(issuesAPICallsByFilter).pipe("},{"lineNumber":345,"author":{"gitId":"-"},"content":"      map((issuesByFilter: [][]) \u003d\u003e {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        const fetchedIssueIds: Array\u003cNumber\u003e \u003d [];"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"        for (const issues of issuesByFilter) {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"          for (const issue of issues) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            fetchedIssueIds.push(this.createIssueModel(issue).id);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            this.createAndSaveIssueModel(issue);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        const outdatedIssueIds: Array\u003cNumber\u003e \u003d this.getOutdatedIssueIds(fetchedIssueIds);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        this.deleteIssuesFromLocalStore(outdatedIssueIds);"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"        return Object.values(this.issues);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":361,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"  private createAndSaveIssueModel(githubIssue: GithubIssue): boolean {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    const issue \u003d this.createIssueModel(githubIssue);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    this.updateLocalStore(issue);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"  private deleteIssuesFromLocalStore(ids: Array\u003cNumber\u003e): void {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    ids.forEach((id: number) \u003d\u003e {"},{"lineNumber":371,"author":{"gitId":"luminousleek"},"content":"      this.getIssue(id).subscribe((issue) \u003d\u003e this.deleteFromLocalStore(issue));"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   * Returns an array of outdated issue ids by comparing the ids of the recently"},{"lineNumber":377,"author":{"gitId":"-"},"content":"   * fetched issues with the current issue ids in the local store"},{"lineNumber":378,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  private getOutdatedIssueIds(fetchedIssueIds: Array\u003cNumber\u003e): Array\u003cNumber\u003e {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      Ignore for first fetch or ignore if there is no fetch result"},{"lineNumber":382,"author":{"gitId":"-"},"content":""},{"lineNumber":383,"author":{"gitId":"-"},"content":"      We also have to ignore for no fetch result as the cache might return a"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      304 reponse with no differences in issues, resulting in the fetchIssueIds"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      to be empty"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    */"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    if (this.issues \u003d\u003d\u003d undefined || !fetchedIssueIds.length) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      return [];"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"    const fetchedIssueIdsSet \u003d new Set\u003cNumber\u003e(fetchedIssueIds);"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"luminousleek"},"content":"    const result \u003d Object.keys(this.issues)"},{"lineNumber":394,"author":{"gitId":"luminousleek"},"content":"      .map((x) \u003d\u003e +x)"},{"lineNumber":395,"author":{"gitId":"luminousleek"},"content":"      .filter((issueId) \u003d\u003e !fetchedIssueIdsSet.has(issueId));"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   * Given an issue model, create the necessary labels for github."},{"lineNumber":402,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  private createLabelsForIssue(issue: Issue): string[] {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    const result \u003d [];"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"luminousleek"},"content":"    if (this.phaseService.currentPhase !\u003d\u003d Phase.phaseBugReporting \u0026\u0026 this.phaseService.currentPhase !\u003d\u003d Phase.phaseTesterResponse) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      const studentTeam \u003d issue.teamAssigned.id.split(\u0027-\u0027);"},{"lineNumber":408,"author":{"gitId":"luminousleek"},"content":"      result.push(this.createLabel(\u0027tutorial\u0027, `${studentTeam[0]}-${studentTeam[1]}`), this.createLabel(\u0027team\u0027, studentTeam[2]));"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"    if (issue.severity) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027severity\u0027, issue.severity));"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"    if (issue.type) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027type\u0027, issue.type));"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"    if (issue.responseTag) {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027response\u0027, issue.responseTag));"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"    if (issue.duplicated) {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      result.push(\u0027duplicate\u0027);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"    if (issue.status) {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027status\u0027, issue.status));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"    if (issue.pending) {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      if (+issue.pending \u003e 0) {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        result.push(this.createLabel(\u0027pending\u0027, issue.pending));"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"    if (issue.unsure) {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      result.push(\u0027unsure\u0027);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"  private createLabel(prepend: string, value: string) {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    return `${prepend}.${value}`;"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"  private extractTeamIdFromGithubIssue(githubIssue: GithubIssue): string {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    return githubIssue.findLabel(GithubLabel.LABELS.tutorial).concat(\u0027-\u0027).concat(githubIssue.findLabel(GithubLabel.LABELS.team));"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"  private createIssueModel(githubIssue: GithubIssue): Issue {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(githubIssue);"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":457,"author":{"gitId":"luminousleek"},"content":"        return Issue.createPhaseTeamResponseIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTesterResponseIssue(githubIssue);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":461,"author":{"gitId":"luminousleek"},"content":"        return Issue.createPhaseModerationIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":465,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":466,"author":{"gitId":"-"},"content":""},{"lineNumber":467,"author":{"gitId":"-"},"content":"  setIssueTeamFilter(filterValue: string) {"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    if (filterValue) {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      this.issueTeamFilter \u003d filterValue;"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"  setSessionId(sessionId: string) {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    this.sessionId \u003d sessionId;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"  getIssueTeamFilter(): string {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    return this.issueTeamFilter;"},{"lineNumber":479,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":480,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":49,"chunweii":10,"-":421}},{"path":"src/app/core/services/label.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable, pipe, UnaryFunction } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Label } from \u0027../models/label.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/* The threshold to decide if color is dark or light."},{"lineNumber":8,"author":{"gitId":"-"},"content":"A higher threshold value will result in more colors determined to be \"dark\"."},{"lineNumber":9,"author":{"gitId":"-"},"content":"W3C recommendation is 0.179, but 0.184 is chosen so that some colors (like bright red)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"are considered dark (Github too consider them dark) */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"const COLOR_DARKNESS_THRESHOLD \u003d 0.184;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"const COLOR_DARK_TEXT \u003d \u0027000000\u0027; // Dark color for text with light background"},{"lineNumber":14,"author":{"gitId":"-"},"content":"const COLOR_LIGHT_TEXT \u003d \u0027FFFFFF\u0027; // Light color for text with dark background"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"const DISPLAY_NAME_SEVERITY \u003d \u0027Severity\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"const DISPLAY_NAME_BUG_TYPE \u003d \u0027Bug Type\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"const DISPLAY_NAME_RESPONSE \u003d \u0027Response\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"// The HTML template definition of selected labels are hard-coded here, move to a config file in the future"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"const VERY_LOW_DEFINITION \u003d"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cp\u003eA flaw that is \u003cmark\u003epurely cosmetic\u003c/mark\u003e and \u003cmark\u003edoes not affect usage\u003c/mark\u003e. For example, \u0027 +"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cul\u003e\u0027 +"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cli\u003etypo issues\u003c/li\u003e\u0027 +"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cli\u003espacing issues\u003c/li\u003e\u0027 +"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cli\u003elayout issues\u003c/li\u003e\u0027 +"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cli\u003ecolor issues\u003c/li\u003e\u0027 +"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cli\u003efont issues\u003c/li\u003e\u0027 +"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003c/ul\u003e\u0027 +"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"  \"in the docs or the UI that doesn\u0027t affect usage.\u003c/p\u003e\";"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"const LOW_DEFINITION \u003d"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cp\u003eA flaw that is unlikely to affect normal operations of the product. \u0027 +"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  \u0027Appears only in very rare situations and causes a minor inconvenience only.\u003c/p\u003e\u0027;"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"const MEDIUM_DEFINITION \u003d \u0027\u003cp\u003eA flaw that causes occasional inconvenience to some users but they can \u0027 + \u0027continue to use the product.\u003c/p\u003e\u0027;"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"const HIGH_DEFINITION \u003d"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cp\u003eA flaw that affects most users and causes major problems for users.\u0027 + \u0027i.e., makes the product almost unusable for most users.\u003c/p\u003e\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"const FUNCTIONALITY_BUG_DEFINITION \u003d \u0027\u003cp\u003eA functionality does not work as specified/expected.\u003c/p\u003e\u0027;"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"const FEATURE_FLAW_DEFINITION \u003d"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cp\u003eSome functionality missing from a feature delivered in the current version in \u0027 +"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"  \u0027a way that the feature becomes less useful to the intended target user for \u003ci\u003enormal\u003c/i\u003e usage. \u0027 +"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"  \"i.e., the feature is not \u0027complete\u0027.\\nIn other words, an acceptance-testing bug that falls within \" +"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"  \u0027the scope of the current version features. These issues are counted against the \u003ci\u003eproduct design\u003c/i\u003e aspect \u0027 +"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"  \u0027of the project.\u003c/p\u003e\u0027;"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"const DOCUMENTATION_BUG_DEFINITION \u003d"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cp\u003eA flaw in the documentation \u0027 + \u0027\u003cspan style\u003d\"color:grey;\"\u003ee.g., a missing step, a wrong instruction, typos\u003c/span\u003e\u003c/p\u003e\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"const ACCEPTED_DEFINITION \u003d \u0027\u003cp\u003eYou accept it as a bug.\u003c/p\u003e\u0027;"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"const NOT_IN_SCOPE_DEFINITION \u003d"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cp\u003eIt is a valid issue but not something the team should be penalized for \u0027 +"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"  \u0027\u003cspan style\u003d\"color:grey;\"\u003ee.g., it was not related to features delivered in this version\u003c/span\u003e.\u003c/p\u003e\u0027;"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"const REJECTED_DEFINITION \u003d"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"  \"\u003cp\u003eWhat tester treated as a bug is in fact the expected behavior (from the user\u0027s point of view), or the tester \" +"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"  \u0027was mistaken in some other way.\u003c/p\u003e\u0027;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"const CANNOT_REPRODUCE_DEFINITION \u003d \u0027\u003cp\u003eYou are unable to reproduce the behavior reported in the bug after multiple tries.\u003c/p\u003e\u0027;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"const ISSUE_UNCLEAR_DEFINITION \u003d \u0027\u003cp\u003eThe issue description is not clear.\u003c/p\u003e\u0027;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"const UNDEFINED_DEFINITION \u003d null;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"export const LABEL_DEFINITIONS \u003d {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  severityVeryLow: VERY_LOW_DEFINITION,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  severityLow: LOW_DEFINITION,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  severityMedium: MEDIUM_DEFINITION,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  severityHigh: HIGH_DEFINITION,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  typeFunctionalityBug: FUNCTIONALITY_BUG_DEFINITION,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  typeFeatureFlaw: FEATURE_FLAW_DEFINITION,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  typeDocumentationBug: DOCUMENTATION_BUG_DEFINITION,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  responseAccepted: ACCEPTED_DEFINITION,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  responseNotInScope: NOT_IN_SCOPE_DEFINITION,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  responseRejected: REJECTED_DEFINITION,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  responseCannotProduce: CANNOT_REPRODUCE_DEFINITION,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  responseIssueUnclear: ISSUE_UNCLEAR_DEFINITION,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  undefined: UNDEFINED_DEFINITION"},{"lineNumber":73,"author":{"gitId":"-"},"content":"};"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"const REQUIRED_LABELS \u003d {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  severity: {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    VeryLow: new Label(\u0027severity\u0027, \u0027VeryLow\u0027, \u0027ffe0e0\u0027, VERY_LOW_DEFINITION),"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    Low: new Label(\u0027severity\u0027, \u0027Low\u0027, \u0027ffcccc\u0027, LOW_DEFINITION),"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    Medium: new Label(\u0027severity\u0027, \u0027Medium\u0027, \u0027ff9999\u0027, MEDIUM_DEFINITION),"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    High: new Label(\u0027severity\u0027, \u0027High\u0027, \u0027ff6666\u0027, HIGH_DEFINITION)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  type: {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    DocumentationBug: new Label(\u0027type\u0027, \u0027DocumentationBug\u0027, \u0027d966ff\u0027, DOCUMENTATION_BUG_DEFINITION),"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    FeatureFlaw: new Label(\u0027type\u0027, \u0027FeatureFlaw\u0027, \u0027d966ff\u0027, FEATURE_FLAW_DEFINITION),"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    FunctionalityBug: new Label(\u0027type\u0027, \u0027FunctionalityBug\u0027, \u00279900cc\u0027, FUNCTIONALITY_BUG_DEFINITION)"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  response: {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    Accepted: new Label(\u0027response\u0027, \u0027Accepted\u0027, \u002700802b\u0027, ACCEPTED_DEFINITION),"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    CannotReproduce: new Label(\u0027response\u0027, \u0027CannotReproduce\u0027, \u0027ffebcc\u0027, CANNOT_REPRODUCE_DEFINITION),"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    IssueUnclear: new Label(\u0027response\u0027, \u0027IssueUnclear\u0027, \u0027ffcc80\u0027, ISSUE_UNCLEAR_DEFINITION),"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    NotInScope: new Label(\u0027response\u0027, \u0027NotInScope\u0027, \u0027ffcc80\u0027, NOT_IN_SCOPE_DEFINITION),"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    Rejected: new Label(\u0027response\u0027, \u0027Rejected\u0027, \u0027ff9900\u0027, REJECTED_DEFINITION)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  status: {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    Done: new Label(\u0027status\u0027, \u0027Done\u0027, \u0027a6a6a6\u0027),"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    Incomplete: new Label(\u0027status\u0027, \u0027Incomplete\u0027, \u0027000000\u0027)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  others: {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    duplicate: new Label(undefined, \u0027duplicate\u0027, \u00270066ff\u0027)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"};"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":105,"author":{"gitId":"-"},"content":"})"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":108,"author":{"gitId":"-"},"content":" * Responsible for retrieval and parsing and syncing of label data"},{"lineNumber":109,"author":{"gitId":"-"},"content":" * from the GitHub repository for the CATcher application."},{"lineNumber":110,"author":{"gitId":"-"},"content":" */"},{"lineNumber":111,"author":{"gitId":"-"},"content":"export class LabelService {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  private static severityLabels: Label[] \u003d Object.values(REQUIRED_LABELS.severity);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  private static typeLabels: Label[] \u003d Object.values(REQUIRED_LABELS.type);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  private static responseLabels: Label[] \u003d Object.values(REQUIRED_LABELS.response);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  private static statusLabels: Label[] \u003d Object.values(REQUIRED_LABELS.status);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  private static otherLabels: Label[] \u003d Object.values(REQUIRED_LABELS.others);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  private static allLabelArrays \u003d {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    severity: LabelService.severityLabels,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    type: LabelService.typeLabels,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    response: LabelService.responseLabels,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    status: LabelService.statusLabels,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    others: LabelService.otherLabels"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  private static testerLabelArrays \u003d {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    severity: LabelService.severityLabels,"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"    type: LabelService.typeLabels"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  public static getRequiredLabelsAsArray(needAllLabels: boolean): Label[] {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    let requiredLabels: Label[] \u003d [];"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    const labels \u003d needAllLabels ? Object.values(this.allLabelArrays) : Object.values(this.testerLabelArrays);"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"    labels.map((label) \u003d\u003e (requiredLabels \u003d requiredLabels.concat(label)));"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return requiredLabels;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   * Returns an custom operator which helps to"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   * synchronise the labels in our application"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   * with the remote repository."},{"lineNumber":143,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  syncLabels(needAllLabels: boolean): UnaryFunction\u003cObservable\u003cboolean\u003e, Observable\u003cany\u003e\u003e {"},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"    return pipe(flatMap(() \u003d\u003e this.synchronizeRemoteLabels(needAllLabels)));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   * Synchronizes the labels in github with those required by the application."},{"lineNumber":150,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  synchronizeRemoteLabels(needAllLabels: boolean): Observable\u003cany\u003e {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    return this.githubService.fetchAllLabels().pipe("},{"lineNumber":153,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        this.ensureRepoHasRequiredLabels(this.parseLabelData(response), LabelService.getRequiredLabelsAsArray(needAllLabels));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return response;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   * Returns all the labels of a certain type (e.g severity)"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   * @param attributeName: the type of the label"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   * @return an array of label of that type"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  getLabelList(attributeName: string): Label[] {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    switch (attributeName) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      case \u0027severity\u0027:"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return LabelService.severityLabels;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      case \u0027type\u0027:"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return LabelService.typeLabels;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      case \u0027responseTag\u0027:"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      case \u0027response\u0027:"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return LabelService.responseLabels;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   * Returns a title for the label type"},{"lineNumber":179,"author":{"gitId":"-"},"content":"   * @param attributeName: the type of the label"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  getLabelTitle(attributeName: string): string {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    switch (attributeName) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      case \u0027severity\u0027:"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return DISPLAY_NAME_SEVERITY;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      case \u0027type\u0027:"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return DISPLAY_NAME_BUG_TYPE;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      case \u0027responseTag\u0027:"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return DISPLAY_NAME_RESPONSE;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   * Returns the color of the label by searching a list of"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   * all available labels."},{"lineNumber":195,"author":{"gitId":"-"},"content":"   * @param labelValue: the label\u0027s value (e.g Low / Medium / High / ...)"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  getColorOfLabel(labelValue: string): string {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    // TODO: Rewrite function - labelValue insufficient to differentiate between labels. Should use `labelCategory.labelValue` format."},{"lineNumber":199,"author":{"gitId":"-"},"content":"    const WHITE_COLOR \u003d \u0027ffffff\u0027;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    if (labelValue \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      return WHITE_COLOR;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"luminousleek"},"content":"    const existingLabel \u003d LabelService.getRequiredLabelsAsArray(true).find((label) \u003d\u003e label.labelValue \u003d\u003d\u003d labelValue);"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    if (existingLabel \u003d\u003d\u003d undefined || existingLabel.labelColor \u003d\u003d\u003d undefined) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      return WHITE_COLOR;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      return existingLabel.labelColor;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   * Returns the definition of the label by searching a list of"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * all available labels."},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * @param labelValue: the label\u0027s value (e.g Low/ Medium/ High / ...)."},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * @param labelCategory: the label\u0027s category (e.g Type/ Severity / ...)."},{"lineNumber":218,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  getLabelDefinition(labelValue: string, labelCategory: string): string {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    if (labelValue \u003d\u003d\u003d \u0027\u0027 || labelValue \u003d\u003d\u003d null || labelCategory \u003d\u003d\u003d \u0027\u0027 || labelCategory \u003d\u003d\u003d null) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    const existingLabel \u003d LabelService.getRequiredLabelsAsArray(true).find("},{"lineNumber":225,"author":{"gitId":"luminousleek"},"content":"      (label) \u003d\u003e label.labelValue \u003d\u003d\u003d labelValue \u0026\u0026 label.labelCategory \u003d\u003d\u003d labelCategory"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    if (existingLabel \u003d\u003d\u003d undefined || existingLabel.labelDefinition \u003d\u003d\u003d undefined) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      return existingLabel.labelDefinition;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":236,"author":{"gitId":"-"},"content":"   * Ensures that the repo has the required labels."},{"lineNumber":237,"author":{"gitId":"-"},"content":"   * Compares the actual labels in the repo with the required labels. If an required label is missing,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"   * it is added to the repo. If the required label exists but the label color is not as expected,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"   * the color is updated. Does not delete actual labels that do not match required labels."},{"lineNumber":240,"author":{"gitId":"-"},"content":"   * i.e., the repo might have more labels than the required labels after this operation."},{"lineNumber":241,"author":{"gitId":"-"},"content":"   * @param actualLabels: labels in the repo."},{"lineNumber":242,"author":{"gitId":"-"},"content":"   * @param requiredLabels: required labels."},{"lineNumber":243,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  private ensureRepoHasRequiredLabels(actualLabels: Label[], requiredLabels: Label[]): void {"},{"lineNumber":245,"author":{"gitId":"luminousleek"},"content":"    requiredLabels.forEach((label) \u003d\u003e {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      // Finds for a label that has the same name as a required label."},{"lineNumber":247,"author":{"gitId":"luminousleek"},"content":"      const nameMatchedLabels: Label[] \u003d actualLabels.filter((remoteLabel) \u003d\u003e remoteLabel.getFormattedName() \u003d\u003d\u003d label.getFormattedName());"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"      if (nameMatchedLabels.length \u003d\u003d\u003d 0) {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // Create new Label (Could not find a label with the same name \u0026 category)"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        this.githubService.createLabel(label.getFormattedName(), label.labelColor);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      } else if (nameMatchedLabels.length \u003d\u003d\u003d 1) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (nameMatchedLabels[0].equals(label)) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"          // the label exists exactly as expected -\u003e do nothing"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"          // the label exists but the color does not match"},{"lineNumber":257,"author":{"gitId":"-"},"content":"          this.githubService.updateLabel(label.getFormattedName(), label.labelColor);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        throw new Error(\u0027Unexpected error: the repo has multiple labels with the same name \u0027 + label.getFormattedName());"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":266,"author":{"gitId":"-"},"content":"   * Parses label information and returns an array of Label objects."},{"lineNumber":267,"author":{"gitId":"-"},"content":"   * @param labels - Label Information from API."},{"lineNumber":268,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  parseLabelData(labels: Array\u003c{}\u003e): Label[] {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    const labelData: Label[] \u003d [];"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    for (const label of labels) {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      let labelCategory: string;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      let labelValue: string;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      const containsDotRegex \u003d /\\./g;"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"      const rawName: string \u003d String(label[\u0027name\u0027]);"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"luminousleek"},"content":"      [labelCategory, labelValue] \u003d containsDotRegex.test(rawName) ? String(label[\u0027name\u0027]).split(\u0027.\u0027) : [undefined, rawName];"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"      const labelColor: string \u003d String(label[\u0027color\u0027]);"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"      const labelDefinition: string \u003d String(label[\u0027definition\u0027]);"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"      labelData.push(new Label(labelCategory, labelValue, labelColor, labelDefinition));"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    return labelData;"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":291,"author":{"gitId":"-"},"content":"   * Returns true if the given color is considered \"dark\""},{"lineNumber":292,"author":{"gitId":"-"},"content":"   * The color is considered \"dark\" if its luminance is less than COLOR_DARKNESS_THRESHOLD"},{"lineNumber":293,"author":{"gitId":"-"},"content":"   * @param inputColor: the color"},{"lineNumber":294,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  isDarkColor(inputColor: string): boolean {"},{"lineNumber":296,"author":{"gitId":"luminousleek"},"content":"    const COLOR \u003d inputColor.charAt(0) \u003d\u003d\u003d \u0027#\u0027 ? inputColor.substring(1, 7) : inputColor;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    const R \u003d parseInt(COLOR.substring(0, 2), 16);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    const G \u003d parseInt(COLOR.substring(2, 4), 16);"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    const B \u003d parseInt(COLOR.substring(4, 6), 16);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    const RGB \u003d [R / 255, G / 255, B / 255];"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    const LINEAR_RGB \u003d RGB.map((col) \u003d\u003e {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      if (col \u003c\u003d 0.03928) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        return col / 12.92;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      return Math.pow((col + 0.055) / 1.055, 2.4);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    // Calculate the luminance of the color"},{"lineNumber":308,"author":{"gitId":"luminousleek"},"content":"    const LUMINANCE \u003d 0.2126 * LINEAR_RGB[0] + 0.7152 * LINEAR_RGB[1] + 0.0722 * LINEAR_RGB[2];"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    // The color is \"dark\" if the luminance is lower than the threshold"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    return LUMINANCE \u003c COLOR_DARKNESS_THRESHOLD;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":314,"author":{"gitId":"-"},"content":"   * Returns a css style for the label to use"},{"lineNumber":315,"author":{"gitId":"-"},"content":"   * @param color: the color of the label"},{"lineNumber":316,"author":{"gitId":"-"},"content":"   * @return the style with background-color in rgb"},{"lineNumber":317,"author":{"gitId":"-"},"content":"   * @throws exception if input is an invalid color code"},{"lineNumber":318,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  setLabelStyle(color: string, display: string \u003d \u0027inline-flex\u0027) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    let textColor: string;"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    textColor \u003d this.isDarkColor(color) ? COLOR_LIGHT_TEXT : COLOR_DARK_TEXT;"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    const styles \u003d {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u0027background-color\u0027: `#${color}`,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      \u0027border-radius\u0027: \u00273px\u0027,"},{"lineNumber":327,"author":{"gitId":"luminousleek"},"content":"      cursor: \u0027default\u0027,"},{"lineNumber":328,"author":{"gitId":"luminousleek"},"content":"      padding: \u00273px\u0027,"},{"lineNumber":329,"author":{"gitId":"luminousleek"},"content":"      color: `#${textColor}`,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u0027font-weight\u0027: \u0027410\u0027,"},{"lineNumber":331,"author":{"gitId":"luminousleek"},"content":"      display: display"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    return styles;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":45,"-":291}},{"path":"src/app/core/services/logging.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ElectronLog } from \u0027electron-log\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { downloadAsTextFile } from \u0027../../shared/lib/file-download\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Responsible for logging events and errors while the application is"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * running to ease debugging for CATcher developers and maintainers."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class LoggingService {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  private logger: ElectronLog | Console;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  private isInSession \u003d false;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  private readonly LOG_KEY \u003d \u0027CATcher-Log\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  private readonly LOG_FILE_NAME \u003d \u0027CATcher-log.txt\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  public readonly LOG_START_HEADER \u003d `\u003d\u003d\u003d\u003d\u003d\u003d New CATcher v${AppConfig.version} Session Log \u003d\u003d\u003d\u003d\u003d\u003d`;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  public readonly LOG_COUNT_LIMIT \u003d 4;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  public readonly SESSION_LOG_SEPARATOR \u003d \u0027\\n\u0027.repeat(2); // More new-lines added for clarity."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor(electronService: ElectronService) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    if (electronService.isElectron()) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      this.logger \u003d window.require(\u0027electron-log\u0027);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      this.logger \u003d console;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.startSession();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.isInSession \u003d false;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * Configures loggging Session if Logging Service is not"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * in session."},{"lineNumber":41,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  startSession() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Prevents the OAuth Pop-up window from being able to"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // start a session."},{"lineNumber":45,"author":{"gitId":"-"},"content":"    if (window.opener \u0026\u0026 window.opener !\u003d\u003d window) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (!this.isInSession) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      this.isInSession \u003d true;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      this.initializeLogCache();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  private initializeLogCache() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.setCachedLog(this.getTrimmedLogCache(this.getCachedLog(), this.LOG_COUNT_LIMIT));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * Trims the existing Log in the browser\u0027s cache to a select number"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * of Sessions if necessary."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * @param sessionCount The number of Session Logs to preserve in the cache"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  private getTrimmedLogCache(currentLog: string, sessionCount: number): string {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const currentDateTime \u003d new Date().toLocaleString();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const logHeaderWithDateTime \u003d `${this.LOG_START_HEADER}\\n${currentDateTime}`;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Check if Trimming is Necessary"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    const numberOfSessions: number \u003d"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"      currentLog \u003d\u003d null"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"        ? 0"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"        : currentLog.split(\u0027\\n\u0027).filter((currentLogLine: string) \u003d\u003e currentLogLine.includes(this.LOG_START_HEADER)).length;"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    if (numberOfSessions \u003d\u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      return logHeaderWithDateTime;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    if (numberOfSessions \u003c sessionCount) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      return `${currentLog}${this.SESSION_LOG_SEPARATOR}${logHeaderWithDateTime}`;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"    const separatedSessionLogs: string[] \u003d currentLog"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"      .split(`${this.LOG_START_HEADER}`)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .filter((line: string) \u003d\u003e !!line)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      .map((line: string) \u003d\u003e `${this.LOG_START_HEADER}\\n${line.trim()}`);"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    separatedSessionLogs.splice(0, separatedSessionLogs.length - sessionCount + 1);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    separatedSessionLogs.push(`${logHeaderWithDateTime}`);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    return separatedSessionLogs.join(this.SESSION_LOG_SEPARATOR);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  getCachedLog(): string {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return localStorage.getItem(this.LOG_KEY);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  private setCachedLog(updatedLog: string): void {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    localStorage.setItem(this.LOG_KEY, updatedLog);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  private updateLog(...updatedLog: any[]): void {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    this.setCachedLog(`${this.getCachedLog()}\\n${updatedLog.toString()}`);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  exportLogFile() {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    const log: string \u003d this.getCachedLog();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    downloadAsTextFile(this.LOG_FILE_NAME, log);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  info(...params: any[]) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.updateLog(params);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.logger.info(params);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  error(...params: any[]) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.updateLog(params);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.logger.error(params);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  warn(...params: any[]) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    this.updateLog(params);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    this.logger.warn(params);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  debug(...params: any[]) {"},{"lineNumber":125,"author":{"gitId":"chunweii"},"content":"    if (AppConfig.production) {"},{"lineNumber":126,"author":{"gitId":"chunweii"},"content":"      return;"},{"lineNumber":127,"author":{"gitId":"chunweii"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"chunweii"},"content":"    // Log file will not be updated to keep log messages short"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    this.logger.debug(params);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":6,"chunweii":4,"-":121}},{"path":"src/app/core/services/mocks/mock.auth.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { BehaviorSubject } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { uuid } from \u0027../../../shared/lib/uuid\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { DataService } from \u0027../data.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../github.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../githubevent.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../issue.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../logging.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../phase.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../user.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"export enum AuthState {"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  \u0027NotAuthenticated\u0027,"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  \u0027AwaitingAuthentication\u0027,"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  \u0027ConfirmOAuthUser\u0027,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  \u0027Authenticated\u0027"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":24,"author":{"gitId":"-"},"content":"})"},{"lineNumber":25,"author":{"gitId":"-"},"content":"export class MockAuthService {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  authStateSource \u003d new BehaviorSubject(AuthState.NotAuthenticated);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  currentAuthState \u003d this.authStateSource.asObservable();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  accessToken \u003d new BehaviorSubject(undefined);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    private router: Router,"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    private ngZone: NgZone,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private dataService: DataService,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private titleService: Title,"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    private logger: LoggingService"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * Will store the OAuth token."},{"lineNumber":45,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(token: string) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    this.githubService.storeOAuthAccessToken(token);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    this.accessToken.next(token);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.accessToken.next(undefined);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.ngZone.run(() \u003d\u003e this.router.navigate([\u0027\u0027]));"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  logOut(): void {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.userService.reset();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.issueService.reset(true);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.phaseService.reset();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.dataService.reset();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.githubEventService.reset();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.logger.reset();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this.setLandingPageTitle();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(\u0027All Teams\u0027);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.reset();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  isAuthenticated(): boolean {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    return this.authStateSource.getValue() \u003d\u003d\u003d AuthState.Authenticated;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  changeAuthState(newAuthState: AuthState) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    if (newAuthState \u003d\u003d\u003d AuthState.Authenticated) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      const sessionId \u003d `${Date.now()}-${uuid()}`;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      this.issueService.setSessionId(sessionId);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      this.logger.info(`Successfully authenticated with session: ${sessionId}`);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    this.authStateSource.next(newAuthState);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  setTitleWithPhaseDetail(): void {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../../package.json\u0027);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version} - ${this.phaseService.getPhaseDetail()}`;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  setLandingPageTitle(): void {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../../package.json\u0027);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version}`;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * Will start the Github OAuth web flow process by issuing \u0027FabricatedToken\u0027."},{"lineNumber":97,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  startOAuthProcess() {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    this.accessToken.next(\u0027FabricatedToken\u0027);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":11,"-":90}},{"path":"src/app/core/services/mocks/mock.github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../../environments/environment.test\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../models/github-user.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../../models/github/github-issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../../models/github/github-label.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubRelease } from \u0027../../models/github/github.release\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../models/label.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../models/phase.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { Profile } from \u0027../../models/profile.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../../models/session.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../label.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"const Octokit \u003d require(\u0027@octokit/rest\u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"let ORG_NAME \u003d \u0027\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"let MOD_ORG \u003d \u0027\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"let REPO \u003d \u0027\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"let DATA_REPO \u003d \u0027\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"let octokit \u003d new Octokit();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"@Injectable()"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class MockGithubService {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  numIssuesCreated: number; // tracks the number of GithubIssues created by this mock service"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.numIssuesCreated \u003d 0;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(accessToken: string) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    octokit \u003d new Octokit({"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      auth() {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return `Token ${accessToken}`;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  storeOrganizationDetails(orgName: string, dataRepo: string) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    MOD_ORG \u003d orgName;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    DATA_REPO \u003d dataRepo;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  storePhaseDetails(phaseRepoOwner: string, repoName: string) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    REPO \u003d repoName;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    ORG_NAME \u003d phaseRepoOwner;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * Always informs that repository exists for testing purposes."},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * @param owner - Owner of Specified Repository."},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * @param repo - Name of Repository."},{"lineNumber":52,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  isRepositoryPresent(owner: string, repo: string): Observable\u003cboolean\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    return of(true);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Creates a GithubIssue with the specified title / description / labels."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, labels: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"    const githubLabels: GithubLabel[] \u003d labels.map((labelString) \u003d\u003e new GithubLabel({ name: labelString }));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const githubIssueData \u003d {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      number: this.numIssuesCreated, // Issue\u0027s display ID"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      title: title,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      body: description,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      labels: githubLabels"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.numIssuesCreated++;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    return of(new GithubIssue(githubIssueData));"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Creates a fabricated object that matches the structure of that"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * returned by the Github API which always results in the required labels"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * being present."},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"    return of("},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"      LabelService.getRequiredLabelsAsArray(true).map((label: Label) \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          name: label.labelCategory ? `${label.labelCategory}.${label.labelValue}` : `${label.labelValue}`,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          color: `${label.labelColor}`"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"   * @return Empty Observable\u003c[]\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  fetchEventsForRepo(): Observable\u003cany[]\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    return of([]);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * Creates Fabricated Data File with Tester\u0027s Credentials."},{"lineNumber":99,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  fetchDataFile(): Observable\u003c{}\u003e {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    return of({"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"      data: \u0027role,name,team\\n\u0027 + `${AppConfig.role},${AppConfig.username},${AppConfig.team}\\n`"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * Creates a fabricated object that matches the structure of that"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * returned by the Github API which always results in Release Comparisons"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   * to be true."},{"lineNumber":110,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  fetchLatestRelease(): Observable\u003cGithubRelease\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../../package.json\u0027);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    return of({"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      html_url: `www.github.com/CATcher-org/releases/v${appSetting.version}`,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      tag_name: `v${appSetting.version}`"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    } as GithubRelease);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":120,"author":{"gitId":"-"},"content":"   * Fabricates session data in accordance with SessionData Requirements."},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * @return Observable\u003cSessionData\u003e representing session information."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  fetchSettingsFile(): Observable\u003cSessionData\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    return of({"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      openPhases: [Phase.phaseBugReporting, Phase.phaseTeamResponse, Phase.phaseTesterResponse, Phase.phaseModeration],"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      [Phase.phaseBugReporting]: \u0027undefined\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      [Phase.phaseTeamResponse]: \u0027undefined\u0027,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      [Phase.phaseTesterResponse]: \u0027undefined\u0027,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      [Phase.phaseModeration]: \u0027undefined\u0027"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    } as SessionData);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":134,"author":{"gitId":"-"},"content":"   * @return Observable\u003cGithubUser\u003e representation of TestUser Credentials."},{"lineNumber":135,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  fetchAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    return of({"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      login: AppConfig.username,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      name: AppConfig.username"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    } as GithubUser);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"  getProfilesData(): Promise\u003cResponse\u003e {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    const profiles \u003d ["},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cProfile\u003e{"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        profileName: \u0027CATcher\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        repoName: \u0027CATcher-org/public_data\u0027"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const mockResponse: Response \u003d { json: () \u003d\u003e Promise.resolve({ profiles: profiles }) } as Response;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    return Promise.resolve(mockResponse);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    // Function currently exists to prevent errors when logout is clicked and"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    // services reset."},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":6,"-":153}},{"path":"src/app/core/services/mocks/mock.issue.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { BehaviorSubject, forkJoin, Observable, of, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { catchError, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { generateIssueWithRandomData } from \u0027../../../../../tests/constants/githubissue.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../../models/comment.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../../models/github/github-comment.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../../models/github/github-issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../../models/github/github-label.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { HiddenData } from \u0027../../models/hidden-data.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../../models/issue-dispute.model\u0027;"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import { Issue, Issues, STATUS } from \u0027../../models/issue.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../models/phase.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { DataService } from \u0027../data.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../github.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../phase.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":19,"author":{"gitId":"-"},"content":"})"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class MockIssueService {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  static readonly POLL_INTERVAL \u003d 5000; // 5 seconds"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  issues: Issues;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  issues$: BehaviorSubject\u003cIssue[]\u003e;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  private sessionId: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  private issueTeamFilter \u003d \u0027All Teams\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  private issuesPollSubscription: Subscription;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  /** Whether the IssueService is downloading the data from Github*/"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  public isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"  constructor(private githubService: GithubService, private phaseService: PhaseService, private dataService: DataService) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.issues$ \u003d new BehaviorSubject(new Array\u003cIssue\u003e());"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * Loads Issues and Prevents polling during testing."},{"lineNumber":38,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  startPollIssues() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription \u003d\u003d\u003d undefined) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      if (this.issues$.getValue().length \u003d\u003d\u003d 0) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.isLoading.next(true);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"      this.issuesPollSubscription \u003d of(this.reloadAllIssues()).subscribe((result) \u003d\u003e this.isLoading.next(false));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  stopPollIssues() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription.unsubscribe();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription \u003d undefined;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Simply returns the existing issue, to simulate polling."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  pollIssue(issueId: number): Observable\u003cIssue\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    return of(this.issues[issueId]);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  reloadAllIssues() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    return this.initializeData();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  getIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    if (this.issues \u003d\u003d\u003d undefined) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      return this.getLatestIssue(id);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      return of(this.issues[id]);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  getLatestIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    return this.githubService.fetchIssueGraphql(id).pipe("},{"lineNumber":77,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.createAndSaveIssueModel(response);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this.issues[id];"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return of(this.issues[id]);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, severity: string, type: string): Observable\u003cIssue\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const labelsArray \u003d [this.createLabel(\u0027severity\u0027, severity), this.createLabel(\u0027type\u0027, type)];"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const hiddenData \u003d new Map([[\u0027session\u0027, this.sessionId]]);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const issueDescription \u003d HiddenData.embedDataIntoString(description, hiddenData);"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"    return this.githubService"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"      .createIssue(title, issueDescription, labelsArray)"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"      .pipe(map((response: GithubIssue) \u003d\u003e this.createIssueModel(response)));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  updateIssue(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseModeration ? [] : issue.assignees;"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"    return this.githubService"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"      .updateIssue(issue.id, issue.title, this.createGithubIssueDescription(issue), this.createLabelsForIssue(issue), assignees)"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":101,"author":{"gitId":"-"},"content":"        map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          response.comments \u003d issue.githubComments;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          return this.createIssueModel(response);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  updateIssueWithComment(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    return this.githubService.updateIssueComment(issueComment).pipe("},{"lineNumber":110,"author":{"gitId":"-"},"content":"      flatMap((updatedComment: GithubComment) \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"        issue.githubComments \u003d [updatedComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d updatedComment.id)];"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this.updateIssue(issue);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  updateTesterResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const isTesterResponseExist \u003d this.issues[issue.id].testerResponses;"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"    const commentApiToCall \u003d isTesterResponseExist"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"      ? this.githubService.updateIssueComment(issueComment)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      : this.githubService.createIssueComment(issue.id, issueComment.description);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    const issueClone \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    issueClone.status \u003d STATUS.Done;"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    return forkJoin([commentApiToCall, this.updateIssue(issueClone)]).pipe("},{"lineNumber":127,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        issue.updateTesterResponse(githubComment);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  updateTutorResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.updateIssueComment(issueComment), this.updateIssue(issue)]).pipe("},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  createTeamResponse(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    const teamResponse \u003d issue.createGithubTeamResponse();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    return this.githubService.createIssueComment(issue.id, teamResponse).pipe("},{"lineNumber":148,"author":{"gitId":"-"},"content":"      flatMap((githubComment: GithubComment) \u003d\u003e {"},{"lineNumber":149,"author":{"gitId":"luminousleek"},"content":"        issue.githubComments \u003d [githubComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d githubComment.id)];"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return this.updateIssue(issue);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  createTutorResponse(issue: Issue, response: string): Observable\u003cIssue\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.createIssueComment(issue.id, response), this.updateIssue(issue)]).pipe("},{"lineNumber":157,"author":{"gitId":"luminousleek"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   * This function will create a github representation of issue\u0027s description. Given the issue model, it will piece together the different"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   * attributes to create the github\u0027s description."},{"lineNumber":168,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  private createGithubIssueDescription(issue: Issue): string {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":173,"author":{"gitId":"luminousleek"},"content":"        return ("},{"lineNumber":174,"author":{"gitId":"luminousleek"},"content":"          `# Issue Description\\n${issue.createGithubIssueDescription()}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          // `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}\\n` +"},{"lineNumber":176,"author":{"gitId":"luminousleek"},"content":"          `# Disputes\\n\\n${this.getIssueDisputeString(issue.issueDisputes)}\\n`"},{"lineNumber":177,"author":{"gitId":"luminousleek"},"content":"        );"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return issue.createGithubIssueDescription();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"  private getIssueDisputeString(issueDisputes: IssueDispute[]): string {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    let issueDisputeString \u003d \u0027\u0027;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    for (const issueDispute of issueDisputes) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      issueDisputeString +\u003d issueDispute.toString();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    return issueDisputeString;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  deleteIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    return this.githubService.closeIssue(id).pipe("},{"lineNumber":193,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        const deletedIssue \u003d this.createIssueModel(response);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        this.deleteFromLocalStore(deletedIssue);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return deletedIssue;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is deleted."},{"lineNumber":203,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  deleteFromLocalStore(issueToDelete: Issue) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    const { [issueToDelete.id]: issueToRemove, ...withoutIssueToRemove } \u003d this.issues;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    this.issues \u003d withoutIssueToRemove;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is added/updated."},{"lineNumber":212,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  updateLocalStore(issueToUpdate: Issue) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    this.issues \u003d {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      ...this.issues,"},{"lineNumber":216,"author":{"gitId":"luminousleek"},"content":"      [issueToUpdate.id]: issueToUpdate"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   * Check whether the issue has been responded in the phase 2/3."},{"lineNumber":223,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  hasTeamResponse(issueId: number): boolean {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    return !!this.issues[issueId].teamResponse;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Obtain an observable containing an array of issues that are duplicates of the parentIssue."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  getDuplicateIssuesFor(parentIssue: Issue): Observable\u003cIssue[]\u003e {"},{"lineNumber":232,"author":{"gitId":"luminousleek"},"content":"    return this.issues$.pipe("},{"lineNumber":233,"author":{"gitId":"luminousleek"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"luminousleek"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"          return issue.duplicateOf \u003d\u003d\u003d parentIssue.id;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":237,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":238,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    this.issues \u003d undefined;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    this.sessionId \u003d undefined;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    this.issues$.next(new Array\u003cIssue\u003e());"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    this.stopPollIssues();"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    this.isLoading.complete();"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    this.isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * Populates store with random issues depending on the current test phase."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  private initializeData(): Observable\u003cIssue[]\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    if (this.issues !\u003d null) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      return of(Object.values(this.issues));"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    const NUM_ISSUES \u003d 10;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    const generatedIssues: Array\u003cGithubIssue\u003e \u003d [];"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        for (let i \u003d 0; i \u003c NUM_ISSUES; i++) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          generatedIssues.push(generateIssueWithRandomData());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"    for (const issue of generatedIssues) {"},{"lineNumber":271,"author":{"gitId":"luminousleek"},"content":"      this.createAndSaveIssueModel(issue);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"    return of(Object.values(this.issues));"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"  private createAndSaveIssueModel(githubIssue: GithubIssue): boolean {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    const issue \u003d this.createIssueModel(githubIssue);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    this.updateLocalStore(issue);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":284,"author":{"gitId":"-"},"content":"   * Given an issue model, create the necessary labels for github."},{"lineNumber":285,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  private createLabelsForIssue(issue: Issue): string[] {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    const result \u003d [];"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"luminousleek"},"content":"    if (this.phaseService.currentPhase !\u003d\u003d Phase.phaseBugReporting \u0026\u0026 this.phaseService.currentPhase !\u003d\u003d Phase.phaseTesterResponse) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      const studentTeam \u003d issue.teamAssigned.id.split(\u0027-\u0027);"},{"lineNumber":291,"author":{"gitId":"luminousleek"},"content":"      result.push(this.createLabel(\u0027tutorial\u0027, `${studentTeam[0]}-${studentTeam[1]}`), this.createLabel(\u0027team\u0027, studentTeam[2]));"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"    if (issue.severity) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027severity\u0027, issue.severity));"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    if (issue.type) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027type\u0027, issue.type));"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    if (issue.responseTag) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027response\u0027, issue.responseTag));"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"    if (issue.duplicated) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      result.push(\u0027duplicate\u0027);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    if (issue.status) {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027status\u0027, issue.status));"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    if (issue.pending) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      if (+issue.pending \u003e 0) {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        result.push(this.createLabel(\u0027pending\u0027, issue.pending));"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"    if (issue.unsure) {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      result.push(\u0027unsure\u0027);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"  private createLabel(prepend: string, value: string) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    return `${prepend}.${value}`;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"  private extractTeamIdFromGithubIssue(githubIssue: GithubIssue): string {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    return githubIssue.findLabel(GithubLabel.LABELS.tutorial).concat(\u0027-\u0027).concat(githubIssue.findLabel(GithubLabel.LABELS.team));"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"  private createIssueModel(githubIssue: GithubIssue): Issue {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(githubIssue);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":340,"author":{"gitId":"luminousleek"},"content":"        return Issue.createPhaseTeamResponseIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTesterResponseIssue(githubIssue);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":344,"author":{"gitId":"luminousleek"},"content":"        return Issue.createPhaseModerationIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  setIssueTeamFilter(filterValue: string) {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    if (filterValue) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      this.issueTeamFilter \u003d filterValue;"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"  setSessionId(sessionId: string) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    this.sessionId \u003d sessionId;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"  getIssueTeamFilter(): string {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    return this.issueTeamFilter;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":31,"-":332}},{"path":"src/app/core/services/permission.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../models/user.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./phase.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"const enum PermissionLevel {"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  Phase \u003d \u0027Phase\u0027,"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  User \u003d \u0027User\u0027"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"const PERMISSIONS \u003d {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  [Phase.phaseBugReporting]: {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    [UserRole.Student]: {"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: true,"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: true,"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: true,"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: true,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: true,"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    [UserRole.Tutor]: {"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: false,"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: false,"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    [UserRole.Admin]: {"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: true,"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: true,"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: true,"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: true,"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: true,"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  [Phase.phaseTeamResponse]: {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    [UserRole.Student]: {"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: false,"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: true,"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: true,"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    [UserRole.Tutor]: {"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: false,"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: false,"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    [UserRole.Admin]: {"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: true,"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: true,"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: true,"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  [Phase.phaseTesterResponse]: {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    [UserRole.Student]: {"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: false,"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: false,"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: true,"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    [UserRole.Tutor]: {"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: false,"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: false,"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    [UserRole.Admin]: {"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: true,"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: true,"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: true,"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: true,"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  /** Phase 3 Permissions **/"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  [Phase.phaseModeration]: {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    [UserRole.Student]: {"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: false,"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: false,"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: false"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    [UserRole.Tutor]: {"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: true,"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: true,"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: true"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    [UserRole.Admin]: {"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"      isIssueCreatable: false,"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"      isIssueDeletable: false,"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"      isIssueTitleEditable: false,"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"      isIssueDescriptionEditable: true,"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"      isIssueLabelsEditable: true,"},{"lineNumber":140,"author":{"gitId":"luminousleek"},"content":"      isTeamResponseEditable: false,"},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"      isTesterResponseEditable: false,"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"      isTutorResponseEditable: true"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"};"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":148,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":149,"author":{"gitId":"-"},"content":"})"},{"lineNumber":150,"author":{"gitId":"-"},"content":"export class PermissionService {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  constructor(private userService: UserService, private phaseService: PhaseService) {}"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  isIssueCreatable(): boolean {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isIssueCreatable\u0027);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"  isIssueDeletable(): boolean {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isIssueDeletable\u0027);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  isIssueTitleEditable(): boolean {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isIssueTitleEditable\u0027);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  isIssueDescriptionEditable(): boolean {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isIssueDescriptionEditable\u0027);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  isIssueLabelsEditable(): boolean {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isIssueLabelsEditable\u0027);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  isTesterResponseEditable(): boolean {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isTesterResponseEditable\u0027);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  isTeamResponseEditable(): boolean {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isTeamResponseEditable\u0027);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  isTutorResponseEditable(): boolean {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    return this.askForPermission(PermissionLevel.User, \u0027isTutorResponseEditable\u0027);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  isIssueEditable(): boolean {"},{"lineNumber":186,"author":{"gitId":"luminousleek"},"content":"    return ("},{"lineNumber":187,"author":{"gitId":"luminousleek"},"content":"      this.isIssueTitleEditable() ||"},{"lineNumber":188,"author":{"gitId":"luminousleek"},"content":"      this.isIssueDescriptionEditable() ||"},{"lineNumber":189,"author":{"gitId":"luminousleek"},"content":"      this.isIssueLabelsEditable() ||"},{"lineNumber":190,"author":{"gitId":"luminousleek"},"content":"      this.isTeamResponseEditable() ||"},{"lineNumber":191,"author":{"gitId":"luminousleek"},"content":"      this.isTesterResponseEditable() ||"},{"lineNumber":192,"author":{"gitId":"luminousleek"},"content":"      this.isTutorResponseEditable()"},{"lineNumber":193,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"  private askForPermission(permissionLevel: PermissionLevel, permissionType: string): boolean {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    switch (permissionLevel) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      case PermissionLevel.Phase:"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return PERMISSIONS[this.phaseService.currentPhase][permissionType];"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      case PermissionLevel.User:"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return PERMISSIONS[this.phaseService.currentPhase][this.userService.currentUser.role][permissionType];"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":109,"-":97}},{"path":"src/app/core/services/phase.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable, pipe } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { flatMap, map, retry, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { throwIfFalse } from \u0027../../shared/lib/custom-ops\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { assertSessionDataIntegrity, SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027./label.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { RepoCreatorService } from \u0027./repo-creator.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"export const SESSION_AVALIABILITY_FIX_FAILED \u003d \u0027Session Availability Fix failed.\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"export const PhaseDescription \u003d {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  [Phase.phaseBugReporting]: \u0027Bug Reporting Phase\u0027,"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  [Phase.phaseTeamResponse]: \"Team\u0027s Response Phase\","},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  [Phase.phaseTesterResponse]: \"Tester\u0027s Response Phase\","},{"lineNumber":17,"author":{"gitId":"-"},"content":"  [Phase.phaseModeration]: \u0027Moderation Phase\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"};"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Responsible for managing the current phase of CATcher as well as the"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * current session data and repository details related to the session."},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export class PhaseService {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  public currentPhase: Phase;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  private repoName: string;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  private orgName: string;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  public sessionData: SessionData;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private phaseRepoOwners \u003d {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    phaseBugReporting: \u0027\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    phaseTeamResponse: \u0027\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    phaseTesterResponse: \u0027\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    phaseModeration: \u0027\u0027"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"  constructor(private githubService: GithubService, private labelService: LabelService, private repoCreatorService: RepoCreatorService) {}"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * Stores the location of the repositories belonging to"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * each phase of the application."},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * @param org - name of organization."},{"lineNumber":47,"author":{"gitId":"-"},"content":"   * @param user - name of user."},{"lineNumber":48,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  setPhaseOwners(org: string, user: string): void {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.orgName \u003d org;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.phaseRepoOwners.phaseBugReporting \u003d user;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.phaseRepoOwners.phaseTeamResponse \u003d org;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.phaseRepoOwners.phaseTesterResponse \u003d user;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.phaseRepoOwners.phaseModeration \u003d org;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Returns the name of the owner of a given phase."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * @param phase"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  getPhaseOwner(phase: string): string {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    return this.phaseRepoOwners[phase];"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  fetchSessionData(): Observable\u003cSessionData\u003e {"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"    return this.githubService.fetchSettingsFile().pipe(map((data) \u003d\u003e data as SessionData));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * Will fetch session data and update phase service with it."},{"lineNumber":71,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  storeSessionData(): Observable\u003cvoid\u003e {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    return this.fetchSessionData().pipe("},{"lineNumber":74,"author":{"gitId":"-"},"content":"      assertSessionDataIntegrity(),"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      map((sessionData: SessionData) \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        localStorage.setItem(\u0027sessionData\u0027, JSON.stringify(sessionData));"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.updateSessionParameters(sessionData);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * Retrieves session data from local storage and update phase service with it."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  setSessionData() {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    const sessionData \u003d JSON.parse(localStorage.getItem(\u0027sessionData\u0027));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    this.updateSessionParameters(sessionData);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"   * Determines the github\u0027s level of repo permission required for the phase."},{"lineNumber":92,"author":{"gitId":"-"},"content":"   * Ref: https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/#available-scopes"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  githubRepoPermissionLevel(): string {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    if (this.sessionData.openPhases.includes(Phase.phaseModeration)) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      return \u0027repo\u0027;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      return \u0027public_repo\u0027;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   * Checks if the necessary repository is available and creates it if the permissions are available."},{"lineNumber":104,"author":{"gitId":"-"},"content":"   * @param sessionData"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  verifySessionAvailability(sessionData: SessionData): Observable\u003cboolean\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    return this.githubService.isRepositoryPresent(this.phaseRepoOwners[this.currentPhase], sessionData[this.currentPhase]);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   * Stores session data and sets current session\u0027s phase."},{"lineNumber":112,"author":{"gitId":"-"},"content":"   * @param sessionData"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  updateSessionParameters(sessionData: SessionData) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.sessionData \u003d sessionData;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d Phase[sessionData.openPhases[0]];"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    this.repoName \u003d sessionData[sessionData.openPhases[0]];"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    this.githubService.storePhaseDetails(this.phaseRepoOwners[this.currentPhase], this.repoName);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":122,"author":{"gitId":"-"},"content":"   * Ensures that the necessary data for the current session is available"},{"lineNumber":123,"author":{"gitId":"-"},"content":"   * and synchronized with the remote server."},{"lineNumber":124,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  sessionSetup(): Observable\u003cany\u003e {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    // Permission Caching Mechanism to prevent repeating permission request."},{"lineNumber":127,"author":{"gitId":"-"},"content":"    let isSessionFixPermissionGranted \u003d false;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    const cacheSessionFixPermission \u003d () \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      return pipe("},{"lineNumber":130,"author":{"gitId":"-"},"content":"        tap((sessionFixPermission: boolean | null) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"          isSessionFixPermissionGranted \u003d sessionFixPermission ? sessionFixPermission : false;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return this.fetchSessionData().pipe("},{"lineNumber":137,"author":{"gitId":"-"},"content":"      assertSessionDataIntegrity(),"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      flatMap((sessionData: SessionData) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        this.updateSessionParameters(sessionData);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return this.verifySessionAvailability(sessionData);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      this.repoCreatorService.requestRepoCreationPermissions(this.currentPhase, this.sessionData[this.currentPhase]),"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      cacheSessionFixPermission(),"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      this.repoCreatorService.verifyRepoCreationPermissions(this.currentPhase),"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      this.repoCreatorService.attemptRepoCreation(this.sessionData[this.currentPhase]),"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      this.repoCreatorService.verifyRepoCreation(this.getPhaseOwner(this.currentPhase), this.sessionData[this.currentPhase]),"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      throwIfFalse("},{"lineNumber":148,"author":{"gitId":"-"},"content":"        (isSessionCreated: boolean) \u003d\u003e isSessionCreated,"},{"lineNumber":149,"author":{"gitId":"luminousleek"},"content":"        () \u003d\u003e new Error(SESSION_AVALIABILITY_FIX_FAILED)"},{"lineNumber":150,"author":{"gitId":"luminousleek"},"content":"      ),"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      this.labelService.syncLabels(this.isTeamOrModerationPhase()),"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      retry(1) // Retry once, to handle edge case where GitHub API cannot immediately confirm existence of the newly created repo."},{"lineNumber":153,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"  private isTeamOrModerationPhase(): boolean {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    return this.currentPhase \u003d\u003d\u003d Phase.phaseTeamResponse || this.currentPhase \u003d\u003d\u003d Phase.phaseModeration;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  public getPhaseDetail() {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    return this.orgName.concat(\u0027/\u0027).concat(this.repoName);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d null;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":7,"-":160}},{"path":"src/app/core/services/profile.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { isValidProfile, Profile } from \u0027../models/profile.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"export const MALFORMED_PROFILES_ERROR: Error \u003d new Error(\u0027profiles.json is malformed\u0027);"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class ProfileService {"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   * Gets the required profiles from the external repository file."},{"lineNumber":15,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  public fetchExternalProfiles(): Promise\u003cProfile[]\u003e {"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    return this.githubService"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"      .getProfilesData()"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"      .then((res) \u003d\u003e res.json())"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"      .then((json) \u003d\u003e json.profiles || [])"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"      .then((profiles) \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.validateProfiles(profiles);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return profiles;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * Checks if the profiles supplied are valid. If not,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * throw an error."},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * @param profiles the profiles supplied."},{"lineNumber":31,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  public validateProfiles(profiles: any): void {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    if (!profiles.every(isValidProfile)) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      throw MALFORMED_PROFILES_ERROR;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":6,"-":31}},{"path":"src/app/core/services/repo-creator.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatDialog, MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable, of, pipe, UnaryFunction } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { flatMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../models/user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SessionFixConfirmationComponent } from \u0027./session-fix-confirmation/session-fix-confirmation.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"export const MISSING_REQUIRED_REPO \u003d \u0027You cannot proceed without the required repository.\u0027;"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"export const CURRENT_PHASE_REPO_CLOSED \u003d \"Current Phase\u0027s Repository has not been opened.\";"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"export const BUG_REPORTING_INVALID_ROLE \u003d \"\u0027Bug-Reporting Phase\u0027s repository initialisation is only available to Students.\u0027\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":17,"author":{"gitId":"-"},"content":"})"},{"lineNumber":18,"author":{"gitId":"-"},"content":"export class RepoCreatorService {"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  constructor(private githubService: GithubService, private userService: UserService, private repoCreationConfirmationDialog: MatDialog) {}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   * Prompts user to allow CATcher to create a repo, if repo does not"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * exist and current phase is the bug reporting phase."},{"lineNumber":24,"author":{"gitId":"-"},"content":"   * @param currentPhase the current phase of the session."},{"lineNumber":25,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":26,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"  public requestRepoCreationPermissions("},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    currentPhase: Phase,"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    phaseRepo: string"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"  ): UnaryFunction\u003cObservable\u003cboolean\u003e, Observable\u003cboolean | null\u003e\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":32,"author":{"gitId":"-"},"content":"      flatMap((isRepoPresent: boolean) \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!isRepoPresent \u0026\u0026 currentPhase \u003d\u003d\u003d Phase.phaseBugReporting) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          return this.openRepoCreationConfirmation(phaseRepo);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          return of(null);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * Launches the SessionFixConfirmation Dialog."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * @return Observable\u003cboolean\u003e - Representing user\u0027s permission grant."},{"lineNumber":46,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  private openRepoCreationConfirmation(phaseRepo: string): Observable\u003cboolean\u003e {"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    const dialogRef: MatDialogRef\u003cSessionFixConfirmationComponent\u003e \u003d this.repoCreationConfirmationDialog.open("},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"      SessionFixConfirmationComponent,"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"      {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        data: { user: this.userService.currentUser.loginId, repoName: phaseRepo }"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"      }"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    return dialogRef.afterClosed();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Checks if the current phase and current user role match the given permissions"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * for the user to create the phase repository if deemed necessary"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * @param currentPhase the current phase of the session."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"  public verifyRepoCreationPermissions(currentPhase: Phase): UnaryFunction\u003cObservable\u003cboolean | null\u003e, Observable\u003cboolean | null\u003e\u003e {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":64,"author":{"gitId":"-"},"content":"      tap((repoCreationPermission: boolean | null) \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (repoCreationPermission \u003d\u003d\u003d null) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (repoCreationPermission \u003d\u003d\u003d false) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          throw new Error(MISSING_REQUIRED_REPO);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } else if (currentPhase !\u003d\u003d Phase.phaseBugReporting) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          throw new Error(CURRENT_PHASE_REPO_CLOSED);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } else if (this.userService.currentUser.role !\u003d\u003d UserRole.Student) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          throw new Error(BUG_REPORTING_INVALID_ROLE);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * Attempts to create the repository if permissions have been given to do so."},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * @return - Dummy Observable to give the API sometime to propagate if the creation of the new"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   *           repository is needed since the API Call used here does not return any response."},{"lineNumber":85,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"  public attemptRepoCreation(phaseRepo: string): UnaryFunction\u003cObservable\u003cboolean | null\u003e, Observable\u003cboolean | null\u003e\u003e {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":88,"author":{"gitId":"-"},"content":"      flatMap((repoCreationPermission: boolean | null) \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (repoCreationPermission \u003d\u003d\u003d null) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          // No Session Fix Necessary"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          return of(null);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          this.githubService.createRepository(phaseRepo);"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"          return new Observable((subscriber) \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            setTimeout(() \u003d\u003e subscriber.next(true), 1000);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   * Checks if the specified repository has been created."},{"lineNumber":104,"author":{"gitId":"-"},"content":"   * @param phaseOwner the user or organization holding the specified repository."},{"lineNumber":105,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":106,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"  public verifyRepoCreation(phaseOwner: string, phaseRepo: string): UnaryFunction\u003cObservable\u003cboolean | null\u003e, Observable\u003cboolean\u003e\u003e {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":109,"author":{"gitId":"-"},"content":"      flatMap((isFixAttempted: boolean | null) \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!isFixAttempted) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          // If no fix has been attempted, there is no need to verify fix outcome."},{"lineNumber":112,"author":{"gitId":"-"},"content":"          return of(true);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          // Verify that Repository has been created if a fix attempt has occurred."},{"lineNumber":115,"author":{"gitId":"-"},"content":"          return this.githubService.isRepositoryPresent(phaseOwner, phaseRepo);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":17,"-":103}},{"path":"src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MAT_DIALOG_DATA, MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"export interface RepositoryData {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  user: string;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  repoName: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-session-fix-confirmation\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-fix-confirmation.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-fix-confirmation.component.css\u0027]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class SessionFixConfirmationComponent implements OnInit {"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  constructor(public dialogRef: MatDialogRef\u003cSessionFixConfirmationComponent\u003e, @Inject(MAT_DIALOG_DATA) public data: RepositoryData) {}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {}"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":16}},{"path":"src/app/core/services/upload.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { throwError } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { uuid } from \u0027../../shared/lib/uuid\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"const SUPPORTED_VIDEO_FILE_TYPES \u003d [\u0027mp4\u0027, \u0027mov\u0027];"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"export const SUPPORTED_FILE_TYPES \u003d ["},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  \u0027gif\u0027,"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  \u0027jpeg\u0027,"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  \u0027jpg\u0027,"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  \u0027png\u0027,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  \u0027docx\u0027,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  \u0027gz\u0027,"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  \u0027log\u0027,"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  \u0027pdf\u0027,"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  \u0027pptx\u0027,"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  \u0027txt\u0027,"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  \u0027xlsx\u0027,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  \u0027zip\u0027,"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  ...SUPPORTED_VIDEO_FILE_TYPES"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"];"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"export const FILE_TYPE_SUPPORT_ERROR \u003d \"We don\u0027t support that file type.\" + \u0027 Try again with \u0027 + SUPPORTED_FILE_TYPES.join(\u0027, \u0027) + \u0027.\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Returns an error message string for when file exceeds the defined size limit"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @param fileType Canonical name for file, not to be confused with file extension"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @param size Number of MBs"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"export const getSizeExceedErrorMsg \u003d (fileType: string, size: number): string \u003d\u003e `Oops, ${fileType} is too big. Keep it under ${size}MiB.`;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":32,"author":{"gitId":"-"},"content":"})"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Responsible for upload of media files to the current phase\u0027s repository."},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"export class UploadService {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  uploadFile(base64File: string | ArrayBuffer, userFilename: string) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    let base64String: string;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    if (base64File instanceof ArrayBuffer) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      base64String \u003d String.fromCharCode.apply(null, new Uint16Array(base64File));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      base64String \u003d base64File;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const fileType \u003d this.getFileExtension(userFilename);"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    if (SUPPORTED_FILE_TYPES.includes(fileType.toLowerCase())) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      base64String \u003d base64String.split(\u0027,\u0027)[1];"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      const onlineFilename \u003d uuid();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      return this.githubService.uploadFile(`${onlineFilename}.${fileType}`, base64String);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      return throwError(FILE_TYPE_SUPPORT_ERROR);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  getFileExtension(fileName: string): string {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    return fileName.split(\u0027.\u0027).pop();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  isVideoFile(fileName): boolean {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const fileType \u003d this.getFileExtension(fileName);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    return SUPPORTED_VIDEO_FILE_TYPES.includes(fileType.toLowerCase());"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  isSupportedFileType(fileName): boolean {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const fileType \u003d this.getFileExtension(fileName);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    return SUPPORTED_FILE_TYPES.includes(fileType.toLowerCase());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":18,"-":53}},{"path":"src/app/phase-bug-reporting/issue/issue.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ISSUE_COMPONENTS, ViewIssueComponent } from \u0027../../shared/view-issue/view-issue.component\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue\u0027,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue.component.html\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue.component.css\u0027]"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class IssueComponent implements OnInit {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  issueId: number;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  readonly issueComponents: ISSUE_COMPONENTS[] \u003d ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TESTER_POST,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.SEVERITY_LABEL,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TYPE_LABEL"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @ViewChild(ViewIssueComponent, { static: true }) viewIssue: ViewIssueComponent;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute) {}"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    this.route.params.subscribe((params) \u003d\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      this.issueId \u003d +params[\u0027issue_id\u0027];"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    });"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  canDeactivate(): boolean {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    return !this.viewIssue.isEditing();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":30}},{"path":"src/app/phase-bug-reporting/new-issue/new-issue.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"mat-display-1 title\"\u003eNew Issue\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"newIssueForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewIssue(myForm)\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"form\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"column left\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        \u003cmat-form-field\u003e"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"          \u003cinput id\u003d\"title\" formControlName\u003d\"title\" matInput placeholder\u003d\"Title\" required maxlength\u003d\"256\" /\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-error *ngIf\u003d\"title.errors \u0026\u0026 title.errors[\u0027required\u0027] \u0026\u0026 (title.touched || title.dirty)\"\u003e Title required. \u003c/mat-error\u003e"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-error *ngIf\u003d\"title.errors \u0026\u0026 title.errors[\u0027maxlength\u0027]\"\u003e Title cannot exceed 256 characters. \u003c/mat-error\u003e"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-hint *ngIf\u003d\"title.value?.length \u003e\u003d 206\"\u003e {{ 256 - title.value?.length }} characters remaining. \u003c/mat-hint\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"        \u003cdiv style\u003d\"margin: 10px 0 10px 0\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          \u003capp-comment-editor"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            [id]\u003d\"\u0027description\u0027\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"            [commentField]\u003d\"description\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"            [commentForm]\u003d\"this.newIssueForm\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"            [(isFormPending)]\u003d\"this.isFormPending\""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"            [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"          \u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003c/app-comment-editor\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"          style\u003d\"float: right\""},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"submit-new-bug-report\""},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"!newIssueForm.valid || isFormPending\""},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          {{ this.submitButtonText }}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"column right\"\u003e"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        \u003cdiv class\u003d\"severity-dropdown\"\u003e"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"          \u003capp-label-dropdown initialValue\u003d\"\" attributeName\u003d\"severity\" [dropdownForm]\u003d\"newIssueForm\"\u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        \u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        \u003cdiv class\u003d\"bug-dropdown\"\u003e"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"          \u003capp-label-dropdown initialValue\u003d\"\" attributeName\u003d\"type\" [dropdownForm]\u003d\"newIssueForm\"\u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":21,"-":26}},{"path":"src/app/phase-bug-reporting/new-issue/new-issue.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AbstractControl, FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../../shared/view-issue/view-issue.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027app-new-issue\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./new-issue.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./new-issue.component.css\u0027]"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class NewIssueComponent implements OnInit {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  newIssueForm: FormGroup;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  isFormPending \u003d false;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    private issueService: IssueService,"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    public labelService: LabelService,"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    private router: Router"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    this.newIssueForm \u003d this.formBuilder.group({"},{"lineNumber":31,"author":{"gitId":"gycgabriel"},"content":"      title: [\u0027\u0027, [Validators.required, Validators.maxLength(256)]],"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      description: [\u0027\u0027],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      severity: [\u0027\u0027, Validators.required],"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"      type: [\u0027\u0027, Validators.required]"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SUBMIT;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  submitNewIssue(form: NgForm) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    if (this.newIssueForm.invalid) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.isFormPending \u003d true;"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    this.issueService"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"      .createIssue(this.title.value, Issue.updateDescription(this.description.value), this.severity.value, this.type.value)"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"      .pipe(finalize(() \u003d\u003e (this.isFormPending \u003d false)))"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      .subscribe("},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        (newIssue) \u003d\u003e {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          this.issueService.updateLocalStore(newIssue);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          this.router.navigateByUrl(`phaseBugReporting/issues/${newIssue.id}`);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          form.resetForm();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  canDeactivate() {"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"    return ("},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"      !this.isAttributeEditing(this.title) \u0026\u0026"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"      !this.isAttributeEditing(this.description) \u0026\u0026"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"      !this.isAttributeEditing(this.severity) \u0026\u0026"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"      !this.isAttributeEditing(this.type)"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  isAttributeEditing(attribute: AbstractControl) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    return attribute.value !\u003d\u003d null \u0026\u0026 attribute.value !\u003d\u003d \u0027\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  get title() {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027title\u0027);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  get description() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027description\u0027);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  get severity() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027severity\u0027);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  get type() {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027type\u0027);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":21,"-":66,"gycgabriel":1}},{"path":"src/app/phase-bug-reporting/phase-bug-reporting-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AuthGuard } from \u0027../core/guards/auth.guard\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CanDeactivateIssueGuard } from \u0027../core/guards/can-deactivate-issue-guard.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { NewIssueComponent } from \u0027./new-issue/new-issue.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { PhaseBugReportingComponent } from \u0027./phase-bug-reporting.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":10,"author":{"gitId":"-"},"content":"  { path: \u0027phaseBugReporting\u0027, component: PhaseBugReportingComponent, canActivate: [AuthGuard] },"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  {"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    path: \u0027phaseBugReporting/issues/new\u0027,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    component: NewIssueComponent,"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    canActivate: [AuthGuard],"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    canDeactivate: [CanDeactivateIssueGuard]"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  },"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  {"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    path: \u0027phaseBugReporting/issues/:issue_id\u0027,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    component: IssueComponent,"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    canActivate: [AuthGuard],"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    canDeactivate: [CanDeactivateIssueGuard]"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"];"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  imports: [RouterModule.forChild(routes)],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"})"},{"lineNumber":29,"author":{"gitId":"-"},"content":"export class PhaseBugReportingRoutingModule {}"}],"authorContributionMap":{"luminousleek":12,"-":17}},{"path":"src/app/phase-bug-reporting/phase-bug-reporting.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".container {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":".title {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  padding: 30px 20px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".mat-column-actions {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  width: 20%;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":".mat-column-id {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":".mat-column-title {"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"  width: 35%;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":".mat-column-type {"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"  width: 25%;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":".mat-column-severity {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  width: 23%;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":31}},{"path":"src/app/phase-bug-reporting/phase-bug-reporting.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"        \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"          {{ userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u0027Issues you posted\u0027 : \u0027All Issues\u0027 }}"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"        \u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"      \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-right\"\u003e"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"permissions.isIssueCreatable()\""},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"create-new-bug-report-button\""},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"          routerLink\u003d\"issues/new\""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          New Issue"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":13,"-":20}},{"path":"src/app/phase-bug-reporting/phase-bug-reporting.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../core/services/permission.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../core/services/user.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  selector: \u0027app-phase-bug-reporting\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./phase-bug-reporting.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./phase-bug-reporting.component.css\u0027]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class PhaseBugReportingComponent implements OnInit {"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  readonly displayedColumns \u003d [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE, TABLE_COLUMNS.TYPE, TABLE_COLUMNS.SEVERITY, TABLE_COLUMNS.ACTIONS];"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.DELETE_ISSUE, ACTION_BUTTONS.FIX_ISSUE];"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  constructor(public permissions: PermissionService, public userService: UserService) {}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":4,"-":21}},{"path":"src/app/phase-bug-reporting/phase-bug-reporting.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../shared/comment-editor/comment-editor.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueTablesModule } from \u0027../shared/issue-tables/issue-tables.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../shared/issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelDropdownModule } from \u0027../shared/label-dropdown/label-dropdown.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ViewIssueModule } from \u0027../shared/view-issue/view-issue.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { NewIssueComponent } from \u0027./new-issue/new-issue.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PhaseBugReportingRoutingModule } from \u0027./phase-bug-reporting-routing.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseBugReportingComponent } from \u0027./phase-bug-reporting.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":16,"author":{"gitId":"-"},"content":"    PhaseBugReportingRoutingModule,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    IssueComponentsModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    CommentEditorModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ViewIssueModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    MarkdownModule.forChild(),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    IssueTablesModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    LabelDropdownModule"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"  declarations: [PhaseBugReportingComponent, NewIssueComponent, IssueComponent]"},{"lineNumber":26,"author":{"gitId":"-"},"content":"})"},{"lineNumber":27,"author":{"gitId":"-"},"content":"export class PhaseBugReportingModule {}"}],"authorContributionMap":{"luminousleek":1,"-":26}},{"path":"src/app/phase-moderation/issue/issue.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../core/services/permission.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ISSUE_COMPONENTS, ViewIssueComponent } from \u0027../../shared/view-issue/view-issue.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue.component.css\u0027]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class IssueComponent implements OnInit {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  issueId: number;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  readonly issueComponents: ISSUE_COMPONENTS[] \u003d ["},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TESTER_POST,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TEAM_RESPONSE,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.ISSUE_DISPUTE,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.SEVERITY_LABEL,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TYPE_LABEL,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.RESPONSE_LABEL,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.DUPLICATE,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.UNSURE_CHECKBOX"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  @ViewChild(ViewIssueComponent, { static: true }) viewIssue: ViewIssueComponent;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    private route: ActivatedRoute,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public permissions: PermissionService,"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public issueService: IssueService"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    this.route.params.subscribe((params) \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      this.issueId \u003d +params[\u0027issue_id\u0027];"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    });"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  canDeactivate(): boolean {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    return !this.viewIssue.isEditing();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":6,"-":39}},{"path":"src/app/phase-moderation/phase-moderation-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AuthGuard } from \u0027../core/guards/auth.guard\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CanDeactivateIssueGuard } from \u0027../core/guards/can-deactivate-issue-guard.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PhaseModerationComponent } from \u0027./phase-moderation.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    path: \u0027phaseModeration\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    component: PhaseModerationComponent,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    canActivate: [AuthGuard]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    path: \u0027phaseModeration/issues/:issue_id\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    component: IssueComponent,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    canActivate: [AuthGuard],"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    canDeactivate: [CanDeactivateIssueGuard]"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"-"},"content":"];"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  imports: [RouterModule.forChild(routes)],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":25,"author":{"gitId":"-"},"content":"})"},{"lineNumber":26,"author":{"gitId":"-"},"content":"export class PhaseModerationRoutingModule {}"}],"authorContributionMap":{"luminousleek":1,"-":25}},{"path":"src/app/phase-moderation/phase-moderation.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".mat-column-id {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".mat-column-title {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  width: 20%;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":".mat-column-type {"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  width: 15%;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":".mat-column-severity {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":".mat-column-Todo-Remaining {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  width: 20%;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":".mat-column-actions {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":23}},{"path":"src/app/phase-moderation/phase-moderation.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv style\u003d\"text-align: center; margin-bottom: 20px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cspan class\u003d\"mat-display-1\"\u003e {{ teamList ? teamFilter : userService.currentUser.team.id }} \u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cbutton *ngIf\u003d\"teamList\" [matMenuTriggerFor]\u003d\"teamMenu\" mat-icon-button\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e settings \u003c/mat-icon\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cmat-menu #teamMenu\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton mat-menu-item [disabled]\u003d\"team \u003d\u003d\u003d teamFilter\" *ngFor\u003d\"let team of teamList\" (click)\u003d\"updateDisplayedTeam(team)\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cspan\u003e {{ team }} \u003c/span\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/mat-menu\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e\u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003eIssues Submitted by Students\u003c/h1\u003e\u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cbr /\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":2,"-":25}},{"path":"src/app/phase-moderation/phase-moderation.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { IssuesFilter } from \u0027../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../core/models/phase.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { DataService } from \u0027../core/services/data.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../core/services/issue.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../core/services/user.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-phase-moderation\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./phase-moderation.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./phase-moderation.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class PhaseModerationComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  displayedColumns \u003d ["},{"lineNumber":17,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.ID,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.TITLE,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.TYPE,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.SEVERITY,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.TODO,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.ACTIONS"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  public teamFilter \u003d \u0027All Teams\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.FIX_ISSUE];"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"  constructor(private issueService: IssueService, public userService: UserService, private dataService: DataService) {}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(this.teamFilter);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  get teamList(): string[] {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    const teams \u003d this.dataService.getTeams();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    switch (IssuesFilter[Phase.phaseModeration][this.userService.currentUser.role]) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027:"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        return [\u0027All Teams\u0027, ...this.userService.currentUser.allocatedTeams.map((team) \u003d\u003e team.id)];"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      case \u0027NO_FILTER\u0027:"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return [\u0027All Teams\u0027, ...teams];"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  updateDisplayedTeam(newTeam: string) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.teamFilter \u003d newTeam;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.table.issues.teamFilter \u003d this.teamFilter;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":55}},{"path":"src/app/phase-moderation/phase-moderation.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../shared/comment-editor/comment-editor.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueTablesModule } from \u0027../shared/issue-tables/issue-tables.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../shared/issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ViewIssueModule } from \u0027../shared/view-issue/view-issue.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PhaseModerationRoutingModule } from \u0027./phase-moderation-routing.module\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { PhaseModerationComponent } from \u0027./phase-moderation.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"    PhaseModerationRoutingModule,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    IssueComponentsModule,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    CommentEditorModule,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ViewIssueModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    MarkdownModule.forChild(),"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    IssueTablesModule"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"  declarations: [PhaseModerationComponent, IssueComponent]"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class PhaseModerationModule {}"}],"authorContributionMap":{"luminousleek":2,"-":22}},{"path":"src/app/phase-team-response/issue/issue.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../core/services/permission.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ISSUE_COMPONENTS, ViewIssueComponent } from \u0027../../shared/view-issue/view-issue.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue.component.css\u0027]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class IssueComponent implements OnInit {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  issueId: number;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  readonly issueComponents: ISSUE_COMPONENTS[] \u003d ["},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TESTER_POST,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TEAM_RESPONSE,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.NEW_TEAM_RESPONSE,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.SEVERITY_LABEL,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TYPE_LABEL,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.RESPONSE_LABEL,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.ASSIGNEE,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.DUPLICATE"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  @ViewChild(ViewIssueComponent, { static: true }) viewIssue: ViewIssueComponent;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"  constructor(public issueService: IssueService, private route: ActivatedRoute, public permissions: PermissionService) {}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    this.route.params.subscribe((params) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      this.issueId \u003d +params[\u0027issue_id\u0027];"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    });"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  canDeactivate(): boolean {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    return !this.viewIssue.isEditing();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":36}},{"path":"src/app/phase-team-response/issues-faulty/issues-faulty.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".container {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":".title {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  padding: 30px 20px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".mat-column-id {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  width: 5%;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":".mat-column-title {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  width: 20%;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":".mat-column-type {"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"  width: 15%;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":".mat-column-severity {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":".mat-column-responseTag {"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"  width: 10%;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":".mat-column-assignees {"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  width: 10%;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":".mat-column-teamAssigned {"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"  width: 7%;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":".mat-column-duplicatedIssues {"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"  width: 10%;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":".mat-column-actions {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  width: 15%;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":5,"-":39}},{"path":"src/app/phase-team-response/issues-faulty/issues-faulty.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e\u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003eFaulty Issues\u003c/h1\u003e\u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":1,"-":14}},{"path":"src/app/phase-team-response/issues-faulty/issues-faulty.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../../core/models/user.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../core/services/permission.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-issues-faulty\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issues-faulty.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./issues-faulty.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class IssuesFaultyComponent implements OnInit, OnChanges {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  displayedColumns: string[];"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  filter: (issue: Issue) \u003d\u003e boolean;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.FIX_ISSUE];"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @Input() teamFilter: string;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"  constructor(public issueService: IssueService, public userService: UserService, public permissions: PermissionService) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    if (userService.currentUser.role \u003d\u003d\u003d UserRole.Student) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      this.displayedColumns \u003d ["},{"lineNumber":28,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ID,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TITLE,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TYPE,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.SEVERITY,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.RESPONSE,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ASSIGNEE,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.DUPLICATED_ISSUES,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ACTIONS"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      this.displayedColumns \u003d ["},{"lineNumber":39,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ID,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TITLE,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TEAM_ASSIGNED,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TYPE,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.SEVERITY,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.RESPONSE,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ASSIGNEE,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.DUPLICATED_ISSUES,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ACTIONS"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  ngOnChanges(changes: SimpleChanges) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    if (!changes.teamFilter.isFirstChange()) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.filter \u003d (issue: Issue): boolean \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      const hasTeamResponse \u003d (issue: Issue) \u003d\u003e this.issueService.hasTeamResponse(issue.id);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      const isDuplicateIssue \u003d (issue: Issue) \u003d\u003e !!issue.duplicateOf;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      const isDuplicatedBy \u003d (issue: Issue) \u003d\u003e"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        !!this.issueService.issues$.getValue().filter((childIssue) \u003d\u003e childIssue.duplicateOf \u003d\u003d\u003d issue.id).length;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      return hasTeamResponse(issue) \u0026\u0026 isDuplicateIssue(issue) \u0026\u0026 isDuplicatedBy(issue);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":4,"-":67}},{"path":"src/app/phase-team-response/issues-pending/issues-pending.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".container {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":".title {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  padding: 30px 20px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".mat-column-actions {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  width: 13%;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":".mat-column-id {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":".mat-column-title {"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"  width: 26%;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":".mat-column-teamAssigned {"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"  width: 10%;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":".mat-column-type {"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"  width: 12%;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":".mat-column-severity {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":".mat-column-duplicateOf {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  width: 12%;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":37}},{"path":"src/app/phase-team-response/issues-pending/issues-pending.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e\u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0\"\u003eIssues Pending Response\u003c/h1\u003e\u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":1,"-":14}},{"path":"src/app/phase-team-response/issues-pending/issues-pending.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../../core/models/user.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../core/services/permission.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-issues-pending\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issues-pending.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issues-pending.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class IssuesPendingComponent implements OnInit, OnChanges {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  displayedColumns;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  filter: (issue: Issue) \u003d\u003e boolean;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d ["},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.VIEW_IN_WEB,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.RESPOND_TO_ISSUE,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.MARK_AS_RESPONDED,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.FIX_ISSUE"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  @Input() teamFilter: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"  constructor(public issueService: IssueService, public permissions: PermissionService, public userService: UserService) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    if (userService.currentUser.role !\u003d\u003d UserRole.Student) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      this.displayedColumns \u003d ["},{"lineNumber":33,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ID,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TITLE,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TEAM_ASSIGNED,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TYPE,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.SEVERITY,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.DUPLICATED_ISSUES,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ACTIONS"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      this.displayedColumns \u003d ["},{"lineNumber":43,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ID,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TITLE,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TYPE,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.SEVERITY,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.DUPLICATED_ISSUES,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ACTIONS"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  ngOnChanges(changes: SimpleChanges) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    if (!changes.teamFilter.isFirstChange()) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const isNotDuplicate \u003d (issue: Issue) \u003d\u003e !issue.duplicateOf;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const doesNotHaveFinalisedResponse \u003d (issue: Issue) \u003d\u003e"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"      !this.issueService.hasTeamResponse(issue.id) || !issue.status || issue.status \u003d\u003d\u003d STATUS.Incomplete;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.filter \u003d (issue: Issue) \u003d\u003e doesNotHaveFinalisedResponse(issue) \u0026\u0026 isNotDuplicate(issue);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":67}},{"path":"src/app/phase-team-response/issues-responded/issues-responded.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".container {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":".title {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  padding: 30px 20px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".mat-column-id {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  width: 5%;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":".mat-column-title {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  width: 20%;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":".mat-column-type {"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"  width: 11%;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":".mat-column-severity {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  width: 6%;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":".mat-column-responseTag {"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"  width: 10%;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":".mat-column-assignees {"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  width: 10%;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":".mat-column-teamAssigned {"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"  width: 6%;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":".mat-column-duplicatedIssues {"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"  width: 10%;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":".mat-column-actions {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  width: 13%;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":".grid-flush-right {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  right: 5px;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":5,"-":44}},{"path":"src/app/phase-team-response/issues-responded/issues-responded.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e\u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003eIssues Responded\u003c/h1\u003e\u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":1,"-":14}},{"path":"src/app/phase-team-response/issues-responded/issues-responded.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../../core/models/user.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-issues-responded\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issues-responded.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./issues-responded.component.css\u0027]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class IssuesRespondedComponent implements OnInit, OnChanges {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  displayedColumns: string[];"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  filter: (issue: Issue) \u003d\u003e boolean;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.MARK_AS_PENDING, ACTION_BUTTONS.FIX_ISSUE];"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  @Input() teamFilter: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor(public issueService: IssueService, public userService: UserService) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    if (userService.currentUser.role \u003d\u003d\u003d UserRole.Student) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      this.displayedColumns \u003d ["},{"lineNumber":27,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ID,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TITLE,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TYPE,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.SEVERITY,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.RESPONSE,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ASSIGNEE,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.DUPLICATED_ISSUES,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ACTIONS"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      this.displayedColumns \u003d ["},{"lineNumber":38,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ID,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TITLE,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TEAM_ASSIGNED,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.TYPE,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.SEVERITY,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.RESPONSE,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ASSIGNEE,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.DUPLICATED_ISSUES,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        TABLE_COLUMNS.ACTIONS"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ngOnChanges(changes: SimpleChanges) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    if (!changes.teamFilter.isFirstChange()) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.filter \u003d (issue: Issue) \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      const isDuplicateIssue \u003d (issue) \u003d\u003e !!issue.duplicateOf;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      const issueIsDone \u003d (issue: Issue) \u003d\u003e issue.status \u003d\u003d\u003d STATUS.Done;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      const hasTeamResponse \u003d (issue: Issue) \u003d\u003e this.issueService.hasTeamResponse(issue.id);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      return hasTeamResponse(issue) \u0026\u0026 !isDuplicateIssue(issue) \u0026\u0026 issueIsDone(issue);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":67}},{"path":"src/app/phase-team-response/phase-team-response-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AuthGuard } from \u0027../core/guards/auth.guard\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CanDeactivateIssueGuard } from \u0027../core/guards/can-deactivate-issue-guard.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PhaseTeamResponseComponent } from \u0027./phase-team-response.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":9,"author":{"gitId":"-"},"content":"  { path: \u0027phaseTeamResponse\u0027, component: PhaseTeamResponseComponent, canActivate: [AuthGuard] },"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  {"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    path: \u0027phaseTeamResponse/issues/:issue_id\u0027,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    component: IssueComponent,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    canActivate: [AuthGuard],"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    canDeactivate: [CanDeactivateIssueGuard]"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"-"},"content":"];"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  imports: [RouterModule.forChild(routes)],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class PhaseTeamResponseRoutingModule {}"}],"authorContributionMap":{"luminousleek":6,"-":16}},{"path":"src/app/phase-team-response/phase-team-response.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".container {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":".title {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  padding: 30px 20px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".mat-column-actions {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  width: 80px;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":".mat-column-id {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  width: 10%;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":".mat-column-title {"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"  width: 40%;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":".mat-column-type {"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"  width: 30%;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":".mat-column-severity {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  width: 12%;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":31}},{"path":"src/app/phase-team-response/phase-team-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv style\u003d\"text-align: center; margin-bottom: 20px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cspan class\u003d\"mat-display-1\"\u003e {{ teamList ? teamFilter : userService.currentUser.team.id }} \u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cbutton *ngIf\u003d\"teamList\" [matMenuTriggerFor]\u003d\"teamMenu\" mat-icon-button\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e settings \u003c/mat-icon\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cmat-menu #teamMenu\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton mat-menu-item [disabled]\u003d\"team \u003d\u003d\u003d teamFilter\" *ngFor\u003d\"let team of teamList\" (click)\u003d\"updateDisplayedTeam(team)\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cspan\u003e {{ team }} \u003c/span\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/mat-menu\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003capp-issues-pending [teamFilter]\u003d\"teamFilter\"\u003e\u003c/app-issues-pending\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003capp-issues-responded [teamFilter]\u003d\"teamFilter\"\u003e\u003c/app-issues-responded\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003capp-issues-faulty [teamFilter]\u003d\"teamFilter\"\u003e\u003c/app-issues-faulty\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":1,"-":17}},{"path":"src/app/phase-team-response/phase-team-response.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { IssuesFilter } from \u0027../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../core/models/phase.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { DataService } from \u0027../core/services/data.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../core/services/issue.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../core/services/user.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  selector: \u0027app-phase-team-response\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./phase-team-response.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./phase-team-response.component.css\u0027]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class PhaseTeamResponseComponent implements OnInit {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  public teamFilter \u003d \u0027All Teams\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  constructor(public userService: UserService, private dataService: DataService, private issueService: IssueService) {}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(this.teamFilter);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  get teamList(): string[] {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    const teams \u003d this.dataService.getTeams();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    switch (IssuesFilter[Phase.phaseTeamResponse][this.userService.currentUser.role]) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027:"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        return [\u0027All Teams\u0027, ...this.userService.currentUser.allocatedTeams.map((team) \u003d\u003e team.id)];"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      case \u0027NO_FILTER\u0027:"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return [\u0027All Teams\u0027, ...teams];"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  updateDisplayedTeam(newTeam: string) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.teamFilter \u003d newTeam;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":36}},{"path":"src/app/phase-team-response/phase-team-response.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../shared/comment-editor/comment-editor.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueTablesModule } from \u0027../shared/issue-tables/issue-tables.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../shared/issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ViewIssueModule } from \u0027../shared/view-issue/view-issue.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { IssuesFaultyComponent } from \u0027./issues-faulty/issues-faulty.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssuesPendingComponent } from \u0027./issues-pending/issues-pending.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { IssuesRespondedComponent } from \u0027./issues-responded/issues-responded.component\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseTeamResponseRoutingModule } from \u0027./phase-team-response-routing.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PhaseTeamResponseComponent } from \u0027./phase-team-response.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":17,"author":{"gitId":"-"},"content":"    PhaseTeamResponseRoutingModule,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    IssueComponentsModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    CommentEditorModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ViewIssueModule,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    MarkdownModule.forChild(),"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    IssueTablesModule"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"  declarations: [PhaseTeamResponseComponent, IssueComponent, IssuesPendingComponent, IssuesRespondedComponent, IssuesFaultyComponent]"},{"lineNumber":26,"author":{"gitId":"-"},"content":"})"},{"lineNumber":27,"author":{"gitId":"-"},"content":"export class PhaseTeamResponseModule {}"}],"authorContributionMap":{"luminousleek":2,"-":25}},{"path":"src/app/phase-tester-response/issue-accepted/issue-accepted.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e\u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0\"\u003eAccepted by Dev Team (No Action Required)\u003c/h1\u003e\u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":15}},{"path":"src/app/phase-tester-response/issue-accepted/issue-accepted.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import { TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"@Component({"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  selector: \u0027app-issue-accepted\u0027,"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  templateUrl: \u0027./issue-accepted.component.html\u0027,"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./issue-accepted.component.css\u0027]"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"})"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"export class IssueAcceptedComponent implements OnInit {"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  readonly displayedColumns \u003d [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE, TABLE_COLUMNS.TYPE, TABLE_COLUMNS.SEVERITY, TABLE_COLUMNS.ACTIONS];"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB];"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  filter: (issue: Issue) \u003d\u003e boolean;"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"  constructor() {}"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    this.filter \u003d (issue: Issue) \u003d\u003e issue.teamAccepted;"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"}"}],"authorContributionMap":{"luminousleek":27}},{"path":"src/app/phase-tester-response/issue-pending/issue-pending.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e\u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0\"\u003eIssues Pending Response\u003c/h1\u003e\u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":2,"-":13}},{"path":"src/app/phase-tester-response/issue-pending/issue-pending.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-pending\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue-pending.component.html\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue-pending.component.css\u0027]"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class IssuePendingComponent implements OnInit {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  readonly displayedColumns \u003d [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE, TABLE_COLUMNS.TYPE, TABLE_COLUMNS.SEVERITY, TABLE_COLUMNS.ACTIONS];"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d ["},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.VIEW_IN_WEB,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.RESPOND_TO_ISSUE,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.MARK_AS_RESPONDED,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ACTION_BUTTONS.FIX_ISSUE"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  filter: (issue: Issue) \u003d\u003e boolean;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  constructor() {}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    const hasComment \u003d (issue: Issue) \u003d\u003e !!issue.issueComment;"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    const isNotDone \u003d (issue: Issue) \u003d\u003e !issue.status || issue.status \u003d\u003d\u003d STATUS.Incomplete;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    this.filter \u003d (issue: Issue) \u003d\u003e isNotDone(issue) \u0026\u0026 hasComment(issue);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":32}},{"path":"src/app/phase-tester-response/issue-responded/issue-responded.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e\u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0\"\u003eIssues Responded\u003c/h1\u003e\u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":2,"-":13}},{"path":"src/app/phase-tester-response/issue-responded/issue-responded.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-responded\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue-responded.component.html\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue-responded.component.css\u0027]"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class IssueRespondedComponent implements OnInit {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  @ViewChild(IssueTablesComponent, { static: true }) table: IssueTablesComponent;"},{"lineNumber":13,"author":{"gitId":"gycgabriel"},"content":"  readonly displayedColumns \u003d ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.ID,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.TITLE,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.TYPE,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.SEVERITY,"},{"lineNumber":18,"author":{"gitId":"gycgabriel"},"content":"    TABLE_COLUMNS.TESTER_DISAGREE,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    TABLE_COLUMNS.ACTIONS"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.MARK_AS_PENDING, ACTION_BUTTONS.FIX_ISSUE];"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  filter: (issue: Issue) \u003d\u003e boolean;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor() {}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    const issueIsDone \u003d (issue: Issue) \u003d\u003e issue.status \u003d\u003d\u003d STATUS.Done;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    const issueHasComment \u003d (issue: Issue) \u003d\u003e !!issue.issueComment;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    this.filter \u003d (issue: Issue) \u003d\u003e issueIsDone(issue) \u0026\u0026 issueHasComment(issue);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.table.issues.filter \u003d filterValue;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":32,"gycgabriel":2}},{"path":"src/app/phase-tester-response/issue/issue.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ISSUE_COMPONENTS, ViewIssueComponent } from \u0027../../shared/view-issue/view-issue.component\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue\u0027,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue.component.html\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue.component.css\u0027]"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class IssueComponent implements OnInit {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  issueId: number;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  readonly issueComponents: ISSUE_COMPONENTS[] \u003d ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TESTER_POST,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.SEVERITY_LABEL,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TYPE_LABEL,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ISSUE_COMPONENTS.TEAM_RESPONSE,"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    ISSUE_COMPONENTS.TESTER_RESPONSE"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @ViewChild(ViewIssueComponent, { static: true }) viewIssue: ViewIssueComponent;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute) {}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    this.route.params.subscribe((params) \u003d\u003e {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      this.issueId \u003d +params[\u0027issue_id\u0027];"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    });"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  canDeactivate(): boolean {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    return !this.viewIssue.isEditing();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":31}},{"path":"src/app/phase-tester-response/phase-tester-response-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AuthGuard } from \u0027../core/guards/auth.guard\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CanDeactivateIssueGuard } from \u0027../core/guards/can-deactivate-issue-guard.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PhaseTesterResponseComponent } from \u0027./phase-tester-response.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":9,"author":{"gitId":"-"},"content":"  { path: \u0027phaseTesterResponse\u0027, component: PhaseTesterResponseComponent, canActivate: [AuthGuard] },"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  {"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    path: \u0027phaseTesterResponse/issues/:issue_id\u0027,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    component: IssueComponent,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    canActivate: [AuthGuard],"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    canDeactivate: [CanDeactivateIssueGuard]"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"-"},"content":"];"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  imports: [RouterModule.forChild(routes)],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class PhaseTesterResponseRoutingModule {}"}],"authorContributionMap":{"luminousleek":6,"-":16}},{"path":"src/app/phase-tester-response/phase-tester-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003capp-issue-pending\u003e\u003c/app-issue-pending\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003capp-issue-responded\u003e\u003c/app-issue-responded\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"  \u003capp-issue-accepted\u003e\u003c/app-issue-accepted\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":1,"-":4}},{"path":"src/app/phase-tester-response/phase-tester-response.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  selector: \u0027app-phase-tester-response\u0027,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./phase-tester-response.component.html\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./phase-tester-response.component.css\u0027]"},{"lineNumber":7,"author":{"gitId":"-"},"content":"})"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export class PhaseTesterResponseComponent implements OnInit {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  constructor() {}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {}"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":11}},{"path":"src/app/phase-tester-response/phase-tester-response.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueTablesModule } from \u0027../shared/issue-tables/issue-tables.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ViewIssueModule } from \u0027../shared/view-issue/view-issue.module\u0027;"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import { IssueAcceptedComponent } from \u0027./issue-accepted/issue-accepted.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssuePendingComponent } from \u0027./issue-pending/issue-pending.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { IssueRespondedComponent } from \u0027./issue-responded/issue-responded.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueComponent } from \u0027./issue/issue.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PhaseTesterResponseRoutingModule } from \u0027./phase-tester-response-routing.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseTesterResponseComponent } from \u0027./phase-tester-response.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  exports: [PhaseTesterResponseComponent],"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  declarations: [PhaseTesterResponseComponent, IssueComponent, IssuePendingComponent, IssueRespondedComponent, IssueAcceptedComponent],"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, PhaseTesterResponseRoutingModule, SharedModule, ViewIssueModule, IssueTablesModule, MarkdownModule.forChild()]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export class PhaseTesterResponseModule {}"}],"authorContributionMap":{"luminousleek":3,"-":16}},{"path":"src/app/shared/comment-editor/comment-editor.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".tab-content {"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  padding: 10px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".highlight-drag-box {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-style: dashed;"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  border-color: #98fb98;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  border-width: 2px;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":".highlight-drag-box-disabled {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  border-style: dashed;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  border-color: #fb2a5c;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  border-width: 2px;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":".drag-and-drop {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  color: #586069;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  font-size: 13px;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  line-height: 16px;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  border-top-style: dashed;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  border-top-color: #3f51b5;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  border-top-width: 2px;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  margin-top: 5px;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  padding-top: 5px;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":".error {"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"  color: #b22222;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":".file {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  top: 0;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  left: 0;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  opacity: 0;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  height: 100%;"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"  cursor: pointer;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":4,"-":38}},{"path":"src/app/shared/comment-editor/comment-editor.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"commentForm\" style\u003d\"min-height: 350px\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-tab-group class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-tab label\u003d\"Write\"\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"        #dropArea"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"        class\u003d\"tab-content\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"        (dragleave)\u003d\"onDragExit($event)\""},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"        (dragenter)\u003d\"onDragEnter($event)\""},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        (drop)\u003d\"onDrop($event)\""},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"        (dragover)\u003d\"enableFileDrop($event)\""},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"outline\" style\u003d\"width: 100%\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003e\u003c/mat-label\u003e"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"          \u003ctextarea"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"            (paste)\u003d\"onPaste($event)\""},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"            #commentTextArea"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"            (dragover)\u003d\"disableCaretMovement($event)\""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"            id\u003d\"{{ this.id }}\""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"            formControlName\u003d\"{{ this.id }}\""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"            matInput"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"            cdkTextareaAutosize"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"            #autosize\u003d\"cdkTextareaAutosize\""},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"            cdkAutosizeMinRows\u003d\"10\""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"            cdkAutosizeMaxRows\u003d\"20\""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"            class\u003d\"text-input-area\""},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"            placeholder\u003d\"{{ this.placeholderText }}\""},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"          \u003e\u003c/textarea\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cmat-error *ngIf\u003d\"commentField.errors \u0026\u0026 commentField.errors[\u0027required\u0027] \u0026\u0026 commentField.touched\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Description required."},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/mat-error\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"drag-and-drop\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"!isInErrorState\"\u003e Attach files by dragging \u0026 dropping or select them by clicking here. \u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"isInErrorState\" class\u003d\"error\"\u003e {{ uploadErrorMessage }} \u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            \u003cinput"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"              #fileInput"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"              [disabled]\u003d\"this.commentField.disabled\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"              [accept]\u003d\"SUPPORTED_FILE_TYPES\""},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"              type\u003d\"file\""},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"              class\u003d\"file\""},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"              (change)\u003d\"onFileInputUpload($event, fileInput)\""},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"            /\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/mat-tab\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003cmat-tab label\u003d\"Preview\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"tab-content\" style\u003d\"min-height: 228px\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cmarkdown #markdownArea *ngIf\u003d\"commentField.value !\u003d\u003d \u0027\u0027\" [data]\u003d\"sanitize(commentField.value)\"\u003e\u003c/markdown\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"commentField.value \u003d\u003d\u003d \u0027\u0027\"\u003eNothing to preview.\u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003c/mat-tab\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/mat-tab-group\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":29,"-":25}},{"path":"src/app/shared/comment-editor/comment-editor.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AbstractControl, FormGroup } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import * as DOMPurify from \u0027dompurify\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import { FILE_TYPE_SUPPORT_ERROR, getSizeExceedErrorMsg, SUPPORTED_FILE_TYPES, UploadService } from \u0027../../core/services/upload.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const DISPLAYABLE_CONTENT \u003d [\u0027gif\u0027, \u0027jpeg\u0027, \u0027jpg\u0027, \u0027png\u0027];"},{"lineNumber":9,"author":{"gitId":"-"},"content":"const BYTES_PER_MB \u003d 1024 * 1024;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"const SHOWN_MAX_UPLOAD_SIZE_MB \u003d 10;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"const SHOWN_MAX_VIDEO_UPLOAD_SIZE_MB \u003d 5;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"const MAX_UPLOAD_SIZE \u003d (SHOWN_MAX_UPLOAD_SIZE_MB + 1) * BYTES_PER_MB; // 11MB to allow 10.x MB"},{"lineNumber":14,"author":{"gitId":"-"},"content":"const MAX_VIDEO_UPLOAD_SIZE \u003d (SHOWN_MAX_VIDEO_UPLOAD_SIZE_MB + 1) * BYTES_PER_MB; // 6MB to allow 5.x MB"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-comment-editor\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./comment-editor.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./comment-editor.component.css\u0027]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class CommentEditorComponent implements OnInit {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  readonly SUPPORTED_FILE_TYPES \u003d SUPPORTED_FILE_TYPES;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"  constructor(private uploadService: UploadService, private errorHandlingService: ErrorHandlingService) {}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  @Input() commentField: AbstractControl; // Compulsory Input"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  @Input() commentForm: FormGroup; // Compulsory Input"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  @Input() id: string; // Compulsory Input"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  @Input() initialDescription?: string;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  placeholderText \u003d \u0027No details provided.\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  // Allows the comment editor to control the overall form\u0027s completeness."},{"lineNumber":34,"author":{"gitId":"-"},"content":"  @Input() isFormPending?: boolean;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @Output() isFormPendingChange: EventEmitter\u003cboolean\u003e \u003d new EventEmitter\u003cboolean\u003e();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  // Allow the comment editor to control the text of the submit button to prompt the user."},{"lineNumber":38,"author":{"gitId":"-"},"content":"  @Input() submitButtonText?: string;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  @Output() submitButtonTextChange: EventEmitter\u003cstring\u003e \u003d new EventEmitter\u003cstring\u003e();"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  initialSubmitButtonText: string;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  lastUploadingTime: string;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027dropArea\u0027, { static: true }) dropArea;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027commentTextArea\u0027, { static: true }) commentTextArea;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027markdownArea\u0027, { static: false }) markdownArea;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  dragActiveCounter \u003d 0;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  uploadErrorMessage: string;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"  formatFileUploadingButtonText(currentButtonText: string) {"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    return currentButtonText + \u0027 (Waiting for File Upload to finish...)\u0027;"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    if (this.initialDescription !\u003d\u003d undefined) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      this.commentField.setValue(this.initialDescription);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    if (this.commentField \u003d\u003d\u003d undefined || this.commentForm \u003d\u003d\u003d undefined || this.id \u003d\u003d\u003d undefined) {"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"      throw new Error(\"Comment Editor\u0027s compulsory properties are not defined.\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.initialSubmitButtonText \u003d this.submitButtonText;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  onDragEnter(event) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    event.preventDefault();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.dragActiveCounter++;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    if (this.commentField.disabled) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      this.dropArea.nativeElement.classList.add(\u0027highlight-drag-box-disabled\u0027);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      this.dropArea.nativeElement.classList.add(\u0027highlight-drag-box\u0027);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  // Prevent cursor in textarea from moving when file is dragged over it."},{"lineNumber":80,"author":{"gitId":"-"},"content":"  disableCaretMovement(event) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    event.preventDefault();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  // Sanitize markdown"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  sanitize(commentFieldValue) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return DOMPurify.sanitize(commentFieldValue);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  // To enable file drop in non-input elements, the dragOver event must be cancelled."},{"lineNumber":90,"author":{"gitId":"-"},"content":"  enableFileDrop(event) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    event.preventDefault();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  onDrop(event) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    event.preventDefault();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.removeHighlightBorderStyle();"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    if (this.commentField.disabled) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    const files \u003d event.dataTransfer.files;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    if (files.length \u003e 0) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      this.readAndUploadFile(files[0]);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      this.commentTextArea.nativeElement.focus();"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  onDragExit(event) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    event.preventDefault();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    this.removeHighlightBorderStyle();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  onFileInputUpload(event, fileInput) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    event.preventDefault();"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    const files \u003d fileInput.files;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    if (files.length \u003e 0) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      this.readAndUploadFile(files[0]);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      fileInput.value \u003d \u0027\u0027;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  updateParentFormsSubmittability(isFormPending: boolean, submitButtonText: string) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    this.isFormPendingChange.emit(isFormPending);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    this.submitButtonTextChange.emit(submitButtonText);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  readAndUploadFile(file: File): void {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    this.uploadErrorMessage \u003d null;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    const reader \u003d new FileReader();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    const filename \u003d file.name;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    const insertedText \u003d this.insertUploadingText(filename);"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    if (file.size \u003e\u003d MAX_UPLOAD_SIZE) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      this.handleUploadError(getSizeExceedErrorMsg(\u0027file\u0027, SHOWN_MAX_UPLOAD_SIZE_MB), insertedText);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    if (this.uploadService.isVideoFile(filename) \u0026\u0026 file.size \u003e\u003d MAX_VIDEO_UPLOAD_SIZE) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      this.handleUploadError(getSizeExceedErrorMsg(\u0027video\u0027, SHOWN_MAX_VIDEO_UPLOAD_SIZE_MB), insertedText);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    if (!this.uploadService.isSupportedFileType(filename)) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      this.handleUploadError(FILE_TYPE_SUPPORT_ERROR, insertedText);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    // Log the most recent upload."},{"lineNumber":155,"author":{"gitId":"-"},"content":"    this.lastUploadingTime \u003d new Date().getTime().toString();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    const currentFileUploadTime \u003d this.lastUploadingTime;"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    // Prevents Form Submission during Upload"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    this.updateParentFormsSubmittability(true, this.formatFileUploadingButtonText(this.initialSubmitButtonText));"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    reader.onload \u003d () \u003d\u003e {"},{"lineNumber":162,"author":{"gitId":"luminousleek"},"content":"      this.uploadService.uploadFile(reader.result, filename).subscribe("},{"lineNumber":163,"author":{"gitId":"luminousleek"},"content":"        (response) \u003d\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          this.insertUploadUrl(filename, response.data.content.download_url);"},{"lineNumber":165,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":166,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          this.handleUploadError(error, insertedText);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          // Allow button enabling if this is the last file that was uploaded."},{"lineNumber":169,"author":{"gitId":"-"},"content":"          if (currentFileUploadTime \u003d\u003d\u003d this.lastUploadingTime) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.updateParentFormsSubmittability(false, this.initialSubmitButtonText);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":172,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":173,"author":{"gitId":"luminousleek"},"content":"        () \u003d\u003e {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          // Allow button enabling if this is the last file that was uploaded."},{"lineNumber":175,"author":{"gitId":"-"},"content":"          if (currentFileUploadTime \u003d\u003d\u003d this.lastUploadingTime) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.updateParentFormsSubmittability(false, this.initialSubmitButtonText);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    reader.readAsDataURL(file);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  onPaste(event) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    const items \u003d event.clipboardData.items;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    let blob \u003d null;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    for (const item of items) {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      if (item.type.indexOf(\u0027image\u0027) \u003d\u003d\u003d 0) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        blob \u003d item.getAsFile();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    if (blob) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      this.readAndUploadFile(blob);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  get isInErrorState(): boolean {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    return !!this.uploadErrorMessage;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  private handleUploadError(error, insertedText: string) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    if (error instanceof HttpErrorResponse) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(error);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      this.uploadErrorMessage \u003d \u0027Something went wrong while uploading your file. Please try again.\u0027;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      this.uploadErrorMessage \u003d error;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    this.commentField.setValue(this.commentField.value.replace(insertedText, \u0027\u0027));"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"  private insertUploadingText(filename: string): string {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    const originalDescription \u003d this.commentField.value;"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    const fileType \u003d filename.split(\u0027.\u0027).pop();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    let toInsert: string;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    if (DISPLAYABLE_CONTENT.includes(fileType.toLowerCase())) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      toInsert \u003d `![Uploading ${filename}...]\\n`;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      toInsert \u003d `[Uploading ${filename}...]\\n`;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    const cursorPosition \u003d this.commentTextArea.nativeElement.selectionEnd;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    const endOfLineIndex \u003d originalDescription.indexOf(\u0027\\n\u0027, cursorPosition);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    const nextCursorPosition \u003d cursorPosition + toInsert.length;"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    if (endOfLineIndex \u003d\u003d\u003d -1) {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      if (this.commentField.value \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        this.commentField.setValue(toInsert);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        this.commentField.setValue(`${this.commentField.value}\\n${toInsert}`);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      const startTillNewline \u003d originalDescription.slice(0, endOfLineIndex + 1);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      const newlineTillEnd \u003d originalDescription.slice(endOfLineIndex);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      this.commentField.setValue(`${startTillNewline + toInsert + newlineTillEnd}`);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    this.commentTextArea.nativeElement.setSelectionRange(nextCursorPosition, nextCursorPosition);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    return toInsert;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"  private insertUploadUrl(filename: string, uploadUrl: string) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    const cursorPosition \u003d this.commentTextArea.nativeElement.selectionEnd;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    const startIndexOfString \u003d this.commentField.value.indexOf(`[Uploading ${filename}...]`);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    const endIndexOfString \u003d startIndexOfString + `[Uploading ${filename}...]`.length;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    const endOfInsertedString \u003d startIndexOfString + `[${filename}](${uploadUrl})`.length;"},{"lineNumber":248,"author":{"gitId":"chunweii"},"content":"    const differenceInLength \u003d endOfInsertedString - endIndexOfString;"},{"lineNumber":249,"author":{"gitId":"chunweii"},"content":"    const newCursorPosition \u003d"},{"lineNumber":250,"author":{"gitId":"chunweii"},"content":"      cursorPosition \u003e startIndexOfString - 1 \u0026\u0026 cursorPosition \u003c\u003d endIndexOfString // within the range of uploading text"},{"lineNumber":251,"author":{"gitId":"chunweii"},"content":"        ? endOfInsertedString"},{"lineNumber":252,"author":{"gitId":"chunweii"},"content":"        : cursorPosition \u003c startIndexOfString // before the uploading text"},{"lineNumber":253,"author":{"gitId":"chunweii"},"content":"        ? cursorPosition"},{"lineNumber":254,"author":{"gitId":"chunweii"},"content":"        : cursorPosition + differenceInLength; // after the uploading text"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"luminousleek"},"content":"    this.commentField.setValue(this.commentField.value.replace(`[Uploading ${filename}...]`, `[${filename}](${uploadUrl})`));"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"chunweii"},"content":"    this.commentTextArea.nativeElement.setSelectionRange(newCursorPosition, newCursorPosition);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"  private removeHighlightBorderStyle() {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    this.dragActiveCounter--;"},{"lineNumber":263,"author":{"gitId":"luminousleek"},"content":"    if (this.dragActiveCounter \u003d\u003d\u003d 0) {"},{"lineNumber":264,"author":{"gitId":"luminousleek"},"content":"      // To make sure when dragging over a child element, drop area is still highlight."},{"lineNumber":265,"author":{"gitId":"-"},"content":"      this.dropArea.nativeElement.classList.remove(\u0027highlight-drag-box\u0027);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      this.dropArea.nativeElement.classList.remove(\u0027highlight-drag-box-disabled\u0027);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":19,"chunweii":8,"-":242}},{"path":"src/app/shared/comment-editor/comment-editor.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CommentEditorComponent } from \u0027./comment-editor.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  imports: [SharedModule, MarkdownModule.forChild()],"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  declarations: [CommentEditorComponent],"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  exports: [CommentEditorComponent]"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class CommentEditorModule {}"}],"authorContributionMap":{"luminousleek":3,"-":8}},{"path":"src/app/shared/error-toasters/error-toaster.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MaterialModule } from \u0027../material.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormErrorComponent } from \u0027./form-error/form-error.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GeneralMessageErrorComponent } from \u0027./general-message-error/general-message-error.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { InvalidCredentialsErrorComponent } from \u0027./invalid-credentials-error/invalid-credentials-error.component\u0027;"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"import { ToasterComponent } from \u0027./toaster/toaster.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, MaterialModule],"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"  declarations: [GeneralMessageErrorComponent, FormErrorComponent, InvalidCredentialsErrorComponent, ToasterComponent],"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  exports: [GeneralMessageErrorComponent, FormErrorComponent, InvalidCredentialsErrorComponent],"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  entryComponents: [GeneralMessageErrorComponent, FormErrorComponent, InvalidCredentialsErrorComponent]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class ErrorToasterModule {}"}],"authorContributionMap":{"luminousleek":3,"chunweii":2,"-":10}},{"path":"src/app/shared/error-toasters/form-error/form-error.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"\u003capp-toaster\u003e"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"  \u003cdiv *ngIf\u003d\"data.errors; else generalMessage\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cdiv *ngFor\u003d\"let error of data.errors\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      Validation Error:"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cul\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003cli\u003e{{ error.code + \u0027 in \u0027 + error.field }}\u003c/li\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"\u003c/app-toaster\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cng-template #generalMessage\u003e"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"  {{ \u0027Error code \u0027 + data.status + \u0027: \u0027 + data.message }}"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"chunweii":4,"-":10}},{"path":"src/app/shared/error-toasters/form-error/form-error.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"import { MAT_SNACK_BAR_DATA } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027app-form-error\u0027,"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"  templateUrl: \u0027./form-error.component.html\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"})"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export class FormErrorComponent {"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) {}"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"chunweii":2,"-":7}},{"path":"src/app/shared/error-toasters/general-message-error/general-message-error.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"\u003capp-toaster\u003e {{ data.message }} \u003c/app-toaster\u003e"}],"authorContributionMap":{"chunweii":1}},{"path":"src/app/shared/error-toasters/general-message-error/general-message-error.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"import { MAT_SNACK_BAR_DATA } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027app-general-message-error\u0027,"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"  templateUrl: \u0027./general-message-error.component.html\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"})"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export class GeneralMessageErrorComponent {"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) {}"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"chunweii":2,"-":7}},{"path":"src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"\u003cp style\u003d\"display: inline-block\"\u003eInvalid Credentials, please try again!\u003c/p\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"\u003cbutton style\u003d\"float: right; margin-top: 8px\" mat-button color\u003d\"accent\" (click)\u003d\"snackBarRef.dismiss()\"\u003eClose\u003c/button\u003e"}],"authorContributionMap":{"luminousleek":2}},{"path":"src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MAT_SNACK_BAR_DATA, MatSnackBarRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027app-form-error\u0027,"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"  templateUrl: \u0027./invalid-credentials-error.component.html\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"})"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export class InvalidCredentialsErrorComponent {"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  constructor(public snackBarRef: MatSnackBarRef\u003cInvalidCredentialsErrorComponent\u003e, @Inject(MAT_SNACK_BAR_DATA) public data: any) {}"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":8}},{"path":"src/app/shared/error-toasters/toaster/toaster.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":".toaster {"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"  display: flex;"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"  align-items: center;"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"  justify-content: space-between;"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"}"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":".message-container {"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"  vertical-align: middle;"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"  flex-basis: 80%;"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"  overflow-wrap: anywhere;"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"}"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":".message-container \u003e p {"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"  margin: auto 5px;"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"  text-align: center;"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"}"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"button {"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"  vertical-align: middle;"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"  flex-basis: 20%;"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"  margin: auto 5px;"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"  text-align: center;"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"}"}],"authorContributionMap":{"chunweii":23}},{"path":"src/app/shared/error-toasters/toaster/toaster.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"\u003cdiv class\u003d\"toaster\"\u003e"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"  \u003cdiv class\u003d\"message-container\"\u003e"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"    \u003cp\u003e"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"      \u003cng-content\u003e\u003c/ng-content\u003e"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"    \u003c/p\u003e"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"  \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"  \u003cbutton mat-button color\u003d\"accent\" (click)\u003d\"snackBarRef.dismiss()\"\u003eClose\u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"chunweii":8}},{"path":"src/app/shared/error-toasters/toaster/toaster.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"import { MatSnackBarRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"  selector: \u0027app-toaster\u0027,"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"  templateUrl: \u0027./toaster.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"  styleUrls: [\u0027./toaster.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"})"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"export class ToasterComponent implements OnInit {"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"  constructor(public snackBarRef: MatSnackBarRef\u003cToasterComponent\u003e) {}"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":""},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"  ngOnInit() {}"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"}"}],"authorContributionMap":{"chunweii":13}},{"path":"src/app/shared/issue-tables/IssuesDataTable.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DataSource } from \u0027@angular/cdk/table\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BehaviorSubject, merge, Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { paginateData } from \u0027./issue-paginator\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { getSortedData } from \u0027./issue-sorter\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { applySearchFilter } from \u0027./search-filter\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class IssuesDataTable extends DataSource\u003cIssue\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  private filterChange \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  private teamFilterChange \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  private issuesSubject \u003d new BehaviorSubject\u003cIssue[]\u003e([]);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  private issueSubscription: Subscription;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  public isLoading$ \u003d this.issueService.isLoading.asObservable();"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    private issueService: IssueService,"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    private sort: MatSort,"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    private paginator: MatPaginator,"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private displayedColumn: string[],"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private defaultFilter?: (issue: Issue) \u003d\u003e boolean"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"  ) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  connect(): Observable\u003cIssue[]\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    return this.issuesSubject.asObservable();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  disconnect() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.filterChange.complete();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.teamFilterChange.complete();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    this.issuesSubject.complete();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    this.issueSubscription.unsubscribe();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.issueService.stopPollIssues();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  loadIssues() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    const displayDataChanges \u003d ["},{"lineNumber":43,"author":{"gitId":"-"},"content":"      this.issueService.issues$,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      this.paginator.page,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      this.sort.sortChange,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      this.filterChange,"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"      this.teamFilterChange"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.issueService.startPollIssues();"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    this.issueSubscription \u003d this.issueService.issues$"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":53,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          return merge(...displayDataChanges).pipe("},{"lineNumber":55,"author":{"gitId":"-"},"content":"            map(() \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              let data \u003d \u003cIssue[]\u003eObject.values(this.issueService.issues$.getValue()).reverse();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              if (this.defaultFilter) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                data \u003d data.filter(this.defaultFilter);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              data \u003d getSortedData(this.sort, data);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              data \u003d this.getFilteredTeamData(data);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              data \u003d applySearchFilter(this.filter, this.displayedColumn, this.issueService, data);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              data \u003d paginateData(this.paginator, data);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"              return data;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            })"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"      .subscribe((issues) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.issuesSubject.next(issues);"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"      });"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  get filter(): string {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    return this.filterChange.value;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  set filter(filter: string) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    this.filterChange.next(filter);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  get teamFilter(): string {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    return this.teamFilterChange.value;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  set teamFilter(teamFilter: string) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.teamFilterChange.next(teamFilter);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(this.teamFilterChange.value);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  private getFilteredTeamData(data: Issue[]): Issue[] {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return data.filter((issue) \u003d\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      if (!this.teamFilter || this.teamFilter \u003d\u003d\u003d \u0027All Teams\u0027) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      return issue.teamAssigned.id \u003d\u003d\u003d this.teamFilter;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":13,"-":87}},{"path":"src/app/shared/issue-tables/issue-sorter.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { MatSort } from \u0027@angular/material\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue, ISSUE_TYPE_ORDER, SEVERITY_ORDER } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"export function getSortedData(sort: MatSort, data: Issue[]): Issue[] {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  if (!sort.active) {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    return data;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  const direction: number \u003d sort.direction \u003d\u003d\u003d \u0027asc\u0027 ? 1 : -1;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"  return data.sort((a, b) \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    switch (sort.active) {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      case \u0027type\u0027:"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return direction * compareByIssueType(a.type, b.type);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      case \u0027severity\u0027:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return direction * compareBySeverity(a.severity, b.severity);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      case \u0027assignees\u0027:"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a.assignees.join(\u0027, \u0027), b.assignees.join(\u0027, \u0027));"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      case \u0027teamAssigned\u0027:"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a.teamAssigned.id, b.teamAssigned.id);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      case \u0027Todo Remaining\u0027:"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return -direction * compareByIntegerValue(a.numOfUnresolvedDisputes(), b.numOfUnresolvedDisputes());"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      case \u0027id\u0027:"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return direction * compareByIntegerValue(a.id, b.id);"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"      default:"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        // title, responseTag are string values"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a[sort.active], b[sort.active]);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"function compareBySeverity(severityA: string, severityB: string): number {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  const orderA \u003d SEVERITY_ORDER[severityA];"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  const orderB \u003d SEVERITY_ORDER[severityB];"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  return compareByIntegerValue(orderA, orderB);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"function compareByIssueType(issueTypeA: string, issueTypeB: string): number {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  const orderA \u003d ISSUE_TYPE_ORDER[issueTypeA];"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  const orderB \u003d ISSUE_TYPE_ORDER[issueTypeB];"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  return compareByIntegerValue(orderA, orderB);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"function compareByStringValue(valueA: string, valueB: string): number {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  const orderA \u003d String(valueA || \u0027\u0027).toUpperCase();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  const orderB \u003d String(valueB || \u0027\u0027).toUpperCase();"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"  return orderA \u003c orderB ? -1 : 1;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"function compareByIntegerValue(valueA: number, valueB: number): number {"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"  return valueA \u003c valueB ? -1 : 1;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":5,"-":49}},{"path":"src/app/shared/issue-tables/issue-tables-columns.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export enum TABLE_COLUMNS {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  ID \u003d \u0027id\u0027,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  TITLE \u003d \u0027title\u0027,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  TEAM_ASSIGNED \u003d \u0027teamAssigned\u0027,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  TYPE \u003d \u0027type\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  SEVERITY \u003d \u0027severity\u0027,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  RESPONSE \u003d \u0027responseTag\u0027,"},{"lineNumber":8,"author":{"gitId":"gycgabriel"},"content":"  TESTER_DISAGREE \u003d \u0027testerDisagree\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ASSIGNEE \u003d \u0027assignees\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  DUPLICATED_ISSUES \u003d \u0027duplicatedIssues\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  TODO \u003d \u0027Todo Remaining\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  ACTIONS \u003d \u0027actions\u0027"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":12,"gycgabriel":1}},{"path":"src/app/shared/issue-tables/issue-tables.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".mat-table {"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  display: flex;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"  flex-wrap: wrap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  min-width: 1000px;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":".mat-paginator {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  min-width: 1000px;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":".mat-column {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".mat-column-id {"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  flex: 0 1 5%;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":".mat-column-title {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":".mat-column-type {"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"  overflow-x: auto;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":".mat-column-responseTag {"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"  overflow-x: auto;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":".mat-column-severity {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":".mat-column-duplicatedIssues {"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  overflow-x: auto;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":".mat-column-assignees {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  word-wrap: normal;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":".mat-column-Todo-Remaining {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":".mat-column-actions {"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"  overflow-x: auto;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  text-align: center !important;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":".mat-header-row {"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"  column-gap: 10px;"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"  min-width: 100%;"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"}"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":".mat-row {"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"  column-gap: 10px;"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"  min-width: 100%;"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"}"}],"authorContributionMap":{"luminousleek":17,"-":39}},{"path":"src/app/shared/issue-tables/issue-tables.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"\u003cmat-table [dataSource]\u003d\"this.issues\" matSort class\u003d\"mat-elevation-z8\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003c!-- ID Column --\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"id\"\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e ID \u003c/mat-header-cell\u003e"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"      \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\"\u003e{{ issue.id }}\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c!-- Title Column --\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"title\"\u003e"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Title \u003c/mat-header-cell\u003e"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{ this.fitTitleText(issue.title) }} \u003c/a\u003e"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c!-- Team Assigned Column --\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/mat-header-cell\u003e"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e {{ (issue.teamAssigned \u0026\u0026 issue.teamAssigned.id) || \u0027-\u0027 }} \u003c/mat-cell\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003c!-- Type Column --\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"type\"\u003e"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/mat-header-cell\u003e"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cspan (click)\u003d\"$event.stopPropagation()\" [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        {{ issue.type || \u0027-\u0027 }}"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"      \u003cspan"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"issue.teamChosenType \u0026\u0026 issue.teamChosenType !\u003d issue.type\""},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"display: inline; padding: 1px 2px\""},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        \u003cmat-icon style\u003d\"vertical-align: middle\"\u003earrow_right_alt\u003c/mat-icon\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"      \u003cspan"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"issue.teamChosenType \u0026\u0026 issue.teamChosenType !\u003d issue.type\""},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.teamChosenType))\""},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        {{ issue.teamChosenType }}"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c!-- Severity Column --\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"severity\"\u003e"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/mat-header-cell\u003e"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"      \u003cspan"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\""},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        {{ issue.severity || \u0027-\u0027 }}"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"      \u003cspan"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"issue.teamChosenSeverity \u0026\u0026 issue.teamChosenSeverity !\u003d issue.severity\""},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"display: inline; margin: 3px\""},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        \u003cmat-icon style\u003d\"vertical-align: middle\"\u003earrow_right_alt\u003c/mat-icon\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"      \u003cspan"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"issue.teamChosenSeverity \u0026\u0026 issue.teamChosenSeverity !\u003d issue.severity\""},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.teamChosenSeverity))\""},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        {{ issue.teamChosenSeverity }}"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c!--Response Tag Column--\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"responseTag\"\u003e"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/mat-header-cell\u003e"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"      \u003cspan"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"issue.responseTag\""},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.responseTag))\""},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        {{ issue.responseTag }}"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"!issue.responseTag\" style\u003d\"margin-left: 10%\"\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c!--Assignee Column--\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"assignees\"\u003e"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/mat-header-cell\u003e"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"      \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\" *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\"\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        {{ issue.assignees.join(\u0027, \u0027) }}"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 5%\"\u003e"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"        \u003cmat-icon matTooltip\u003d\"We strongly recommend assigning all issues to someone\" matTooltipPosition\u003d\"above\" style\u003d\"color: #ffab40\"\u003e"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"          warning"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"        \u003c/mat-icon\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  \u003c!-- Duplicated Issues Column --\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/mat-header-cell\u003e"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e-\u003c/div\u003e"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"      \u003cmat-chip-list"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"        *ngFor\u003d\"let duplicateIssue of issueService.getDuplicateIssuesFor(issue) | async\""},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"display: inline-block; margin-left: 5px\""},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"        \u003cmat-chip"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"          [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"          [matTooltip]\u003d\"duplicateIssue.title\""},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"          matTooltipPosition\u003d\"above\""},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"          style\u003d\"font-size: 12px; cursor: pointer\""},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          #{{ duplicateIssue.id }}"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        \u003c/mat-chip\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003c/mat-chip-list\u003e"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  \u003c!-- To do Column --\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"Todo Remaining\"\u003e"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Todo Remaining \u003c/mat-header-cell\u003e"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"isTodoListChecked(issue) \u0026\u0026 issue.issueDisputes.length \u003e 0\"\u003e \u003cfont color\u003d\"green\"\u003eAll tasks are completed\u003c/font\u003e \u003c/span\u003e"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"      \u003cspan *ngIf\u003d\"!isTodoListChecked(issue)\"\u003e"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"        \u003cfont color\u003d\"red\""},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"          \u003e{{ issue.issueDisputes.length - todoFinished(issue) }}/{{ issue.issueDisputes.length }} tasks pending.\u003c/font"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"        \u003e\u003c/span"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"      \u003cprogress"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"issue.issueDisputes.length \u003e 0\""},{"lineNumber":140,"author":{"gitId":"luminousleek"},"content":"        value\u003d\"{{ todoFinished(issue) }}\""},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"        max\u003d\"{{ issue.issueDisputes.length }}\""},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"        role\u003d\"progressbar\""},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"width: 100%\""},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"        aria-valuenow\u003d\"100\""},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"        aria-valuemin\u003d\"0\""},{"lineNumber":146,"author":{"gitId":"luminousleek"},"content":"        aria-valuemax\u003d\"100\""},{"lineNumber":147,"author":{"gitId":"luminousleek"},"content":"      \u003e\u003c/progress\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"issue.issueDisputes.length \u003d\u003d\u003d 0\"\u003e No Todo List for this issue \u003c/span\u003e"},{"lineNumber":149,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"gycgabriel"},"content":"  \u003c!--Tester Disagree Column--\u003e"},{"lineNumber":153,"author":{"gitId":"gycgabriel"},"content":"  \u003cng-container matColumnDef\u003d\"testerDisagree\"\u003e"},{"lineNumber":154,"author":{"gitId":"gycgabriel"},"content":"    \u003cmat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header\u003eResponse\u003c/mat-header-cell\u003e"},{"lineNumber":155,"author":{"gitId":"gycgabriel"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":156,"author":{"gitId":"gycgabriel"},"content":"      \u003c!-- Response Agree/Disagree colours are the same as Response Agree/Rejected label colours for uniformity in the app --\u003e"},{"lineNumber":157,"author":{"gitId":"gycgabriel"},"content":"      \u003cspan"},{"lineNumber":158,"author":{"gitId":"gycgabriel"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":159,"author":{"gitId":"gycgabriel"},"content":"        *ngIf\u003d\"issue.testerDisagree\""},{"lineNumber":160,"author":{"gitId":"gycgabriel"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027Rejected\u0027))\""},{"lineNumber":161,"author":{"gitId":"gycgabriel"},"content":"      \u003e"},{"lineNumber":162,"author":{"gitId":"gycgabriel"},"content":"        Disagree"},{"lineNumber":163,"author":{"gitId":"gycgabriel"},"content":"      \u003c/span\u003e"},{"lineNumber":164,"author":{"gitId":"gycgabriel"},"content":"      \u003cspan"},{"lineNumber":165,"author":{"gitId":"gycgabriel"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":166,"author":{"gitId":"gycgabriel"},"content":"        *ngIf\u003d\"!issue.testerDisagree\""},{"lineNumber":167,"author":{"gitId":"gycgabriel"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027Accepted\u0027))\""},{"lineNumber":168,"author":{"gitId":"gycgabriel"},"content":"      \u003e"},{"lineNumber":169,"author":{"gitId":"gycgabriel"},"content":"        Agree"},{"lineNumber":170,"author":{"gitId":"gycgabriel"},"content":"      \u003c/span\u003e"},{"lineNumber":171,"author":{"gitId":"gycgabriel"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"  \u003c!-- Action Buttons Column --\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"actions\"\u003e"},{"lineNumber":176,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-header-cell *matHeaderCellDef\u003e Actions \u003c/mat-header-cell\u003e"},{"lineNumber":177,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":178,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton"},{"lineNumber":179,"author":{"gitId":"luminousleek"},"content":"        mat-button"},{"lineNumber":180,"author":{"gitId":"luminousleek"},"content":"        matTooltip\u003d\"View this issue on GitHub\""},{"lineNumber":181,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"this.isActionVisible(action_buttons.VIEW_IN_WEB)\""},{"lineNumber":182,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"this.viewIssueInBrowser(issue.id, $event)\""},{"lineNumber":183,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":184,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":185,"author":{"gitId":"chunweii"},"content":"        \u003cmat-icon\u003eopen_in_new\u003c/mat-icon\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":187,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton"},{"lineNumber":188,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"this.isResponseEditable() \u0026\u0026 !issue.status \u0026\u0026 this.isActionVisible(action_buttons.RESPOND_TO_ISSUE); else tryEditIssue\""},{"lineNumber":189,"author":{"gitId":"luminousleek"},"content":"        [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\""},{"lineNumber":190,"author":{"gitId":"luminousleek"},"content":"        mat-button"},{"lineNumber":191,"author":{"gitId":"luminousleek"},"content":"        color\u003d\"accent\""},{"lineNumber":192,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":193,"author":{"gitId":"luminousleek"},"content":"        matTooltip\u003d\"Respond to this issue\""},{"lineNumber":194,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"this.logIssueRespondRouting(issue.id)\""},{"lineNumber":195,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003efeedback\u003c/mat-icon\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      \u003cng-template #tryEditIssue\u003e"},{"lineNumber":199,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":200,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"permissions.isIssueEditable() \u0026\u0026 this.isActionVisible(action_buttons.FIX_ISSUE)\""},{"lineNumber":201,"author":{"gitId":"luminousleek"},"content":"          mat-button"},{"lineNumber":202,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"accent\""},{"lineNumber":203,"author":{"gitId":"luminousleek"},"content":"          style\u003d\"transform: scale(0.8)\""},{"lineNumber":204,"author":{"gitId":"luminousleek"},"content":"          matTooltip\u003d\"Edit this issue\""},{"lineNumber":205,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"          \u003cmat-icon\u003eedit\u003c/mat-icon\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      \u003c/ng-template\u003e"},{"lineNumber":209,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton"},{"lineNumber":210,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"this.isResponseEditable() \u0026\u0026 issue.status \u0026\u0026 this.isActionVisible(action_buttons.MARK_AS_RESPONDED)\""},{"lineNumber":211,"author":{"gitId":"luminousleek"},"content":"        mat-button"},{"lineNumber":212,"author":{"gitId":"luminousleek"},"content":"        color\u003d\"primary\""},{"lineNumber":213,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"markAsResponded(issue, $event)\""},{"lineNumber":214,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":215,"author":{"gitId":"luminousleek"},"content":"        matTooltip\u003d\"Mark this issue as Responded\""},{"lineNumber":216,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003echeck_circle\u003c/mat-icon\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":219,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton"},{"lineNumber":220,"author":{"gitId":"luminousleek"},"content":"        color\u003d\"primary\""},{"lineNumber":221,"author":{"gitId":"luminousleek"},"content":"        matTooltip\u003d\"Mark this issue as Pending\""},{"lineNumber":222,"author":{"gitId":"luminousleek"},"content":"        mat-button"},{"lineNumber":223,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"markAsPending(issue, $event)\""},{"lineNumber":224,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":225,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\""},{"lineNumber":226,"author":{"gitId":"luminousleek"},"content":"          (userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027) \u0026\u0026"},{"lineNumber":227,"author":{"gitId":"luminousleek"},"content":"          this.isActionVisible(action_buttons.MARK_AS_PENDING)"},{"lineNumber":228,"author":{"gitId":"luminousleek"},"content":"        \""},{"lineNumber":229,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003ecancel\u003c/mat-icon\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":232,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton"},{"lineNumber":233,"author":{"gitId":"luminousleek"},"content":"        mat-button"},{"lineNumber":234,"author":{"gitId":"luminousleek"},"content":"        color\u003d\"warn\""},{"lineNumber":235,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"permissions.isIssueDeletable() \u0026\u0026 !issuesPendingDeletion[issue.id] \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\""},{"lineNumber":236,"author":{"gitId":"chunweii"},"content":"        (click)\u003d\"openDeleteDialog(issue.id, $event); $event.stopPropagation()\""},{"lineNumber":237,"author":{"gitId":"luminousleek"},"content":"        matTooltip\u003d\"Delete this issue\""},{"lineNumber":238,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":239,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003edelete_outline\u003c/mat-icon\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":242,"author":{"gitId":"luminousleek"},"content":"      \u003cmat-spinner"},{"lineNumber":243,"author":{"gitId":"luminousleek"},"content":"        color\u003d\"warn\""},{"lineNumber":244,"author":{"gitId":"luminousleek"},"content":"        [diameter]\u003d\"25\""},{"lineNumber":245,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"display: inline; padding-right: 30px; margin-left: 5px\""},{"lineNumber":246,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"issuesPendingDeletion[issue.id] \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\""},{"lineNumber":247,"author":{"gitId":"luminousleek"},"content":"      \u003e\u003c/mat-spinner\u003e"},{"lineNumber":248,"author":{"gitId":"luminousleek"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-header-row *matHeaderRowDef\u003d\"this.headers\"\u003e\u003c/mat-header-row\u003e\u003e"},{"lineNumber":252,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-row"},{"lineNumber":253,"author":{"gitId":"luminousleek"},"content":"    *matRowDef\u003d\"let issue; columns: this.headers\""},{"lineNumber":254,"author":{"gitId":"luminousleek"},"content":"    (click)\u003d\"this.logIssueEditRouting(issue.id)\""},{"lineNumber":255,"author":{"gitId":"luminousleek"},"content":"    [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\""},{"lineNumber":256,"author":{"gitId":"luminousleek"},"content":"    style\u003d\"cursor: pointer\""},{"lineNumber":257,"author":{"gitId":"luminousleek"},"content":"  \u003e\u003c/mat-row\u003e"},{"lineNumber":258,"author":{"gitId":"luminousleek"},"content":"\u003c/mat-table\u003e"},{"lineNumber":259,"author":{"gitId":"luminousleek"},"content":"\u003cmat-card *ngIf\u003d\"this.issues.isLoading$ | async\" style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/mat-card\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"}],"authorContributionMap":{"luminousleek":156,"chunweii":2,"-":84,"gycgabriel":20}},{"path":"src/app/shared/issue-tables/issue-tables.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../../core/services/dialog.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../core/services/permission.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { IssuesDataTable } from \u0027./IssuesDataTable\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"export enum ACTION_BUTTONS {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  VIEW_IN_WEB,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  MARK_AS_RESPONDED,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  MARK_AS_PENDING,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  RESPOND_TO_ISSUE,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  FIX_ISSUE,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  DELETE_ISSUE"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-tables\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue-tables.component.html\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue-tables.component.css\u0027]"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class IssueTablesComponent implements OnInit, AfterViewInit {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @Input() headers: string[];"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  @Input() actions: ACTION_BUTTONS[];"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  @Input() filters?: any \u003d undefined;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @ViewChild(MatSort, { static: true }) sort: MatSort;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  issues: IssuesDataTable;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  issuesPendingDeletion: { [id: number]: boolean };"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  public readonly action_buttons \u003d ACTION_BUTTONS;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  // Messages for the modal popup window upon deleting an issue"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  private readonly deleteIssueModalMessages \u003d [\u0027Do you wish to delete this issue?\u0027, \u0027This action is irreversible!\u0027];"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  private readonly yesButtonModalMessage \u003d \u0027Yes, I wish to delete this issue\u0027;"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"  private readonly noButtonModalMessage \u003d \"No, I don\u0027t wish to delete this issue\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    public userService: UserService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public permissions: PermissionService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public issueService: IssueService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private loggingService: LoggingService,"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    private dialogService: DialogService"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"    this.issues \u003d new IssuesDataTable(this.issueService, this.sort, this.paginator, this.headers, this.filters);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.issuesPendingDeletion \u003d {};"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      this.issues.loadIssues();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   * Formats the title text to account for those that contain long words."},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * @param title - Title of Issue that is to be displayed in the Table Row."},{"lineNumber":74,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  fitTitleText(title: string): string {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":77,"author":{"gitId":"-"},"content":"    const MAX_WORD_LENGTH \u003d 43;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    const SPLITTER_TEXT \u003d \u0027 \u0027;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"    return title"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"      .split(SPLITTER_TEXT)"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"      .map((word) \u003d\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (word.length \u003e MAX_WORD_LENGTH) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return word;"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"      .join(SPLITTER_TEXT);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  isActionVisible(action: ACTION_BUTTONS): boolean {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return this.actions.includes(action);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"chunweii"},"content":"  markAsResponded(issue: Issue, event: Event) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.loggingService.info(`IssueTablesComponent: Marking Issue ${issue.id} as Responded`);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    const newIssue \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    newIssue.status \u003d STATUS.Done;"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"    this.issueService.updateIssue(newIssue).subscribe("},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"      (updatedIssue) \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.issueService.updateLocalStore(updatedIssue);"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"      },"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"      (error) \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"      }"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  isResponseEditable() {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    return this.permissions.isTeamResponseEditable() || this.permissions.isTesterResponseEditable();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"chunweii"},"content":"  markAsPending(issue: Issue, event: Event) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.loggingService.info(`IssueTablesComponent: Marking Issue ${issue.id} as Pending`);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    const newIssue \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    newIssue.status \u003d STATUS.Incomplete;"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"    this.issueService.updateIssue(newIssue).subscribe("},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"      (updatedIssue) \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        this.issueService.updateLocalStore(updatedIssue);"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"      },"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"      (error) \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"      }"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"  logIssueRespondRouting(id: number) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    this.loggingService.info(`IssueTablesComponent: Proceeding to Respond to Issue ${id}`);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"  logIssueEditRouting(id: number) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    this.loggingService.info(`IssueTablesComponent: Proceeding to Edit Issue ${id}`);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":139,"author":{"gitId":"-"},"content":"   * Gets the number of resolved disputes."},{"lineNumber":140,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  todoFinished(issue: Issue): number {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    return issue.issueDisputes.length - issue.numOfUnresolvedDisputes();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   * Checks if all the disputes are resolved."},{"lineNumber":147,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  isTodoListChecked(issue: Issue): boolean {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    return issue.issueDisputes \u0026\u0026 issue.numOfUnresolvedDisputes() \u003d\u003d\u003d 0;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"chunweii"},"content":"  viewIssueInBrowser(id: number, event: Event) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    this.loggingService.info(`IssueTablesComponent: Opening Issue ${id} on Github`);"},{"lineNumber":154,"author":{"gitId":"chunweii"},"content":"    this.githubService.viewIssueInBrowser(id, event);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"chunweii"},"content":"  deleteIssue(id: number, event: Event) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    this.loggingService.info(`IssueTablesComponent: Deleting Issue ${id}`);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    this.issuesPendingDeletion \u003d {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      ...this.issuesPendingDeletion,"},{"lineNumber":161,"author":{"gitId":"luminousleek"},"content":"      [id]: true"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":163,"author":{"gitId":"luminousleek"},"content":"    this.issueService"},{"lineNumber":164,"author":{"gitId":"luminousleek"},"content":"      .deleteIssue(id)"},{"lineNumber":165,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":166,"author":{"gitId":"luminousleek"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          const { [id]: issueRemoved, ...theRest } \u003d this.issuesPendingDeletion;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"          this.issuesPendingDeletion \u003d theRest;"},{"lineNumber":169,"author":{"gitId":"luminousleek"},"content":"        })"},{"lineNumber":170,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":171,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":172,"author":{"gitId":"luminousleek"},"content":"        (removedIssue) \u003d\u003e {},"},{"lineNumber":173,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":175,"author":{"gitId":"luminousleek"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"chunweii"},"content":"  openDeleteDialog(id: number, event: Event) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":182,"author":{"gitId":"luminousleek"},"content":"      this.deleteIssueModalMessages,"},{"lineNumber":183,"author":{"gitId":"luminousleek"},"content":"      this.yesButtonModalMessage,"},{"lineNumber":184,"author":{"gitId":"luminousleek"},"content":"      this.noButtonModalMessage"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"luminousleek"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      if (res) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        this.loggingService.info(`Deleting issue ${id}`);"},{"lineNumber":190,"author":{"gitId":"chunweii"},"content":"        this.deleteIssue(id, event);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":39,"chunweii":7,"-":148}},{"path":"src/app/shared/issue-tables/issue-tables.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { MaterialModule } from \u0027../material.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueTablesComponent } from \u0027./issue-tables.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  exports: [IssueTablesComponent],"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  declarations: [IssueTablesComponent],"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, MaterialModule, RouterModule]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class IssueTablesModule {}"}],"authorContributionMap":{"luminousleek":3,"-":9}},{"path":"src/app/shared/issue-tables/search-filter.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027./issue-tables-columns\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * This module serves to improve separation of concerns in IssuesDataTable.ts module by containing the logic for"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * applying search filter to the issues data table in this module."},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This module exports a single function applySearchFilter which is called by IssuesDataTable."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export function applySearchFilter(filter: string, displayedColumn: string[], issueService: IssueService, data: Issue[]): Issue[] {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  const searchKey \u003d filter.toLowerCase();"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  const result \u003d data.slice().filter((issue: Issue) \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    for (const column of displayedColumn) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      switch (column) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        case TABLE_COLUMNS.ASSIGNEE:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          if (matchesAssignee(issue.assignees, searchKey)) {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        case TABLE_COLUMNS.DUPLICATED_ISSUES:"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          if (matchesDuplicatedIssue(issueService, issue.id, searchKey)) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          if (matchesOtherColumns(issue, column, searchKey)) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    return false;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  return result;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"function containsSearchKey(item: string, searchKey: string): boolean {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  return item.indexOf(searchKey) !\u003d\u003d -1;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"function duplicatedIssuesContainsSearchKey(duplicatedIssues: Issue[], searchKey: string): boolean {"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"  return duplicatedIssues.filter((el) \u003d\u003e `#${String(el.id)}`.includes(searchKey)).length !\u003d\u003d 0;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"function matchesAssignee(assignees: string[], searchKey: string): boolean {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  for (const assignee of assignees) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const lowerCaseAssignee \u003d assignee.toLowerCase();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    return containsSearchKey(lowerCaseAssignee, searchKey);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"function matchesDuplicatedIssue(issueService: IssueService, id: number, searchKey: string): boolean {"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"  const duplicatedIssues \u003d issueService.issues$.getValue().filter((el) \u003d\u003e el.duplicateOf \u003d\u003d\u003d id);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  return duplicatedIssuesContainsSearchKey(duplicatedIssues, searchKey);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"function matchesOtherColumns(issue: Issue, column: string, searchKey: string): boolean {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  const searchStr \u003d String(issue[column]).toLowerCase();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  return containsSearchKey(searchStr, searchKey);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":58}},{"path":"src/app/shared/issue/assignee/assignee.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cspan class\u003d\"mat-title\"\u003e Assignees \u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    *ngIf\u003d\"permissions.isIssueLabelsEditable() \u0026\u0026 isEditable \u0026\u0026 !issue.duplicateOf\""},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    style\u003d\"float: right\""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    (click)\u003d\"openSelector()\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    mat-icon-button"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-select"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    class\u003d\"no-arrow\""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    [style.display]\u003d\"isInEditMode ? \u0027block\u0027 : \u0027none\u0027\""},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    placeholder\u003d\"-\""},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    multiple"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    (openedChange)\u003d\"handleEditMode($event)\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    (closed)\u003d\"updateAssignee()\""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    [(ngModel)]\u003d\"this.assignees\""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-select-trigger\u003e \u003c/mat-select-trigger\u003e"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"    \u003cmat-option *ngFor\u003d\"let assignee of teamMembers\" [value]\u003d\"assignee\"\u003e{{ assignee }}\u003c/mat-option\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003c/mat-select\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003cp *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-top: 5px\"\u003e-\u003c/p\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003cmat-list style\u003d\"padding-top: 0\" dense *ngIf\u003d\"issue.assignees.length \u003e 0\"\u003e"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-list-item style\u003d\"font-size: 1em\" *ngFor\u003d\"let assignee of issue.assignees\"\u003e{{ assignee }}\u003c/mat-list-item\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003c/mat-list\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":15,"chunweii":1,"-":13}},{"path":"src/app/shared/issue/assignee/assignee.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatSelect } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"zhaojj2209"},"content":"import { first } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Team } from \u0027../../../core/models/team.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027app-assignee-component\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./assignee.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./assignee.component.css\u0027],"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  encapsulation: ViewEncapsulation.None"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class AssigneeComponent implements OnInit {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  teamMembers: string[];"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  isInEditMode \u003d false;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  assignees: string[];"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @Input() team: Team;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  @Input() isEditable \u003d true;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  @ViewChild(MatSelect, { static: true }) assigneeSelection: MatSelect;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    private issueService: IssueService,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    public permissions: PermissionService"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.teamMembers \u003d this.team.teamMembers.map((user) \u003d\u003e user.loginId);"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"    this.assignees \u003d this.issue.assignees.map((a) \u003d\u003e a);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  openSelector() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.isInEditMode \u003d true;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.assigneeSelection.open();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  handleEditMode(isOpen) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (!isOpen) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      this.isInEditMode \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  updateAssignee(): void {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    const newIssue \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":55,"author":{"gitId":"chunweii"},"content":"    const oldAssignees \u003d newIssue.assignees;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    newIssue.assignees \u003d this.assignees;"},{"lineNumber":57,"author":{"gitId":"chunweii"},"content":"    this.issueService.updateIssueWithAssigneeCheck(newIssue).subscribe("},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"      (updatedIssue: Issue) \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.issueUpdated.emit(updatedIssue);"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"        // Update assignees of duplicate issues"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        this.issueService"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"          .getDuplicateIssuesFor(this.issue)"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"          .pipe(first())"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"          .subscribe((issues: Issue[]) \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"            issues.forEach((issue: Issue) \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"              const newDuplicateIssue \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"              newDuplicateIssue.assignees \u003d this.assignees;"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"              this.issueService.updateIssue(newDuplicateIssue);"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"            });"},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"          });"},{"lineNumber":71,"author":{"gitId":"chunweii"},"content":"      },"},{"lineNumber":72,"author":{"gitId":"chunweii"},"content":"      (error) \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"chunweii"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":74,"author":{"gitId":"chunweii"},"content":"        this.assignees \u003d oldAssignees;"},{"lineNumber":75,"author":{"gitId":"chunweii"},"content":"      }"},{"lineNumber":76,"author":{"gitId":"chunweii"},"content":"    );"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":9,"zhaojj2209":8,"chunweii":9,"-":52}},{"path":"src/app/shared/issue/conflict-dialog/conflict-dialog.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"display: flex; margin-bottom: 20px; align-items: center\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch1 mat-dialog-title style\u003d\"margin: 0\"\u003e{{ \u0027The content you are editing has changed\u0027 }}\u003c/h1\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-slide-toggle"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    *ngIf\u003d\"!isOnPreview\""},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    style\u003d\"display: inline-block; margin-left: 50px\""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    color\u003d\"primary\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    [checked]\u003d\"showDiff\""},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    (change)\u003d\"handleChangeShowDiff()\""},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Show Difference"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/mat-slide-toggle\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cbutton mat-icon-button color\u003d\"default\" style\u003d\"margin: 0 0 0 auto\" (click)\u003d\"close()\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eclose\u003c/mat-icon\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"\u003cdiv mat-dialog-content style\u003d\"display: flex\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"full-width\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cmat-tab-group class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\" (selectedTabChange)\u003d\"handleTabChange($event)\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cmat-tab label\u003d\"Markdown Text\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"tab-content\" *ngIf\u003d\"isReady\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cdiv *ngIf\u003d\"showDiff\" [innerHTML]\u003d\"diffHtml\"\u003e\u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cdiv *ngIf\u003d\"!showDiff\" [innerHTML]\u003d\"updatedHtml\"\u003e\u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/mat-tab\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cmat-tab label\u003d\"Preview Updated Content\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"tab-content\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cmarkdown\u003e{{ data.updatedContent }}\u003c/markdown\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/mat-tab\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/mat-tab-group\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":8,"-":25}},{"path":"src/app/shared/issue/conflict-dialog/conflict-dialog.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MAT_DIALOG_DATA, MatDialogRef, MatTabChangeEvent } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DomSanitizer, SafeHtml } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../core/services/label.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A Component that is in a form of a dialog modal and its purpose is to"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * display the difference between 2 pieces of text."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027app-conflict-dialog\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027conflict-dialog.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./conflict-dialog.component.css\u0027]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class ConflictDialogComponent {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  isOnPreview \u003d false;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  isReady \u003d false;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  showDiff \u003d true;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  diffHtml: SafeHtml;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  updatedHtml: SafeHtml;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public dialogRef: MatDialogRef\u003cConflictDialogComponent\u003e,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Inject(MAT_DIALOG_DATA) public data: Conflict,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private sanitizer: DomSanitizer,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public issueService: IssueService"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"  ) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.diffHtml \u003d this.sanitizer.bypassSecurityTrustHtml(data.getHtmlDiffString());"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.updatedHtml \u003d this.sanitizer.bypassSecurityTrustHtml(data.getHtmlUpdatedString());"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.isReady \u003d true;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  close(): void {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.dialogRef.close();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  handleChangeShowDiff() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    this.showDiff \u003d !this.showDiff;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  handleTabChange(event: MatTabChangeEvent): void {"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    this.isOnPreview \u003d event.index \u003d\u003d\u003d 1;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":45}},{"path":"src/app/shared/issue/description/description.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch3 class\u003d\"mat-title\"\u003e{{ title }}\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"issueDescriptionForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateDescription(myForm)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan\u003e \u003cstrong\u003e Tester \u003c/strong\u003e posted on {{ issue.created_at }}. \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton style\u003d\"float: right\" mat-button *ngIf\u003d\"permissions.isIssueDescriptionEditable() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        Edit"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cmarkdown [data]\u003d\"issue.description\"\u003e\u003c/markdown\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003capp-comment-editor"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        [id]\u003d\"\u0027description\u0027\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        [commentField]\u003d\"this.issueDescriptionForm.get(\u0027description\u0027)\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        [commentForm]\u003d\"this.issueDescriptionForm\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"        [(isFormPending)]\u003d\"this.isSavePending\""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/app-comment-editor\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\"\u003e"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isSavePending\""},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"viewChanges()\""},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          View Updated Description"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton class\u003d\"editor-action\" type\u003d\"button\" [disabled]\u003d\"isSavePending\" mat-stroked-button color\u003d\"warn\" (click)\u003d\"openCancelDialog()\"\u003e"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"          Cancel"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        \u003c/button\u003e"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"issueDescriptionForm.invalid || isSavePending\""},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"issueDescriptionForm.invalid || isSavePending\""},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":31,"-":29}},{"path":"src/app/shared/issue/description/description.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormGroup, NgForm } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { throwError } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { finalize, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"zhaojj2209"},"content":"import { DialogService } from \u0027../../../core/services/dialog.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../../view-issue/view-issue.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent } from \u0027../conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-description\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./description.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./description.component.css\u0027]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class DescriptionComponent implements OnInit {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  isSavePending \u003d false;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  issueDescriptionForm: FormGroup;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  conflict: Conflict;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  @Input() title: string;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  @Input() isEditing: boolean;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @Output() changeEditState \u003d new EventEmitter\u003cboolean\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"  // Messages for the modal popup window upon cancelling edit"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"  private readonly cancelEditModalMessages \u003d [\u0027Do you wish to cancel?\u0027, \u0027Your changes will be discarded.\u0027];"},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":"  private readonly yesButtonModalMessage \u003d \u0027Cancel\u0027;"},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"  private readonly noButtonModalMessage \u003d \u0027Continue editing\u0027;"},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    private issueService: IssueService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private dialog: MatDialog,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":44,"author":{"gitId":"zhaojj2209"},"content":"    public permissions: PermissionService,"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    private dialogService: DialogService"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    this.issueDescriptionForm \u003d this.formBuilder.group({"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"      description: [\u0027\u0027]"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  changeToEditMode() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.changeEditState.emit(true);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.issueDescriptionForm.setValue({"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      description: this.issue[\u0027description\u0027] || \u0027\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  updateDescription(form: NgForm) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    if (this.issueDescriptionForm.invalid) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.isSavePending \u003d true;"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    this.issueService"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"      .getLatestIssue(this.issue.id)"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":71,"author":{"gitId":"-"},"content":"        map((issue: Issue) \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          return issue.description \u003d\u003d\u003d this.issue.description;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        flatMap((isSaveToUpdate: boolean) \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          if (isSaveToUpdate || this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return this.issueService.updateIssue(this.getUpdatedIssue());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            this.conflict \u003d new Conflict(this.issue.description, this.issueService.issues[this.issue.id].description);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.viewChanges();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return throwError(\u0027The content you are editing has changed. Please verify the changes and try again.\u0027);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"        finalize(() \u003d\u003e (this.isSavePending \u003d false))"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"        (editedIssue: Issue) \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          this.issueUpdated.emit(editedIssue);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"          this.resetToDefault();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          form.resetForm();"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  viewChanges(): void {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    this.dialog.open(ConflictDialogComponent, {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      data: this.conflict,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      autoFocus: false"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  resetToDefault(): void {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.conflict \u003d undefined;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    this.changeEditState.emit(false);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":112,"author":{"gitId":"-"},"content":"   * When user exits exit mode, we will need to sync the issue in IssueService with this component."},{"lineNumber":113,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  cancelEditMode(): void {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.issueService.getIssue(this.issue.id).subscribe((issue: Issue) \u003d\u003e {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      this.issueUpdated.emit(issue);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      this.resetToDefault();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"  openCancelDialog(): void {"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"      this.cancelEditModalMessages,"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"      this.yesButtonModalMessage,"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"      this.noButtonModalMessage"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"    );"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"zhaojj2209"},"content":"      if (res) {"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":"        this.cancelEditMode();"},{"lineNumber":131,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":132,"author":{"gitId":"zhaojj2209"},"content":"    });"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"  }"},{"lineNumber":134,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  private getUpdatedIssue(): Issue {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    const newIssue \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    newIssue.description \u003d Issue.updateDescription(this.issueDescriptionForm.get(\u0027description\u0027).value);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    return newIssue;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":20,"zhaojj2209":17,"-":103}},{"path":"src/app/shared/issue/duplicateOf/duplicate-of.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-checkbox"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    [disabled]\u003d\"!permissions.isTeamResponseEditable() \u0026\u0026 !permissions.isTutorResponseEditable()\""},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    labelPosition\u003d\"after\""},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    [checked]\u003d\"issue.duplicated\""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    (change)\u003d\"handleCheckboxChange($event)\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cspan class\u003d\"mat-title\"\u003eA Duplicate Of:\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003c/mat-checkbox\u003e"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    *ngIf\u003d\"permissions.isIssueLabelsEditable()\""},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    [style.visibility]\u003d\"issue.duplicated ? \u0027inherit\u0027 : \u0027hidden\u0027\""},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    style\u003d\"float: right\""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    (click)\u003d\"openSelection()\""},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    mat-icon-button"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-select"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    [style.display]\u003d\"isEditing ? \u0027block\u0027 : \u0027none\u0027\""},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    class\u003d\"no-arrow\""},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    placeholder\u003d\"-\""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    [value]\u003d\"issue.duplicateOf\""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    (selectionChange)\u003d\"updateDuplicateStatus($event)\""},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    (openedChange)\u003d\"handleSelectionOpenChange($event)\""},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmat-select-trigger\u003e\u003c/mat-select-trigger\u003e"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-option"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"      [matTooltip]\u003d\"issue.title\""},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"      [matTooltipDisabled]\u003d\"!isTooltipNecessary(issue)\""},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"      [matTooltipPosition]\u003d\"\u0027left\u0027\""},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"      *ngFor\u003d\"let issue of duplicatedIssueList | async\""},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"      [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\""},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"      [value]\u003d\"issue.id\""},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    \u003e"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv class\u003d\"duplicate-dropdown-issuedetails\" [ngStyle]\u003d\"{ width: dupIssueOptionIsDisabled(issue) ? \u0027150px\u0027 : \u0027auto\u0027 }\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cspan class\u003d\"mat-body-strong\"\u003e #{{ issue.id }}: \u003c/span\u003e \u003cspan class\u003d\"mat-body\"\u003e{{ issue.title }}\u003c/span\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"      \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"display: inline-block; color: #f44336\"\u003e"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        ({{ getDisabledDupOptionErrorText(issue) }})"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"      \u003c/span\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/mat-option\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/mat-select\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003cdiv\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003cspan *ngIf\u003d\"issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"      {{ issue.duplicateOf ? \u0027#\u0027 + issue.duplicateOf + \u0027: \u0027 + (issueService.getIssue(issue.duplicateOf) | async).title : \u0027Not specified\u0027 }}"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/span\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003cspan *ngIf\u003d\"!issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e - \u003c/span\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":34,"-":18}},{"path":"src/app/shared/issue/duplicateOf/duplicate-of.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatCheckbox, MatSelect, MatSelectChange } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Issue, SEVERITY_ORDER } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027app-duplicate-of-component\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./duplicate-of.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./duplicate-of.component.css\u0027],"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  encapsulation: ViewEncapsulation.None"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class DuplicateOfComponent implements OnInit {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  isEditing \u003d false;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  duplicatedIssueList: Observable\u003cIssue[]\u003e;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  @ViewChild(MatSelect, { static: true }) duplicateOfSelection: MatSelect;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  @ViewChild(MatCheckbox, { static: true }) duplicatedCheckbox: MatCheckbox;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  // Max chars visible for a duplicate entry in duplicates dropdown list."},{"lineNumber":29,"author":{"gitId":"-"},"content":"  readonly MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE \u003d 17;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  // Max chars visible for a non-duplicate entry in duplicates dropdown list."},{"lineNumber":31,"author":{"gitId":"-"},"content":"  readonly MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE \u003d 37;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    public issueService: IssueService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public permissions: PermissionService,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    private phaseService: PhaseService"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * Checks if the supplied issue requires a tooltip"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * in the UI as some information may be hidden due to truncation."},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * @param issue - Displayed issue that may need a tooltip."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * @return - true (to enable tooltip) / false (to disable tooltip)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  isTooltipNecessary(issue: Issue): boolean {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Maximum Possible Title length varies based on whether the issue"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // is a duplicate. (Whether the Duplicate Issue Tag is visible)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    let maxTitleLength: number;"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    maxTitleLength \u003d issue.duplicated ? this.MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE : this.MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    return issue.title.length \u003e maxTitleLength;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.duplicatedIssueList \u003d this.getDupIssueList();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  updateDuplicateStatus(event: MatSelectChange) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const latestIssue \u003d this.getUpdatedIssue(event);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.issueService.updateIssueWithComment(latestIssue, latestIssue.issueComment).subscribe("},{"lineNumber":62,"author":{"gitId":"-"},"content":"      (issue) \u003d\u003e this.issueUpdated.emit(issue),"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e this.errorHandlingService.handleError(error)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  dupIssueOptionIsDisabled(issue: Issue): boolean {"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    return SEVERITY_ORDER[this.issue.severity] \u003e SEVERITY_ORDER[issue.severity] || issue.duplicated || !!issue.duplicateOf;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  getDisabledDupOptionErrorText(issue: Issue): string {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const reason \u003d new Array\u003cstring\u003e();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    if (this.dupIssueOptionIsDisabled(issue)) {"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"      if (SEVERITY_ORDER[this.issue.severity] \u003e SEVERITY_ORDER[issue.severity]) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        reason.push(\u0027Issue of lower priority\u0027);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      } else if (issue.duplicated || !!issue.duplicateOf) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        reason.push(\u0027A duplicated issue\u0027);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    return reason.join(\u0027, \u0027);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  handleCheckboxChange(event) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    if (event.checked) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      this.openSelection();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      this.isEditing \u003d false;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      this.duplicateOfSelection.close();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      this.duplicateOfSelection.value \u003d null;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      this.updateDuplicateStatus(null);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  openSelection() {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.isEditing \u003d true;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    this.duplicateOfSelection.open();"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  handleSelectionOpenChange(isOpen) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    if (!isOpen) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      this.isEditing \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.duplicatedCheckbox.checked \u003d this.duplicateOfSelection.value;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  getUpdatedIssue(duplicateCheckboxEvent: MatSelectChange): Issue {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    const clone \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    clone.duplicated \u003d !!duplicateCheckboxEvent;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    clone.duplicateOf \u003d duplicateCheckboxEvent ? duplicateCheckboxEvent.value : null;"},{"lineNumber":110,"author":{"gitId":"zhaojj2209"},"content":"    if (duplicateCheckboxEvent) {"},{"lineNumber":111,"author":{"gitId":"zhaojj2209"},"content":"      const duplicatedIssue \u003d this.issueService.issues[clone.duplicateOf];"},{"lineNumber":112,"author":{"gitId":"zhaojj2209"},"content":"      clone.severity \u003d duplicatedIssue.severity;"},{"lineNumber":113,"author":{"gitId":"zhaojj2209"},"content":"      clone.type \u003d duplicatedIssue.type;"},{"lineNumber":114,"author":{"gitId":"zhaojj2209"},"content":"      clone.assignees \u003d duplicatedIssue.assignees;"},{"lineNumber":115,"author":{"gitId":"zhaojj2209"},"content":"      clone.responseTag \u003d duplicatedIssue.responseTag;"},{"lineNumber":116,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    clone.issueComment.description \u003d clone.createGithubTeamResponse();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    return clone;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"  private getDupIssueList(): Observable\u003cIssue[]\u003e {"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"    return this.issueService.issues$.pipe("},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"          return this.issue.id !\u003d\u003d issue.id \u0026\u0026 this.issue.teamAssigned.id \u003d\u003d\u003d issue.teamAssigned.id;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":15,"zhaojj2209":7,"-":108}},{"path":"src/app/shared/issue/duplicatedIssues/duplicated-issues.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cspan class\u003d\"mat-title\"\u003e Duplicated Issues \u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cmat-chip-list\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-chip"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"      *ngFor\u003d\"let duplicatedIssue of duplicatedIssues | async\""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"      style\u003d\"cursor: pointer\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"      [matTooltip]\u003d\"duplicatedIssue.title\""},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"      matTooltipPosition\u003d\"above\""},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"      (removed)\u003d\"removeDuplicateStatus(duplicatedIssue)\""},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    \u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"[\u0027../\u0027 + duplicatedIssue.id]\"\u003e #{{ duplicatedIssue.id }} \u003c/a\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cmat-icon *ngIf\u003d\"permissions.isTeamResponseEditable() || permissions.isTutorResponseEditable()\" matChipRemove\u003ecancel\u003c/mat-icon\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/mat-chip\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/mat-chip-list\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":7,"-":8}},{"path":"src/app/shared/issue/duplicatedIssues/duplicated-issues.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit, ViewEncapsulation } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-duplicated-issues-component\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./duplicated-issues.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./duplicated-issues.component.css\u0027],"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  encapsulation: ViewEncapsulation.None"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class DuplicatedIssuesComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  duplicatedIssues: Observable\u003cIssue[]\u003e;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    public issueService: IssueService,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public errorHandlingService: ErrorHandlingService,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    public permissions: PermissionService"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    this.duplicatedIssues \u003d this.issueService.getDuplicateIssuesFor(this.issue);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  removeDuplicateStatus(duplicatedIssue: Issue) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    const latestIssue \u003d this.getUpdatedIssueWithRemovedDuplicate(duplicatedIssue);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.issueService.updateIssueWithComment(latestIssue, latestIssue.issueComment).subscribe("},{"lineNumber":34,"author":{"gitId":"-"},"content":"      (issue) \u003d\u003e this.issueService.updateLocalStore(issue),"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e this.errorHandlingService.handleError(error)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  getUpdatedIssueWithRemovedDuplicate(duplicatedIssue: Issue): Issue {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    const clone \u003d duplicatedIssue.clone(this.phaseService.currentPhase);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    clone.duplicated \u003d false;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    clone.duplicateOf \u003d null;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    clone.issueComment.description \u003d clone.createGithubTeamResponse();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    return clone;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":5,"-":41}},{"path":"src/app/shared/issue/issue-components.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatProgressBarModule } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../comment-editor/comment-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AssigneeComponent } from \u0027./assignee/assignee.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent } from \u0027./conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { DescriptionComponent } from \u0027./description/description.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { DuplicatedIssuesComponent } from \u0027./duplicatedIssues/duplicated-issues.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { DuplicateOfComponent } from \u0027./duplicateOf/duplicate-of.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LabelComponent } from \u0027./label/label.component\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TitleComponent } from \u0027./title/title.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { UnsureCheckboxComponent } from \u0027./unsure-checkbox/unsure-checkbox.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  imports: [SharedModule, CommentEditorModule, MatProgressBarModule, MarkdownModule.forChild()],"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":18,"author":{"gitId":"-"},"content":"    TitleComponent,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    DescriptionComponent,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    LabelComponent,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    AssigneeComponent,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    DuplicateOfComponent,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    DuplicatedIssuesComponent,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    UnsureCheckboxComponent,"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    ConflictDialogComponent"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":28,"author":{"gitId":"-"},"content":"    TitleComponent,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    DescriptionComponent,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    LabelComponent,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    AssigneeComponent,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    DuplicateOfComponent,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    DuplicatedIssuesComponent,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    UnsureCheckboxComponent,"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    ConflictDialogComponent"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"  entryComponents: [ConflictDialogComponent]"},{"lineNumber":38,"author":{"gitId":"-"},"content":"})"},{"lineNumber":39,"author":{"gitId":"-"},"content":"export class IssueComponentsModule {}"}],"authorContributionMap":{"luminousleek":4,"-":35}},{"path":"src/app/shared/issue/label/label.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".no-arrow .mat-select-arrow {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  visibility: hidden;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".option {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  background-color: Transparent;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  border: none;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  outline: none;"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  margin-right: 30px;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":".infoPopup {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  background: transparent;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  border: none;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  outline: none;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":".labelLine {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  display: grid;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  grid-template-columns: auto 20%;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":".labelInfo {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  display: grid;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  grid-template-columns: 20% auto;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  text-align: left;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  grid-gap: 20%;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":29}},{"path":"src/app/shared/issue/label/label.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cspan class\u003d\"mat-title\"\u003e {{ this.labelService.getLabelTitle(attributeName) }} \u003c/span\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"\u003cbutton"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"  *ngIf\u003d\"permissions.isIssueLabelsEditable() \u0026\u0026 !issue.duplicateOf\""},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"  style\u003d\"float: right\""},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"  [matMenuTriggerFor]\u003d\"labelList\""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"  mat-icon-button"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/button\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmat-menu #labelList\u003e"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  \u003cdiv mat-menu-item class\u003d\"labelLine\" *ngFor\u003d\"let value of labelValues\" [ngStyle]\u003d\"{ \u0027padding-left\u0027: \u002715px\u0027, \u0027padding-right\u0027: \u002715px\u0027 }\"\u003e"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    \u003cbutton class\u003d\"labelInfo option\" (click)\u003d\"updateLabel(value.labelValue)\" [disabled]\u003d\"value.labelValue \u003d\u003d\u003d this.issue[attributeName]\"\u003e"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"      \u003cmat-icon [ngStyle]\u003d\"{ color: \u0027#\u0027 + value.labelColor, \u0027font-size\u0027: \u00271.8em\u0027 }\"\u003estop\u003c/mat-icon\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cspan\u003e {{ value.labelValue }}\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    \u003cbutton *ngIf\u003d\"hasLabelDefinition(value)\" class\u003d\"infoPopup\" (click)\u003d\"openDefinitionPage(value); $event.stopPropagation()\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cmat-icon style\u003d\"font-size: 20px\"\u003einfo\u003c/mat-icon\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/mat-menu\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cp [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelColor)\"\u003e{{ issue[attributeName] || \u0027-\u0027 }}\u003c/p\u003e"}],"authorContributionMap":{"luminousleek":10,"-":14}},{"path":"src/app/shared/issue/label/label.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":"import { first } from \u0027rxjs/operators\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../../..//core/services/dialog.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../../core/models/label.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../core/services/label.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-label\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./label.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./label.component.css\u0027]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class LabelComponent implements OnInit, OnChanges {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  labelValues: Label[];"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  labelColor: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  labelDefinition?: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @Input() attributeName: string;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    private issueService: IssueService,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public permissions: PermissionService,"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public dialogService: DialogService"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Get the list of labels based on their type (severity, type, response)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.labelValues \u003d this.labelService.getLabelList(this.attributeName);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  ngOnChanges() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Color will change when @Input issue changes"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.labelColor \u003d this.labelService.getColorOfLabel(this.issue[this.attributeName]);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  updateLabel(value: string) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const newIssue \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    newIssue[this.attributeName] \u003d value;"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    this.issueService.updateIssue(newIssue).subscribe("},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"      (updatedIssue: Issue) \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.issueUpdated.emit(updatedIssue);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.labelColor \u003d this.labelService.getColorOfLabel(updatedIssue[this.attributeName]);"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"      },"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"      (error) \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"      }"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"    // Update labels of duplicate issues"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    this.issueService"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"      .getDuplicateIssuesFor(this.issue)"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"      .pipe(first())"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"      .subscribe((issues: Issue[]) \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":"        issues.forEach((issue: Issue) \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"          const newDuplicateIssue \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"          newDuplicateIssue[this.attributeName] \u003d value;"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":"          this.issueService.updateIssue(newDuplicateIssue);"},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"        });"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"      });"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  openDefinitionPage(value: Label): void {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    this.labelDefinition \u003d this.labelService.getLabelDefinition(value.labelValue, value.labelCategory);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.dialogService.openLabelDefinitionDialog(value.getFormattedName(), this.labelDefinition);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  hasLabelDefinition(value: Label): boolean {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    return this.labelService.getLabelDefinition(value.labelValue, value.labelCategory) !\u003d\u003d null;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":15,"zhaojj2209":8,"-":56}},{"path":"src/app/shared/issue/title/title.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".title {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin: 0 0 16px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":".title-button {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  float: right;"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  margin: 5px;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":9}},{"path":"src/app/shared/issue/title/title.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"!isEditing\"\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  \u003ch1 class\u003d\"mat-display-1 title\"\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    {{ issue.title }} \u003cspan style\u003d\"color: #a3aab1\"\u003e#{{ issue.id }}\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"  \u003c/h1\u003e"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    *ngIf\u003d\"permissions.isIssueCreatable()\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    mat-stroked-button"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    color\u003d\"primary\""},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    class\u003d\"title-button\""},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    [routerLink]\u003d\"\u0027/\u0027 + phaseService.currentPhase + \u0027/issues/new\u0027\""},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    New Issue"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  \u003c/button\u003e"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton *ngIf\u003d\"permissions.isIssueTitleEditable()\" mat-stroked-button color\u003d\"primary\" class\u003d\"title-button\" (click)\u003d\"changeToEditMode()\"\u003e"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    Edit"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  \u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cform [formGroup]\u003d\"issueTitleForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateTitle(myForm)\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cmat-form-field style\u003d\"width: 80%\"\u003e"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"      \u003cinput id\u003d\"title\" formControlName\u003d\"title\" matInput placeholder\u003d\"Title\" required maxlength\u003d\"256\" /\u003e"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"      \u003cmat-error *ngIf\u003d\"issueTitleForm.get(\u0027title\u0027).hasError(\u0027required\u0027)\"\u003e Title is required. \u003c/mat-error\u003e"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"      \u003cmat-error *ngIf\u003d\"issueTitleForm.get(\u0027title\u0027).hasError(\u0027maxlength\u0027)\"\u003e Title cannot exceed 256 characters. \u003c/mat-error\u003e"},{"lineNumber":25,"author":{"gitId":"gycgabriel"},"content":"      \u003cmat-hint *ngIf\u003d\"issueTitleForm.get(\u0027title\u0027).value?.length \u003e\u003d 206\"\u003e"},{"lineNumber":26,"author":{"gitId":"gycgabriel"},"content":"        {{ 256 - issueTitleForm.get(\u0027title\u0027).value?.length }} characters remaining."},{"lineNumber":27,"author":{"gitId":"gycgabriel"},"content":"      \u003c/mat-hint\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/mat-form-field\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    \u003cbutton type\u003d\"submit\" [disabled]\u003d\"issueTitleForm.invalid || isSavePending\" mat-stroked-button color\u003d\"primary\" class\u003d\"title-button\"\u003e"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"      Save"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    \u003c/button\u003e"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    \u003cbutton type\u003d\"button\" [disabled]\u003d\"isSavePending\" mat-stroked-button color\u003d\"warn\" class\u003d\"title-button\" (click)\u003d\"openCancelDialog()\"\u003e"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"      Cancel"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    \u003c/button\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/form\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":24,"-":10,"gycgabriel":3}},{"path":"src/app/shared/issue/title/title.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"gycgabriel"},"content":"import { FormBuilder, FormControl, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":5,"author":{"gitId":"zhaojj2209"},"content":"import { DialogService } from \u0027../../../core/services/dialog.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-title\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./title.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./title.component.css\u0027]"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class TitleComponent implements OnInit {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  isEditing \u003d false;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  isSavePending \u003d false;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  issueTitleForm: FormGroup;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"zhaojj2209"},"content":"  // Messages for the modal popup window upon cancelling edit"},{"lineNumber":25,"author":{"gitId":"zhaojj2209"},"content":"  private readonly cancelEditModalMessages \u003d [\u0027Do you wish to cancel?\u0027, \u0027Your changes will be discarded.\u0027];"},{"lineNumber":26,"author":{"gitId":"zhaojj2209"},"content":"  private readonly yesButtonModalMessage \u003d \u0027Cancel\u0027;"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"  private readonly noButtonModalMessage \u003d \u0027Continue editing\u0027;"},{"lineNumber":28,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    private issueService: IssueService,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public permissions: PermissionService,"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"    public phaseService: PhaseService,"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    private dialogService: DialogService"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    this.issueTitleForm \u003d this.formBuilder.group({"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"      title: new FormControl(\u0027\u0027, [Validators.required, Validators.maxLength(256)])"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  changeToEditMode() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    this.isEditing \u003d true;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    this.issueTitleForm.setValue({"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      title: this.issue.title || \u0027\u0027"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  cancelEditMode() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.isEditing \u003d false;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  updateTitle(form: NgForm) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    if (this.issueTitleForm.invalid) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.isSavePending \u003d true;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const newIssue \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    newIssue.title \u003d this.issueTitleForm.get(\u0027title\u0027).value;"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"    this.issueService"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"      .updateIssue(newIssue)"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          this.isEditing \u003d false;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          this.isSavePending \u003d false;"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        })"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"        (editedIssue: Issue) \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          this.issueUpdated.emit(editedIssue);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          form.resetForm();"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":82,"author":{"gitId":"zhaojj2209"},"content":"  openCancelDialog(): void {"},{"lineNumber":83,"author":{"gitId":"zhaojj2209"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"      this.cancelEditModalMessages,"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"      this.yesButtonModalMessage,"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"      this.noButtonModalMessage"},{"lineNumber":87,"author":{"gitId":"zhaojj2209"},"content":"    );"},{"lineNumber":88,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"zhaojj2209"},"content":"      if (res) {"},{"lineNumber":91,"author":{"gitId":"zhaojj2209"},"content":"        this.cancelEditMode();"},{"lineNumber":92,"author":{"gitId":"zhaojj2209"},"content":"      }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":22,"zhaojj2209":15,"-":57,"gycgabriel":1}},{"path":"src/app/shared/issue/unsure-checkbox/unsure-checkbox.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  selector: \u0027app-unsure-checkbox\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./unsure-checkbox.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./unsure-checkbox.component.css\u0027]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class UnsureCheckboxComponent implements OnInit {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  constructor(private issueService: IssueService, private errorHandlingService: ErrorHandlingService, private phaseService: PhaseService) {}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  handleChangeOfUnsureCheckbox(event) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    let UNSURE \u003d false;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    if (event.checked) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      UNSURE \u003d true;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    const newIssue \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    newIssue.unsure \u003d UNSURE;"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    this.issueService.updateIssue(newIssue).subscribe("},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"      (updatedIssue: Issue) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.issueUpdated.emit(updatedIssue);"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"      },"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"      (error) \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":7,"-":32}},{"path":"src/app/shared/label-definition-popup/label-definition-popup.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MAT_DIALOG_DATA, MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DomSanitizer } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The LabelDefinitionPopupComponent is responsible for rendering the UserDialog"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * to show the definition of the corresponding label."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-label-definition-popup\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./label-definition-popup.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./label-definition-popup.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class LabelDefinitionPopupComponent {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  labelName: string;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  labelDefinitionHtmlTemplate;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // Injection of a reference to Dialog from the Service that it is to be"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  // displayed in."},{"lineNumber":20,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public dialogRef: MatDialogRef\u003cLabelDefinitionPopupComponent\u003e,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Inject(MAT_DIALOG_DATA) public data,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private _sanitizer: DomSanitizer"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    this.labelName \u003d data.header;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // since we only display HTML fetched from our own source, we can safely bypass the sanitization of HTML"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.labelDefinitionHtmlTemplate \u003d _sanitizer.bypassSecurityTrustHtml(data.body);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * Closes the dialog."},{"lineNumber":32,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  onNoClick(): void {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.dialogRef.close(false);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":35}},{"path":"src/app/shared/label-dropdown/label-dropdown.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"dropdownForm\"\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-form-field style\u003d\"width: 100%\"\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-select"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"      [ngClass]\u003d\"dropdownTextColor\""},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"      formControlName\u003d\"{{ attributeName }}\""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"      placeholder\u003d\"{{ this.labelService.getLabelTitle(attributeName) }}\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"      (selectionChange)\u003d\"setSelectedLabelColor($event.value)\""},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"      [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedColor, \u0027inline-block\u0027)\""},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"      required"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    \u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cmat-select-trigger\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        {{ dropdownControl.value }}"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003c/mat-select-trigger\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cdiv mat-menu-item class\u003d\"labelLine\" *ngFor\u003d\"let value of labelList\"\u003e"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"        \u003cmat-option [value]\u003d\"value.labelValue\" [ngStyle]\u003d\"{ background: \u0027transparent\u0027 }\"\u003e"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-icon [ngStyle]\u003d\"{ color: \u0027#\u0027 + value.labelColor }\"\u003estop\u003c/mat-icon\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003cspan\u003e {{ value.labelValue }}\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/mat-option\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cbutton *ngIf\u003d\"hasLabelDefinition(value)\" class\u003d\"infoPopup\" (click)\u003d\"openModalPopup(value)\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cmat-icon style\u003d\"font-size: 20px\"\u003einfo\u003c/mat-icon\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/mat-select\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cmat-error *ngIf\u003d\"dropdownControl.errors \u0026\u0026 dropdownControl.errors[\u0027required\u0027] \u0026\u0026 dropdownControl.touched\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      {{ this.labelService.getLabelTitle(attributeName) }} required."},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/mat-error\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003c/mat-form-field\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":11,"-":18}},{"path":"src/app/shared/label-dropdown/label-dropdown.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AbstractControl, FormGroup } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../..//core/services/dialog.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../core/models/label.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"export const WHITE_TEXT_CLASS \u003d \u0027white-text\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export const BLACK_TEXT_CLASS \u003d \u0027black-text\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-label-dropdown\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./label-dropdown.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./label-dropdown.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class LabelDropdownComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  dropdownControl: AbstractControl;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  @Input() attributeName: string;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  @Input() initialValue: string;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @Input() dropdownForm: FormGroup;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  selectedColor: string;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  labelList: Label[];"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"  constructor(public labelService: LabelService, public dialogService: DialogService) {}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.selectedColor \u003d this.labelService.getColorOfLabel(this.initialValue);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    this.labelList \u003d this.labelService.getLabelList(this.attributeName);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    this.dropdownControl \u003d this.dropdownForm.get(this.attributeName);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  setSelectedLabelColor(labelValue: string) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.selectedColor \u003d this.labelService.getColorOfLabel(labelValue);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  openModalPopup(label: Label): void {"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    this.dialogService.openLabelDefinitionDialog("},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"      label.getFormattedName(),"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"      this.labelService.getLabelDefinition(label.labelValue, label.labelCategory)"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  hasLabelDefinition(label: Label): boolean {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    return this.labelService.getLabelDefinition(label.labelValue, label.labelCategory) !\u003d\u003d null;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  get dropdownTextColor(): string {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    return this.labelService.isDarkColor(this.selectedColor) ? WHITE_TEXT_CLASS : BLACK_TEXT_CLASS;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":5,"-":45}},{"path":"src/app/shared/label-dropdown/label-dropdown.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { LabelDropdownComponent } from \u0027./label-dropdown.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  declarations: [LabelDropdownComponent],"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, SharedModule],"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"  exports: [LabelDropdownComponent]"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class LabelDropdownModule {}"}],"authorContributionMap":{"luminousleek":3,"-":8}},{"path":"src/app/shared/layout/header.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"\u003cmat-toolbar color\u003d\"primary\" style\u003d\"position: sticky; position: -webkit-sticky; top: 0; z-index: 1000\"\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    *ngIf\u003d\"isBackButtonShown()\""},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    mat-icon-button"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    class\u003d\"mat-toolbar mat-primary back-button\""},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    style\u003d\"transform: scale(0.9)\""},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    (click)\u003d\"goBack()\""},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003earrow_back_ios\u003c/mat-icon\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  \u003ca class\u003d\"mat-toolbar mat-primary\" style\u003d\"text-decoration: none\" [routerLink]\u003d\"phaseService.currentPhase\""},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    \u003eCATcher v{{ this.getVersion() }}\u003c/a"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cspan id\u003d\"phase-descriptor\" *ngIf\u003d\"auth.isAuthenticated()\" style\u003d\"margin-left: 10px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ({{ this.getPhaseDescription(phaseService.currentPhase) }})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/span\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 this.phaseService.sessionData.openPhases.length \u003e 1\"\u003e"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    \u003cbutton mat-button [matMenuTriggerFor]\u003d\"menu\"\u003e\u003cmat-icon style\u003d\"color: white\"\u003eexpand_more\u003c/mat-icon\u003e\u003c/button\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cmat-menu #menu\u003d\"matMenu\"\u003e"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        mat-menu-item"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        *ngFor\u003d\"let openPhase of this.phaseService.sessionData.openPhases\""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"        (click)\u003d\"this.routeToSelectedPhase(openPhase)\""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cspan\u003e"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-icon [ngStyle]\u003d\"{ color: \u0027green\u0027, visibility: this.phaseService.currentPhase \u003d\u003d\u003d openPhase ? \u0027visible\u0027 : \u0027hidden\u0027 }\""},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"            \u003edone\u003c/mat-icon"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"          \u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          {{ this.getPhaseDescription(openPhase) }}"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/mat-menu\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003cbutton mat-button matTooltip\u003d\"Download CATcher Log\" (click)\u003d\"this.exportLogFile()\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003ereceipt\u003c/mat-icon\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isOpenUrlButtonShown()\""},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    mat-button"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"    matTooltip\u003d\"View current page on GitHub\""},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    (click)\u003d\"viewBrowser()\""},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    View on GitHub"},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"    \u003cmat-icon\u003eopen_in_new\u003c/mat-icon\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 !this.isReloadButtonDisabled\""},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    mat-button"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    matTooltip\u003d\"Synchronize with Github data\""},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"    (click)\u003d\"reload()\""},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"  \u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Sync"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003erefresh\u003c/mat-icon\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"sync-spinner\" *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 this.isReloadButtonDisabled\"\u003e"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    \u003cspan style\u003d\"font-size: 14px; margin-right: 7px\"\u003eSync\u003c/span\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003cmat-spinner class\u003d\"white-spinner\" [diameter]\u003d\"20\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"  \u003cbutton *ngIf\u003d\"auth.isAuthenticated()\" mat-button matTooltip\u003d\"Log out\" (click)\u003d\"openLogOutDialog(); $event.stopPropagation()\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ({{ userService.currentUser.loginId }})"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003cmat-icon style\u003d\"margin-left: 2px\"\u003eexit_to_app\u003c/mat-icon\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/mat-toolbar\u003e"}],"authorContributionMap":{"luminousleek":34,"chunweii":1,"-":32}},{"path":"src/app/shared/layout/header.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Location } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Router, RoutesRecognized } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { filter, pairwise } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../core/models/phase.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../../core/models/user.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../../core/services/dialog.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../../core/services/electron.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { PhaseDescription, PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  selector: \u0027app-layout-header\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./header.component.html\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class HeaderComponent implements OnInit {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  private prevUrl;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  isReloadButtonDisabled \u003d false;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ISSUE_FILTER \u003d \u0027/issues?q\u003dis:issue+is:open\u0027; // the filtered list must be an issue and must be open"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  TUTORIAL_LABEL \u003d \u0027+label:tutorial.\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  TEAM_LABEL \u003d \u0027+label:team.\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  EXCLUDE_DUPLICATE \u003d \u0027+-label:duplicate\u0027; // exclude duplicate issues"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  // Messages for the modal popup window upon logging out"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"  private readonly logOutDialogMessages \u003d [\u0027Do you wish to log out?\u0027];"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  private readonly yesButtonDialogMessage \u003d \u0027Yes, I wish to log out\u0027;"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"  private readonly noButtonDialogMessage \u003d \"No, I don\u0027t wish to log out\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    private router: Router,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public auth: AuthService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public loggingService: LoggingService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private location: Location,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    private dialogService: DialogService"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"  ) {"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    router.events"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":52,"author":{"gitId":"-"},"content":"        filter((e: any) \u003d\u003e e instanceof RoutesRecognized),"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        pairwise()"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"      .subscribe((e) \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.prevUrl \u003d e[0].urlAfterRedirects;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * Replaces and resets the current phase data and routes the app to the"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * newly selected phase."},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * @param openPhase - Open Phase that is selected by the user."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  routeToSelectedPhase(openPhase: string): void {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Do nothing if the selected phase is the current phase."},{"lineNumber":69,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase[openPhase]) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    // Replace Current Phase Data."},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.phaseService.currentPhase \u003d Phase[openPhase];"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"    this.githubService.storePhaseDetails("},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"      this.phaseService.getPhaseOwner(this.phaseService.currentPhase),"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"      this.phaseService.sessionData[openPhase]"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    // Remove current phase issues and load selected phase issues."},{"lineNumber":80,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    this.issueService.reset(false);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    this.reload();"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    // Route app to new phase."},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  isBackButtonShown(): boolean {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    return `/${this.phaseService.currentPhase}` !\u003d\u003d this.router.url \u0026\u0026 this.router.url !\u003d\u003d \u0027/\u0027 \u0026\u0026 !this.router.url.startsWith(\u0027/?code\u0027);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  isReloadButtonShown(): boolean {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return this.router.url !\u003d\u003d \u0027/phaseBugReporting/issues/new\u0027;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  isOpenUrlButtonShown(): boolean {"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"    return ("},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"      this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseBugReporting ||"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      this.userService.currentUser.role \u003d\u003d\u003d UserRole.Student ||"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"      this.issueService.getIssueTeamFilter() !\u003d\u003d \u0027All Teams\u0027 ||"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"      this.router.url.includes(\u0027/issues\u0027)"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  getVersion(): string {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    return AppConfig.version;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  getPhaseDescription(openPhase: string): string {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    return PhaseDescription[openPhase];"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  goBack() {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    if (this.prevUrl \u003d\u003d\u003d `/${this.phaseService.currentPhase}/issues/new`) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      this.router.navigate([\u0027/phaseBugReporting\u0027]);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      this.location.back();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"  viewBrowser() {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    const routerUrl \u003d this.router.url.substring(1); // remove the first \u0027/\u0027 from string"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    const issueUrlIndex \u003d routerUrl.indexOf(\u0027/\u0027); // find the index of second \u0027/\u0027"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    let issueUrl: string;"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    // If can\u0027t find the index of second \u0027/\u0027, then router is at the /issues (table list) page"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    if (issueUrlIndex \u003c 0) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      // Apply filters to the issueUrl"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      issueUrl \u003d this.ISSUE_FILTER.concat(this.getTeamFilterString());"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      // issueUrl will be from the second \u0027/\u0027"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      issueUrl \u003d routerUrl.substring(issueUrlIndex);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    // Open the url in user\u0027s preferred browser"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    this.electronService.openLink(\u0027https://github.com/\u0027.concat(this.githubService.getRepoURL()).concat(issueUrl));"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  private getTeamFilterString() {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    // First Phase does not need team filtering"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseBugReporting || this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseTesterResponse) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      return \u0027\u0027;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    // Initialise the team filter for Students in other Phases, as they do not have team filter assigned by default"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    if (this.userService.currentUser.team) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      this.issueService.setIssueTeamFilter(this.userService.currentUser.team.id); // e.g W12-3"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    const teamFilter \u003d this.issueService.getIssueTeamFilter().split(\u0027-\u0027); // e.g CS2103T-W12-3 -\u003e CS2103T, W12 and 3"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    // The team filter string E.g \"+label:tutorial.W12+label:team.3\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const teamFilterString \u003d this.TUTORIAL_LABEL.concat(`${teamFilter[0]}-${teamFilter[1]}`).concat(this.TEAM_LABEL).concat(teamFilter[2]);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    // Only include duplicate Issues in last Phase"},{"lineNumber":153,"author":{"gitId":"luminousleek"},"content":"    return this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseModeration ? teamFilterString : this.EXCLUDE_DUPLICATE.concat(teamFilterString);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"  reload() {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    this.isReloadButtonDisabled \u003d true;"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    this.githubEventService.reloadPage().subscribe("},{"lineNumber":160,"author":{"gitId":"-"},"content":"      (success) \u003d\u003e success,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error, () \u003d\u003e this.githubEventService.reloadPage());"},{"lineNumber":163,"author":{"gitId":"luminousleek"},"content":"      }"},{"lineNumber":164,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    // Prevent user from spamming the reload button"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      this.isReloadButtonDisabled \u003d false;"},{"lineNumber":169,"author":{"gitId":"luminousleek"},"content":"    }, 3000);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  logOut() {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    this.auth.logOut();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"  openLogOutDialog() {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":178,"author":{"gitId":"luminousleek"},"content":"      this.logOutDialogMessages,"},{"lineNumber":179,"author":{"gitId":"luminousleek"},"content":"      this.yesButtonDialogMessage,"},{"lineNumber":180,"author":{"gitId":"luminousleek"},"content":"      this.noButtonDialogMessage"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"luminousleek"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      if (res) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        this.loggingService.info(`Logging out from ${this.userService.currentUser.loginId}`);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        this.logOut();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  exportLogFile() {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    this.loggingService.exportLogFile();"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":28,"-":166}},{"path":"src/app/shared/lib/custom-ops.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { pipe } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { filter, throwIfEmpty } from \u0027rxjs/operators\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"export function throwIfFalse(predicate, error_func) {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  return pipe("},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    filter((v) \u003d\u003e predicate(v)),"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    throwIfEmpty(error_func)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  );"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":8}},{"path":"src/app/shared/lib/github-paginator-parser.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { GithubResponse } from \u0027../../core/models/github/github-response.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Get the number of paginated pages of issues specified in a GitHubResponse"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * @param response"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"export function getNumberOfPages\u003cT\u003e(response: GithubResponse\u003cT\u003e): number {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  let numberOfPages \u003d 1;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  if (response.headers.link) {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    const paginatedData \u003d githubPaginatorParser(response.headers.link);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    numberOfPages \u003d +paginatedData[\u0027last\u0027] || 1;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  return numberOfPages;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Will return in the format of { paginateAction: number }"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Example { next: \u002715\u0027, last: \u002734\u0027, first: \u00271\u0027, prev: \u002713\u0027 }"},{"lineNumber":19,"author":{"gitId":"-"},"content":" *"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * ref: https://developer.github.com/v3/guides/traversing-with-pagination/"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * @param linkStr represent the pagination string provided by github API."},{"lineNumber":23,"author":{"gitId":"-"},"content":" *"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"function githubPaginatorParser(linkStr: string) {"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"  return linkStr"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    .split(\u0027,\u0027)"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    .map((paginateItem) \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      return paginateItem.split(\u0027;\u0027).map((curr, idx) \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (idx \u003d\u003d\u003d 0) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          return /[^_]page\u003d(\\d+)/.exec(curr)[1];"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (idx \u003d\u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          return /rel\u003d\"(.+)\"/.exec(curr)[1];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    })"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    .reduce((obj, curr) \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      obj[curr[1]] \u003d curr[0];"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      return obj;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }, {});"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":5,"-":37}},{"path":"src/app/shared/lib/graphgql-common.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export function flattenEdges(edges: Array\u003cany\u003e, transformFunc?: (node) \u003d\u003e {}): Array\u003cany\u003e {"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  return edges.map((edge) \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    if (transformFunc) {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      return transformFunc(edge.node);"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      return edge.node;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":8}},{"path":"src/app/shared/lib/html.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export function escapeHTML(unsafe: string): string {"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  return unsafe.replace(/\u0026/g, \u0027\u0026amp;\u0027).replace(/\u003c/g, \u0027\u0026lt;\u0027).replace(/\u003e/g, \u0027\u0026gt;\u0027).replace(/\"/g, \u0027\u0026quot;\u0027).replace(/\u0027/g, \u0027\u0026#039;\u0027);"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"export function replaceNewlinesWithBreakLines(text: string): string {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  return text.replace(/\\n/g, \u0027\u003cbr/\u003e\u0027);"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":1,"-":6}},{"path":"src/app/shared/lib/marked.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { MarkedOptions, MarkedRenderer } from \u0027ngx-markdown\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export function markedOptionsFactory(): MarkedOptions {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  const renderer \u003d new MarkedRenderer();"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  const linkRenderer \u003d renderer.link;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  renderer.link \u003d (href, title, text) \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    const html \u003d linkRenderer.call(renderer, href, title, text);"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    return html.replace(/^\u003ca /, \u0027\u003ca target\u003d\"_blank\" \u0027);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    renderer,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    gfm: true,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    tables: true,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    breaks: false,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    pedantic: false,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    sanitize: false,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    smartLists: true,"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    smartypants: false"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":20}},{"path":"src/app/shared/lib/string-utils.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Returns the value of the keyword by parsing through a text of string"},{"lineNumber":3,"author":{"gitId":"-"},"content":" *"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * @param text the string input to be parsed"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * @param prefix prefix of the string that is being searched"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @param suffix suffix of the string that is being searched"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * @returns the string value we wish to extract"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export function extractStringBetween(text: string, prefix: string, suffix: string): string {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  let result \u003d text.trim();"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  const startIdx \u003d result.indexOf(prefix) + prefix.length;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  if (startIdx \u003d\u003d\u003d -1) {"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    return \u0027\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  result \u003d result.substring(startIdx);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  const endIdx \u003d result.indexOf(suffix);"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  if (endIdx \u003d\u003d\u003d -1) {"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    return \u0027\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  result \u003d result.substring(0, endIdx);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  return result;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":2,"-":24}},{"path":"src/app/shared/lib/validate.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export interface Rule {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  required?: boolean;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  validate: (any) \u003d\u003e boolean;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"export interface Schema {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  [keyName: string]: Rule;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"export const isValidObject \u003d (object: object, schema: Schema): boolean \u003d\u003e"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  Object.entries(schema).every("},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    ([key, rule]) \u003d\u003e"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"      !rule.required ||"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"      (key in object \u0026\u0026 // if key is present"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        rule.validate(object[key])) // if value abides by schema"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  );"}],"authorContributionMap":{"luminousleek":4,"-":12}},{"path":"src/app/shared/material.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DragDropModule } from \u0027@angular/cdk/drag-drop\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ScrollingModule } from \u0027@angular/cdk/scrolling\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CdkTableModule } from \u0027@angular/cdk/table\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CdkTreeModule } from \u0027@angular/cdk/tree\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  MatAutocompleteModule,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  MatBadgeModule,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  MatBottomSheetModule,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  MatButtonModule,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  MatButtonToggleModule,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  MatCardModule,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  MatCheckboxModule,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  MatChipsModule,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  MatDatepickerModule,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  MatDialogModule,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  MatDividerModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  MatExpansionModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  MatGridListModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  MatIconModule,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  MatInputModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  MatListModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  MatMenuModule,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  MatNativeDateModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  MatPaginatorModule,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  MatProgressBarModule,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  MatProgressSpinnerModule,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  MatRadioModule,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  MatRippleModule,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  MatSelectModule,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  MatSidenavModule,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  MatSliderModule,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  MatSlideToggleModule,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  MatSnackBarModule,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  MatSortModule,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  MatStepperModule,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  MatTableModule,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  MatTabsModule,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  MatToolbarModule,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  MatTooltipModule,"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"  MatTreeModule"},{"lineNumber":43,"author":{"gitId":"-"},"content":"} from \u0027@angular/material\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":47,"author":{"gitId":"-"},"content":"    CdkTableModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    CdkTreeModule,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    DragDropModule,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    MatAutocompleteModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    MatBadgeModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    MatBottomSheetModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    MatButtonModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    MatButtonToggleModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MatCardModule,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    MatCheckboxModule,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    MatChipsModule,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    MatStepperModule,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    MatDatepickerModule,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    MatDialogModule,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    MatDividerModule,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    MatExpansionModule,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    MatGridListModule,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    MatIconModule,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    MatInputModule,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    MatListModule,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    MatMenuModule,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    MatNativeDateModule,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    MatPaginatorModule,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    MatProgressBarModule,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    MatProgressSpinnerModule,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    MatRadioModule,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    MatRippleModule,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    MatSelectModule,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    MatSidenavModule,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    MatSliderModule,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    MatSlideToggleModule,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    MatSnackBarModule,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    MatSortModule,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    MatTableModule,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    MatTabsModule,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    MatToolbarModule,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    MatTooltipModule,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    MatTreeModule,"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"    ScrollingModule"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":87,"author":{"gitId":"-"},"content":"})"},{"lineNumber":88,"author":{"gitId":"-"},"content":"export class MaterialModule {}"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"/**  Copyright 2018 Google Inc. All Rights Reserved."},{"lineNumber":91,"author":{"gitId":"-"},"content":" Use of this source code is governed by an MIT-style license that"},{"lineNumber":92,"author":{"gitId":"-"},"content":" can be found in the LICENSE file at http://angular.io/license */"}],"authorContributionMap":{"luminousleek":2,"-":90}},{"path":"src/app/shared/shared.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { HttpClientModule } from \u0027@angular/common/http\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormsModule, ReactiveFormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { RouterModule } from \u0027@angular/router\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { FormDisableControlDirective } from \u0027../core/directives/form-disable-control.directive\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ErrorToasterModule } from \u0027./error-toasters/error-toaster.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { MaterialModule } from \u0027./material.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, FormsModule, ReactiveFormsModule, HttpClientModule, RouterModule, MaterialModule, ErrorToasterModule],"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  declarations: [FormDisableControlDirective],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"    FormDisableControlDirective,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ReactiveFormsModule,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    HttpClientModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    RouterModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    MaterialModule,"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    ErrorToasterModule"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class SharedModule {}"}],"authorContributionMap":{"luminousleek":2,"-":22}},{"path":"src/app/shared/view-issue/issue-dispute/issue-dispute.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch3 class\u003d\"mat-title\"\u003eDisputes\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"tutorResponseForm\" #tutorForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitTutorResponseForm(tutorForm)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan style\u003d\"vertical-align: middle; margin-left: 5px\"\u003e Post your response here. \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton mat-button style\u003d\"float: right\" *ngIf\u003d\"!isEditing\" (click)\u003d\"changeToEditMode()\"\u003eEdit\u003c/button\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"container\" *ngFor\u003d\"let dispute of issue.issueDisputes; index as i; trackBy: trackDisputeList\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cdiv style\u003d\"display: flex; align-items: center\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"question-mark\"\u003e?\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cmarkdown [data]\u003d\"this.getItemTitleText(dispute.title)\"\u003e\u003c/markdown\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"        \u003cbr /\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cmarkdown [data]\u003d\"dispute.description\"\u003e\u003c/markdown\u003e"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"        \u003cbr /\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-checkbox"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"            style\u003d\"display: inline-block; width: 20%\""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"            [id]\u003d\"getTodoFormId(i)\""},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"            [formControlName]\u003d\"getTodoFormId(i)\""},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"            [disableControl]\u003d\"!isEditing\""},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"          \u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Done"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/mat-checkbox\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        \u003cbr /\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cmarkdown data\u003d\"### Tutor\u0027s Response: \"\u003e\u003c/markdown\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cmarkdown [data]\u003d\"dispute.tutorResponse\" *ngIf\u003d\"!isEditing\"\u003e\u003c/markdown\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003capp-comment-editor"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            [commentField]\u003d\"tutorResponseForm.get(getTutorResponseFormId(i))\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"            [commentForm]\u003d\"tutorResponseForm\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"            [id]\u003d\"getTutorResponseFormId(i)\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"            [(isFormPending)]\u003d\"isFormPending\""},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"            [(submitButtonText)]\u003d\"submitButtonText\""},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"          \u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/app-comment-editor\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        \u003cbr /\u003e"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        \u003cmarkdown data\u003d\"-------------------\"\u003e\u003c/markdown\u003e \u003cbr /\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\" *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"viewInGithub()\""},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          View Updated Response On Github"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"tutorResponseForm.invalid || isFormPending\""},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"tutorResponseForm.invalid || isFormPending\""},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"          style\u003d\"margin-left: 10px\""},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"!this.isNewResponse()\""},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"cancelEditMode()\""},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":49,"-":44}},{"path":"src/app/shared/view-issue/issue-dispute/issue-dispute.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormControl, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable, throwError } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../../../core/models/comment.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../../../core/services/electron.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../../core/services/github.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../../core/services/user.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CommentEditorComponent } from \u0027../../comment-editor/comment-editor.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../view-issue.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-dispute\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue-dispute.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue-dispute.component.css\u0027]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class IssueDisputeComponent implements OnInit, OnChanges {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  tutorResponseForm: FormGroup;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  isFormPending \u003d false;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  @Input() isEditing: boolean;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  @Output() updateEditState \u003d new EventEmitter\u003cboolean\u003e();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @ViewChild(CommentEditorComponent, { static: false }) commentEditor: CommentEditorComponent;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    private electronService: ElectronService"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.resetForm();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d this.isNewResponse() ? SUBMIT_BUTTON_TEXT.SUBMIT : SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      this.updateEditState.emit(this.isNewResponse());"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ngOnChanges(changes: SimpleChanges) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Whenever there is a change in value of issue, we reset the form so to render the most up to date form."},{"lineNumber":53,"author":{"gitId":"-"},"content":"    if (!this.isEditing \u0026\u0026 changes.issue \u0026\u0026 changes.issue.previousValue !\u003d\u003d changes.issue.currentValue) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      this.resetForm();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  submitTutorResponseForm(form: NgForm) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    if (this.tutorResponseForm.invalid) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.isFormPending \u003d true;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.issue.pending \u003d \u0027\u0027 + this.getNumOfPending();"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"    this.isSafeToSubmitTutorResponse()"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":68,"author":{"gitId":"-"},"content":"        flatMap((isSave: boolean) \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          if (isSave || this.isUpdatingDeletedResponse()) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (this.issue.issueComment \u0026\u0026 !this.isUpdatingDeletedResponse()) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"              return this.updateTutorResponse();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"              return this.createTutorResponse();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return throwError(\u0027The content you are editing has changed. Please verify the changes and try again.\u0027);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"        finalize(() \u003d\u003e (this.isFormPending \u003d false))"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"        (issue: Issue) \u003d\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          this.issueUpdated.emit(issue);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          this.resetToDefault();"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  updateTutorResponse(): Observable\u003cIssue\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    return this.issueService.updateTutorResponse(this.issue, \u003cIssueComment\u003e{"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      ...this.issue.issueComment,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      description: this.getTutorResponseFromForm()"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  createTutorResponse(): Observable\u003cIssue\u003e {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    const tutorResponse \u003d this.getTutorResponseFromForm();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    return this.issueService.createTutorResponse(this.issue, tutorResponse);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * @return - Determines whether it is safe to submit an issue dispute\u0027s resolution."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  isSafeToSubmitTutorResponse(): Observable\u003cboolean\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    return this.issueService.getLatestIssue(this.issue.id).pipe("},{"lineNumber":110,"author":{"gitId":"-"},"content":"      map((issue: Issue) \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (issue.issueComment \u0026\u0026 !!issue.issueComment \u003d\u003d\u003d !!this.issue.issueComment) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          for (let i \u003d 0; i \u003c issue.issueDisputes.length; i++) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (issue.issueDisputes[i].compareTo(this.issue.issueDisputes[i]) !\u003d\u003d 0) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"              return false;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          return true;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          return !!issue.issueComment \u003d\u003d\u003d !!this.issue.issueComment;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":126,"author":{"gitId":"-"},"content":"   * Determines whether the user is updating a response that has already been deleted on Github."},{"lineNumber":127,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  isUpdatingDeletedResponse(): boolean {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    return this.issue.issueComment \u0026\u0026 !this.issueService.issues[this.issue.id].issueComment;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Resets to default form state."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  resetToDefault(): void {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    this.updateEditState.emit(false);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    this.resetForm();"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"  viewInGithub(): void {"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"    this.electronService.openLink("},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"      `https://github.com/${this.githubService.getRepoURL()}/issues/` + `${this.issue.id}#issuecomment-${this.issue.issueComment.id}`"},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  changeToEditMode() {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    this.updateEditState.emit(true);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"  cancelEditMode() {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    this.issueService.getIssue(this.issue.id).subscribe((issue: Issue) \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      this.issueUpdated.emit(issue);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      this.resetToDefault();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"  trackDisputeList(index: number, item: string[]): string {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    return item[index];"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"  isNewResponse(): boolean {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    return !this.issue.issueComment;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   * Will reset the form to the initial values of `this.issue`."},{"lineNumber":168,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  resetForm(): void {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    this.tutorResponseForm \u003d this.formBuilder.group(this.createFormGroup());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  getItemTitleText(title: string): string {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return \u0027## \u0027 + title;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  getNumOfPending(): number {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    let pending \u003d this.issue.issueDisputes.length; // Initial pending is number of disputes"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    for (const issueDispute of this.issue.issueDisputes) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      // For each number of Done that is checked, reduce pending by one"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      if (issueDispute.isDone()) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        pending--;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    return pending;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   * Will create a form group with initial values in `this.issue`."},{"lineNumber":190,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  createFormGroup() {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    const group: any \u003d {};"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    // initialize fields for tutor response and the checkboxes for tutor to mark \"Done\""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    for (let i \u003d 0; i \u003c this.issue.issueDisputes.length; i++) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      const dispute \u003d this.issue.issueDisputes[i];"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      group[this.getTutorResponseFormId(i)] \u003d new FormControl(dispute.tutorResponse, Validators.required);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      group[this.getTodoFormId(i)] \u003d new FormControl({ value: dispute.isDone(), disabled: !this.isEditing }, Validators.required);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    return group;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   * Obtain the updated Github comment format for the tutor response based on the values in the form and `this.issue`."},{"lineNumber":204,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  getTutorResponseFromForm(): string {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    if (!this.issue.issueDisputes) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      return \u0027\u0027;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    const values \u003d this.tutorResponseForm.getRawValue();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    const todos \u003d [];"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    const responses \u003d [];"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    const updatedIssue \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    let index \u003d 0;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    for (const [key, value] of Object.entries(values)) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      if (key.startsWith(\u0027todo\u0027)) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        todos.push(value);"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      } else if (key.startsWith(\u0027tutor-response\u0027)) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        responses.push(value);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      index++;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    index \u003d 0;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    for (const dispute of updatedIssue.issueDisputes) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      const isDone \u003d todos[index] \u003d\u003d\u003d undefined ? dispute.isDone() : todos[index];"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      const tutorResponse \u003d responses[index] || dispute.tutorResponse;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      updatedIssue.issueDisputes[index].setTutorResponse(tutorResponse);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      updatedIssue.issueDisputes[index].setIsDone(isDone);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      index++;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    return updatedIssue.createGithubTutorResponse();"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":237,"author":{"gitId":"-"},"content":"   * @param index - index of dispute which the tutor resolve."},{"lineNumber":238,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  getTutorResponseFormId(index: number): string {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    return `tutor-response-${index}`;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   * @param index - index of dispute which the tutor resolve."},{"lineNumber":245,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  getTodoFormId(index: number): string {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    return `todo-${index}`;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  get conflict(): boolean {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    return this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":16,"-":237}},{"path":"src/app/shared/view-issue/issue-dispute/issue-dispute.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../../comment-editor/comment-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../../issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelDropdownModule } from \u0027../../label-dropdown/label-dropdown.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../../shared.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueDisputeComponent } from \u0027./issue-dispute.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  exports: [IssueDisputeComponent],"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  declarations: [IssueDisputeComponent],"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, CommentEditorModule, SharedModule, IssueComponentsModule, LabelDropdownModule, MarkdownModule.forChild()]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class IssueDisputeModule {}"}],"authorContributionMap":{"luminousleek":3,"-":12}},{"path":"src/app/shared/view-issue/new-team-response/conflict-dialog/conflict-dialog.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"display: flex; margin-bottom: 20px; align-items: center\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch1 mat-dialog-title style\u003d\"margin: 0\"\u003e{{ \u0027A new response was submitted by another user\u0027 }}\u003c/h1\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cbutton mat-icon-button color\u003d\"default\" style\u003d\"margin: 0 0 0 auto\" (click)\u003d\"close()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eclose\u003c/mat-icon\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"\u003cdiv mat-dialog-content style\u003d\"display: flex\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"column left\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cmat-tab-group class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\" (selectedTabChange)\u003d\"handleTabChange($event)\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cmat-tab label\u003d\"Updated Markdown Text\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"tab-content\" *ngIf\u003d\"isReady\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cdiv [innerHTML]\u003d\"updatedHtml\"\u003e\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/mat-tab\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cmat-tab label\u003d\"Preview\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"tab-content\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cmarkdown\u003e{{ data.teamResponse }}\u003c/markdown\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/mat-tab\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/mat-tab-group\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"column right\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.type\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"mat-title\"\u003e Type \u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cp [ngStyle]\u003d\"labelService.setLabelStyle(labelService.getColorOfLabel(data.type))\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        {{ data.type || \u0027-\u0027 }}"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.severity\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"mat-title\"\u003e Severity \u003c/span\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cp [ngStyle]\u003d\"labelService.setLabelStyle(labelService.getColorOfLabel(data.severity))\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        {{ data.severity || \u0027-\u0027 }}"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.responseTag\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"mat-title\"\u003e Response \u003c/span\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cp [ngStyle]\u003d\"labelService.setLabelStyle(labelService.getColorOfLabel(data.responseTag))\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        {{ data.responseTag || \u0027-\u0027 }}"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.assignees\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"      \u003capp-assignee-component [issue]\u003d\"data\" [team]\u003d\"data.teamAssigned\" [isEditable]\u003d\"false\"\u003e \u003c/app-assignee-component\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.duplicateOf\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cdiv\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cspan class\u003d\"mat-title\"\u003eA Duplicate Of:\u003c/span\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cp style\u003d\"margin-top: 5px\"\u003e"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"          {{ \u0027#\u0027 + data.duplicateOf + \u0027: \u0027 + (issueService.getIssue(data.duplicateOf) | async).title }}"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/p\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":3,"-":61}},{"path":"src/app/shared/view-issue/new-team-response/conflict-dialog/conflict-dialog.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MAT_DIALOG_DATA, MatDialogRef, MatTabChangeEvent } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DomSanitizer, SafeHtml } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../core/models/issue.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../../core/services/issue.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../../core/services/label.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { escapeHTML, replaceNewlinesWithBreakLines } from \u0027../../../lib/html\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-conflict-dialog\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027conflict-dialog.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./conflict-dialog.component.css\u0027]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class ConflictDialogComponent {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  isOnPreview \u003d false;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  isReady \u003d false;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  updatedHtml: SafeHtml;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public dialogRef: MatDialogRef\u003cConflictDialogComponent\u003e,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Inject(MAT_DIALOG_DATA) public data: Issue,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private sanitizer: DomSanitizer,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    public issueService: IssueService"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"  ) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.updatedHtml \u003d this.sanitizer.bypassSecurityTrustHtml(replaceNewlinesWithBreakLines(escapeHTML(data.teamResponse)));"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.isReady \u003d true;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  close(): void {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.dialogRef.close();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  handleTabChange(event: MatTabChangeEvent): void {"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    this.isOnPreview \u003d event.index \u003d\u003d\u003d 1;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":3,"-":34}},{"path":"src/app/shared/view-issue/new-team-response/new-team-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"newTeamResponseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewTeamResponse(myForm)\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cspan style\u003d\"vertical-align: middle; margin-left: 5px\"\u003e Post your team\u0027s response here. \u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(this.issue) | async).length \u003d\u003d\u003d 0; else displayDuplicates\" class\u003d\"container\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-checkbox"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"            style\u003d\"display: inline-block; width: 20%\""},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"            formControlName\u003d\"duplicated\""},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"            (change)\u003d\"handleChangeOfDuplicateCheckbox($event)\""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"          \u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            A Duplicate Of:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003c/mat-checkbox\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cmat-form-field [style.visibility]\u003d\"!duplicated.value ? \u0027hidden\u0027 : \u0027visible\u0027\" style\u003d\"display: inline-block; width: 50%\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cmat-select formControlName\u003d\"duplicateOf\" placeholder\u003d\"Duplicate of\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"              \u003cmat-option *ngFor\u003d\"let issue of duplicatedIssueList | async\" [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\" [value]\u003d\"issue.id\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"mat-body-strong\"\u003e #{{ issue.id }}: \u003c/span\u003e \u003cspan class\u003d\"mat-body\"\u003e{{ issue.title }}\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"                \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"color: #f44336\"\u003e"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"                  ({{ getDisabledDupOptionErrorText(issue) }})"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"                \u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003c/mat-option\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/mat-select\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cmat-error *ngIf\u003d\"duplicateOf.errors \u0026\u0026 duplicateOf.errors[\u0027required\u0027] \u0026\u0026 duplicateOf.touched\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              Need to specify the duplicated issue."},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/mat-error\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/mat-form-field\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"      \u003cng-template #displayDuplicates\u003e"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        \u003cdiv class\u003d\"container\"\u003e"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"          \u003capp-duplicated-issues-component [issue]\u003d\"this.issue\"\u003e\u003c/app-duplicated-issues-component\u003e"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"      \u003c/ng-template\u003e"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"left-half\"\u003e"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"          \u003capp-label-dropdown"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"            [initialValue]\u003d\"this.issue.severity\""},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"            attributeName\u003d\"severity\""},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"            [dropdownForm]\u003d\"newTeamResponseForm\""},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"          \u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"right-half\"\u003e"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"          \u003capp-label-dropdown"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"            [initialValue]\u003d\"this.issue.type\""},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"            attributeName\u003d\"type\""},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"            [dropdownForm]\u003d\"newTeamResponseForm\""},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"          \u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cmat-form-field class\u003d\"left-half\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cmat-select placeholder\u003d\"Assignees\" formControlName\u003d\"assignees\" multiple\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cmat-option *ngFor\u003d\"let member of teamMembers\" [value]\u003d\"member\"\u003e{{ member }}\u003c/mat-option\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-error *ngIf\u003d\"assignees.errors \u0026\u0026 assignees.errors[\u0027required\u0027] \u0026\u0026 assignees.touched\"\u003e Assignee(s) required. \u003c/mat-error\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"right-half\"\u003e"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"          \u003capp-label-dropdown"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"            [initialValue]\u003d\"this.issue.responseTag\""},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"            attributeName\u003d\"responseTag\""},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"            [dropdownForm]\u003d\"newTeamResponseForm\""},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"          \u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003capp-comment-editor"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        [id]\u003d\"\u0027description\u0027\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        [commentField]\u003d\"this.newTeamResponseForm.get(\u0027description\u0027)\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        [commentForm]\u003d\"this.newTeamResponseForm\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        [(isFormPending)]\u003d\"this.isFormPending\""},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"        [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c/app-comment-editor\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\"\u003e"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"viewUpdatedResponse()\""},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          View Updated Response"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"newTeamResponseForm.invalid || isFormPending\""},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"newTeamResponseForm.invalid || isFormPending\""},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"refresh()\""},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"          matTooltip\u003d\"Updated response will overwrite your changes\""},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":68,"zhaojj2209":1,"-":62}},{"path":"src/app/shared/view-issue/new-team-response/new-team-response.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { MatCheckboxChange } from \u0027@angular/material/checkbox\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Observable, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { finalize, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../../../core/models/comment.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Issue, SEVERITY_ORDER, STATUS } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../core/services/label.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../view-issue.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent } from \u0027./conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  selector: \u0027app-new-team-response\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./new-team-response.component.html\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./new-team-response.component.css\u0027]"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class NewTeamResponseComponent implements OnInit {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  newTeamResponseForm: FormGroup;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  teamMembers: string[];"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  duplicatedIssueList: Observable\u003cIssue[]\u003e;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  conflict: Conflict;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  isFormPending \u003d false;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    public issueService: IssueService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private dialog: MatDialog,"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    private phaseService: PhaseService"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    this.teamMembers \u003d this.issue.teamAssigned.teamMembers.map((member) \u003d\u003e {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      return member.loginId;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    this.duplicatedIssueList \u003d this.getDupIssueList();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    this.newTeamResponseForm \u003d this.formBuilder.group({"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      description: [\u0027\u0027],"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      severity: [this.issue.severity, Validators.required],"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      type: [this.issue.type, Validators.required],"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      responseTag: [this.issue.responseTag, Validators.required],"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"      assignees: [this.issue.assignees.map((a) \u003d\u003e a.toLowerCase())],"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      duplicated: [false],"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      duplicateOf: [\u0027\u0027]"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"    this.duplicated.valueChanges.subscribe((checked) \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      if (checked) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.duplicateOf.setValidators(Validators.required);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.responseTag.setValidators(null);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.duplicateOf.setValidators(null);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.responseTag.setValidators(Validators.required);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      this.duplicateOf.updateValueAndValidity();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      this.responseTag.updateValueAndValidity();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SUBMIT;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  submitNewTeamResponse(form: NgForm) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    if (this.newTeamResponseForm.invalid) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.isFormPending \u003d true;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    const latestIssue \u003d this.getUpdatedIssue();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"    this.isSafeToSubmit()"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":81,"author":{"gitId":"-"},"content":"        flatMap((isSaveToSubmit: boolean) \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          const newCommentDescription \u003d latestIssue.createGithubTeamResponse();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          if (isSaveToSubmit) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return this.issueService.createTeamResponse(latestIssue);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          } else if (this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            const issueCommentId \u003d this.issueService.issues[this.issue.id].issueComment.id;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return this.issueService.updateIssueWithComment(latestIssue, \u003cIssueComment\u003e{"},{"lineNumber":88,"author":{"gitId":"-"},"content":"              id: issueCommentId,"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"              description: newCommentDescription"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            this.conflict \u003d new Conflict(\u0027 \u0027, this.issueService.issues[this.issue.id].teamResponse);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.viewUpdatedResponse();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return throwError(\u0027A response has been submitted. Please verify the changes and try again.\u0027);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"        finalize(() \u003d\u003e (this.isFormPending \u003d false))"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"        (updatedIssue: Issue) \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          // updatedIssue.issueComment \u003d updatedComment;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          this.issueUpdated.emit(updatedIssue);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          form.resetForm();"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   * @return - Determines whether it is safe to submit a tester response."},{"lineNumber":114,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  isSafeToSubmit(): Observable\u003cboolean\u003e {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    return this.issueService.getLatestIssue(this.issue.id).pipe("},{"lineNumber":117,"author":{"gitId":"-"},"content":"      map((issue: Issue) \u003d\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return !issue.teamResponse;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":124,"author":{"gitId":"-"},"content":"   * @return - an updated copy of issue with its updated value from the form."},{"lineNumber":125,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  getUpdatedIssue(): Issue {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    const clone \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    clone.duplicated \u003d this.duplicated.value;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    clone.duplicateOf \u003d this.duplicateOf.value;"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":"    if (clone.duplicated) {"},{"lineNumber":131,"author":{"gitId":"zhaojj2209"},"content":"      const duplicatedIssue \u003d this.issueService.issues[clone.duplicateOf];"},{"lineNumber":132,"author":{"gitId":"zhaojj2209"},"content":"      clone.severity \u003d duplicatedIssue.severity;"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"      clone.type \u003d duplicatedIssue.type;"},{"lineNumber":134,"author":{"gitId":"zhaojj2209"},"content":"      clone.assignees \u003d duplicatedIssue.assignees;"},{"lineNumber":135,"author":{"gitId":"zhaojj2209"},"content":"      clone.responseTag \u003d duplicatedIssue.responseTag;"},{"lineNumber":136,"author":{"gitId":"zhaojj2209"},"content":"    } else {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      clone.severity \u003d this.severity.value;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      clone.type \u003d this.type.value;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      clone.assignees \u003d this.assignees.value;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      clone.responseTag \u003d this.responseTag.value;"},{"lineNumber":141,"author":{"gitId":"zhaojj2209"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    clone.status \u003d STATUS.Done;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    clone.teamResponse \u003d Issue.updateTeamResponse(this.description.value);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    return clone;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  dupIssueOptionIsDisabled(issue: Issue): boolean {"},{"lineNumber":148,"author":{"gitId":"luminousleek"},"content":"    return SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity] || issue.duplicated || !!issue.duplicateOf;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"  getDisabledDupOptionErrorText(issue: Issue): string {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const reason \u003d new Array\u003cstring\u003e();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    if (this.dupIssueOptionIsDisabled(issue)) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      if (SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity]) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        reason.push(\u0027Issue of lower priority\u0027);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      } else if (issue.duplicated || !!issue.duplicateOf) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        reason.push(\u0027A duplicated issue\u0027);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    return reason.join(\u0027, \u0027);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"  handleChangeOfDuplicateCheckbox(event: MatCheckboxChange) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    if (event.checked) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      this.responseTag.setValue(\u0027\u0027);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      this.assignees.setValue([]);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      this.responseTag.markAsUntouched();"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      this.duplicateOf.setValue(\u0027\u0027);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      this.duplicateOf.markAsUntouched();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   * Pops up a dialog that shows the updated team response that was submitted."},{"lineNumber":176,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  viewUpdatedResponse(): void {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    this.dialog.open(ConflictDialogComponent, {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      data: this.issueService.issues[this.issue.id],"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      autoFocus: false"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  refresh(): void {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    const updatedIssue \u003d this.issueService.issues[this.issue.id];"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    this.issueUpdated.emit(updatedIssue);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"  private getDupIssueList(): Observable\u003cIssue[]\u003e {"},{"lineNumber":190,"author":{"gitId":"luminousleek"},"content":"    return this.issueService.issues$.pipe("},{"lineNumber":191,"author":{"gitId":"luminousleek"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          return this.issue.id !\u003d\u003d issue.id;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":195,"author":{"gitId":"luminousleek"},"content":"      })"},{"lineNumber":196,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"  get description() {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027description\u0027);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"  get severity() {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027severity\u0027);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"  get type() {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027type\u0027);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"  get assignees() {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027assignees\u0027);"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"  get responseTag() {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027responseTag\u0027);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"  get duplicated() {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027duplicated\u0027);"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"  get duplicateOf() {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027duplicateOf\u0027);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":21,"zhaojj2209":8,"-":197}},{"path":"src/app/shared/view-issue/new-team-response/new-team-response.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../../comment-editor/comment-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../../issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelDropdownModule } from \u0027../../label-dropdown/label-dropdown.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../../shared.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent } from \u0027./conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NewTeamResponseComponent } from \u0027./new-team-response.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  exports: [NewTeamResponseComponent, ConflictDialogComponent],"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  declarations: [NewTeamResponseComponent, ConflictDialogComponent],"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, CommentEditorModule, SharedModule, IssueComponentsModule, LabelDropdownModule, MarkdownModule.forChild()],"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  entryComponents: [ConflictDialogComponent]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class NewTeamResponseModule {}"}],"authorContributionMap":{"luminousleek":4,"-":13}},{"path":"src/app/shared/view-issue/team-accepted/team-accepted.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"\u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"  \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    \u003cspan\u003e \u003cstrong\u003eTeam\u003c/strong\u003e responded\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"  \u003cdiv class\u003d\"comment\"\u003e{{ this.message }}\u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":6}},{"path":"src/app/shared/view-issue/team-accepted/team-accepted.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import { TeamAcceptedMessage } from \u0027../../../core/models/templates/team-accepted-template.model\u0027;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"  selector: \u0027app-team-accepted\u0027,"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"  templateUrl: \u0027./team-accepted.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./team-accepted.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"})"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"export class TeamAcceptedComponent implements OnInit {"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"  message: string;"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  constructor() {}"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  ngOnInit() {"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    this.message \u003d TeamAcceptedMessage;"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"}"}],"authorContributionMap":{"luminousleek":16}},{"path":"src/app/shared/view-issue/team-accepted/team-accepted.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import { TeamAcceptedComponent } from \u0027./team-accepted.component\u0027;"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"@NgModule({"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"  declarations: [TeamAcceptedComponent],"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"  exports: [TeamAcceptedComponent],"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule]"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"})"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"export class TeamAcceptedModule {}"}],"authorContributionMap":{"luminousleek":10}},{"path":"src/app/shared/view-issue/team-response/team-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"\u003ch3 class\u003d\"mat-title\"\u003eTeam\u0027s Response\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"responseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateResponse(myForm)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan\u003e \u003cstrong\u003e Team \u003c/strong\u003e responded. \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton style\u003d\"float: right\" mat-button *ngIf\u003d\"canEditIssue() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003eEdit\u003c/button\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003cmarkdown [data]\u003d\"issue.teamResponse\"\u003e\u003c/markdown\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003capp-comment-editor"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        [id]\u003d\"\u0027description\u0027\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"        [commentField]\u003d\"this.responseForm.get(\u0027description\u0027)\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"        [commentForm]\u003d\"this.responseForm\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        [(isFormPending)]\u003d\"this.isSavePending\""},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/app-comment-editor\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\"\u003e"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isSavePending\""},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"viewChanges()\""},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          View Updated Response"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"responseForm.invalid || isSavePending\""},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"responseForm.invalid || isSavePending\""},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton class\u003d\"editor-action\" type\u003d\"button\" [disabled]\u003d\"isSavePending\" mat-stroked-button color\u003d\"warn\" (click)\u003d\"cancelEditMode()\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":30,"-":28}},{"path":"src/app/shared/view-issue/team-response/team-response.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormGroup, NgForm } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Observable, throwError } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { finalize, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../../../core/models/comment.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Issue, STATUS } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent } from \u0027../../issue/conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../view-issue.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-team-response\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./team-response.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"  styleUrls: [\u0027./team-response.component.css\u0027]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class TeamResponseComponent implements OnInit {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  isSavePending \u003d false;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  responseForm: FormGroup;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  conflict: Conflict;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  @Input() isEditing: boolean;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @Output() updateEditState \u003d new EventEmitter\u003cboolean\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    private issueService: IssueService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private permissions: PermissionService,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private dialog: MatDialog,"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    private phaseService: PhaseService"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.responseForm \u003d this.formBuilder.group({"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"      description: [\u0027\u0027]"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  changeToEditMode() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.updateEditState.emit(true);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.responseForm.setValue({"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"      description: this.issue.teamResponse || \u0027\u0027"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  updateResponse(form: NgForm) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    if (this.responseForm.invalid) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.isSavePending \u003d true;"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    const updatedIssue \u003d this.getUpdatedIssue();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const updatedIssueComment \u003d \u003cIssueComment\u003e{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      ...updatedIssue.issueComment,"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"      description: updatedIssue.createGithubTeamResponse()"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    this.isSafeToUpdate()"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":70,"author":{"gitId":"-"},"content":"        flatMap((isSaveToUpdate: boolean) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          if (isSaveToUpdate || this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return this.issueService.updateIssueWithComment(updatedIssue, updatedIssueComment);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          } else if (this.isUpdatingDeletedResponse()) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return this.issueService.createTeamResponse(updatedIssue);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            this.conflict \u003d new Conflict(this.issue.teamResponse, this.issueService.issues[this.issue.id].teamResponse);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            this.viewChanges();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return throwError(\u0027The content you are editing has changed. Please verify the changes and try again.\u0027);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        finalize(() \u003d\u003e (this.isSavePending \u003d false))"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"        (updatedIssue: Issue) \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          this.issueUpdated.emit(updatedIssue);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          this.resetToDefault();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          form.resetForm();"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * @return - Determines whether it is safe to updated an existing team response."},{"lineNumber":98,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  isSafeToUpdate(): Observable\u003cboolean\u003e {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    return this.issueService.getLatestIssue(this.issue.id).pipe("},{"lineNumber":101,"author":{"gitId":"-"},"content":"      map((issue: Issue) \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return issue.teamResponse \u003d\u003d\u003d this.issue.teamResponse;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Determines whether the user is updating a response that has already been deleted on Github."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  isUpdatingDeletedResponse(): boolean {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    return this.issue.teamResponse \u0026\u0026 !this.issueService.issues[this.issue.id].teamResponse;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  canEditIssue(): boolean {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    return this.permissions.isTeamResponseEditable();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   * Resets to default form state."},{"lineNumber":120,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  resetToDefault(): void {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    this.conflict \u003d undefined;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.updateEditState.emit(false);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  viewChanges(): void {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    this.dialog.open(ConflictDialogComponent, {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      data: this.conflict,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      autoFocus: false"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"   * When user exits exit mode, we will need to sync the issue in IssueService with this component."},{"lineNumber":136,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  cancelEditMode(): void {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    this.issueService.getIssue(this.issue.id).subscribe((issue: Issue) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      this.issueUpdated.emit(issue);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      this.resetToDefault();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  private getUpdatedIssue(): Issue {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    const clone \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    clone.teamResponse \u003d Issue.updateTeamResponse(this.responseForm.get(\u0027description\u0027).value);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    if (!clone.status) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      clone.status \u003d clone.teamResponse \u003d\u003d\u003d \u0027\u0027 ? STATUS.Incomplete : STATUS.Done;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    return clone;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":17,"-":135}},{"path":"src/app/shared/view-issue/team-response/team-response.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../../comment-editor/comment-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../../issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelDropdownModule } from \u0027../../label-dropdown/label-dropdown.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../../shared.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { TeamResponseComponent } from \u0027./team-response.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"  exports: [TeamResponseComponent],"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  declarations: [TeamResponseComponent],"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, CommentEditorModule, SharedModule, IssueComponentsModule, LabelDropdownModule, MarkdownModule.forChild()]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class TeamResponseModule {}"}],"authorContributionMap":{"luminousleek":3,"-":12}},{"path":"src/app/shared/view-issue/tester-response/conflict-dialog/conflict-dialog.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"display: flex; margin-bottom: 20px; align-items: center\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch1 mat-dialog-title style\u003d\"margin: 0\"\u003e{{ \u0027The content you are editing has changed\u0027 }}\u003c/h1\u003e"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"  \u003cmat-slide-toggle style\u003d\"display: inline-block; margin-left: 50px\" color\u003d\"primary\" [checked]\u003d\"showDiff\" (change)\u003d\"handleChangeShowDiff()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    Show Difference"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/mat-slide-toggle\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cbutton mat-icon-button color\u003d\"default\" style\u003d\"margin: 0 0 0 auto\" (click)\u003d\"close()\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eclose\u003c/mat-icon\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv mat-dialog-content\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cmat-accordion [multi]\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    \u003cmat-expansion-panel class\u003d\"full-width\" *ngFor\u003d\"let conflict of conflicts; index as i\" [expanded]\u003d\"panelOpenStates[i]\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cmat-expansion-panel-header\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cmat-panel-title class\u003d\"response-title\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"question-mark\"\u003e?\u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003cmarkdown [data]\u003d\"data.updatedResponses[i].getTitleInMarkDown()\"\u003e\u003c/markdown\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/mat-panel-title\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cmat-panel-description\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003cmat-chip-list\u003e"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"            \u003cmat-chip *ngIf\u003d\"data.outdatedResponses[i].compareTo(data.updatedResponses[i]) \u003d\u003d\u003d 0\" style\u003d\"margin-top: 10px\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              No Changes"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/mat-chip\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003c/mat-chip-list\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/mat-panel-description\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/mat-expansion-panel-header\u003e"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"      \u003cbr /\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cmarkdown [data]\u003d\"data.updatedResponses[i].description\"\u003e\u003c/markdown\u003e"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"      \u003cbr /\u003e"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"data.updatedResponses[i].isDisagree() \u003d\u003d\u003d data.outdatedResponses[i].isDisagree() || !showDiff\""},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        style\u003d\"margin-bottom: 10px\""},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cmat-checkbox style\u003d\"display: inline-block; width: 20%\" [disabled]\u003d\"true\" [checked]\u003d\"data.updatedResponses[i].isDisagree()\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          I disagree"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/mat-checkbox\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"!data.outdatedResponses[i].isDisagree() \u0026\u0026 data.updatedResponses[i].isDisagree() \u0026\u0026 showDiff\" class\u003d\"checkbox-changes\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003ci style\u003d\"color: green\" class\u003d\"material-icons-outlined\"\u003eadd_box\u003c/i\u003e"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        \u003cins style\u003d\"background: #d4fcbc; text-decoration: none\"\u003e I disagree \u003c/ins\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"data.outdatedResponses[i].isDisagree() \u0026\u0026 !data.updatedResponses[i].isDisagree() \u0026\u0026 showDiff\" class\u003d\"checkbox-changes\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003ci style\u003d\"color: red\" class\u003d\"material-icons-outlined\"\u003eindeterminate_check_box\u003c/i\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cdel style\u003d\"background: #fbb\"\u003eI disagree\u003c/del\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"      \u003cmat-tab-group style\u003d\"margin-bottom: 20px\" class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cmat-tab label\u003d\"Markdown Text\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"tab-content\" *ngIf\u003d\"isReady\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"showDiff\" [innerHTML]\u003d\"diffHtmls[i]\"\u003e\u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"!showDiff\" [innerHTML]\u003d\"updatedHtmls[i]\"\u003e\u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/mat-tab\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cmat-tab label\u003d\"Preview Updated Content\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"tab-content\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cmarkdown\u003e{{ conflict.updatedContent }}\u003c/markdown\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/mat-tab\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/mat-tab-group\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/mat-expansion-panel\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/mat-accordion\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":11,"-":51}},{"path":"src/app/shared/view-issue/tester-response/conflict-dialog/conflict-dialog.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MAT_DIALOG_DATA, MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DomSanitizer, SafeHtml } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Conflict } from \u0027../../../../core/models/conflict/conflict.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { TesterResponse } from \u0027../../../../core/models/tester-response.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../../core/services/issue.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../../core/services/label.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export interface TesterResponseConflictData {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  outdatedResponses: TesterResponse[];"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  updatedResponses: TesterResponse[];"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  selector: \u0027app-conflict-dialog\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  templateUrl: \u0027conflict-dialog.component.html\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./conflict-dialog.component.css\u0027]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export class ConflictDialogComponent {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  isReady \u003d false;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  showDiff \u003d true;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  conflicts: Conflict[] \u003d [];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  diffHtmls: SafeHtml[] \u003d [];"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  updatedHtmls: SafeHtml[] \u003d [];"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  panelOpenStates: boolean[] \u003d [];"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public dialogRef: MatDialogRef\u003cConflictDialogComponent\u003e,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Inject(MAT_DIALOG_DATA) public data: TesterResponseConflictData,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private sanitizer: DomSanitizer,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public issueService: IssueService"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"  ) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    for (let i \u003d 0; i \u003c data.updatedResponses.length; i++) {"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"      this.conflicts.push("},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        new Conflict("},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"          data.outdatedResponses[i].getDisagreementWithoutDefaultResponse(),"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"          data.updatedResponses[i].getDisagreementWithoutDefaultResponse()"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        )"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      this.diffHtmls.push(this.sanitizer.bypassSecurityTrustHtml(this.conflicts[i].getHtmlDiffString()));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      this.updatedHtmls.push(this.sanitizer.bypassSecurityTrustHtml(this.conflicts[i].getHtmlUpdatedString()));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      this.panelOpenStates.push(data.outdatedResponses[i].compareTo(data.updatedResponses[i]) !\u003d\u003d 0);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    this.isReady \u003d true;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  close(): void {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.dialogRef.close();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  handleChangeShowDiff() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.showDiff \u003d !this.showDiff;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":8,"-":49}},{"path":"src/app/shared/view-issue/tester-response/tester-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch3 class\u003d\"mat-title\"\u003eTester\u0027s Response\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"testerResponseForm\" (ngSubmit)\u003d\"submitTesterResponseForm()\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan style\u003d\"vertical-align: middle; margin-left: 5px\" *ngIf\u003d\"this.isNewResponse()\"\u003e Please verify the following item(s). \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cspan style\u003d\"vertical-align: middle; margin-left: 5px\" *ngIf\u003d\"!this.isNewResponse()\"\u003e \u003cstrong\u003eTester\u003c/strong\u003e responded. \u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"      \u003cbutton mat-button style\u003d\"float: right\" *ngIf\u003d\"!isEditing\" (click)\u003d\"changeToEditMode()\"\u003eEdit\u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"container\" *ngFor\u003d\"let response of issue.testerResponses; index as i; trackBy: trackDisagreeList\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cdiv style\u003d\"display: flex; align-items: center\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"question-mark\"\u003e?\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cmarkdown [data]\u003d\"response.getTitleInMarkDown()\"\u003e\u003c/markdown\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"        \u003cbr /\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cmarkdown [data]\u003d\"response.description\"\u003e\u003c/markdown\u003e"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        \u003cbr /\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"          \u003cmat-radio-group"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"            style\u003d\"display: inline-block; width: 20%\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"            aria-label\u003d\"Select Agree or Disagree to Team\u0027s Response\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"            [disableControl]\u003d\"!isEditing\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"            [id]\u003d\"getDisagreeRadioFormId(i)\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"            [formControlName]\u003d\"getDisagreeRadioFormId(i)\""},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"            (change)\u003d\"handleChangeOfDisagreeRadioButton($event, i)\""},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"          \u003e"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"            \u003cmat-radio-button [value]\u003d\"false\"\u003e I Agree \u003c/mat-radio-button\u003e"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"            \u003cmat-radio-button [value]\u003d\"true\"\u003e I Disagree \u003c/mat-radio-button\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/mat-radio-group\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"testerResponseForm.get(getDisagreeRadioFormId(i)).value\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"            \u003cp style\u003d\"font-weight: 500\"\u003eReason for Disagreement:\u003c/p\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cmarkdown [data]\u003d\"response.reasonForDisagreement\" *ngIf\u003d\"!isEditing\"\u003e\u003c/markdown\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"            \u003capp-comment-editor"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"              [commentField]\u003d\"testerResponseForm.get(getTesterResponseFormId(i))\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"              [id]\u003d\"getTesterResponseFormId(i)\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"              [commentForm]\u003d\"testerResponseForm\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"              [(isFormPending)]\u003d\"isFormPending\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"              [(submitButtonText)]\u003d\"submitButtonText\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/app-comment-editor\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        \u003cbr /\u003e"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        \u003cmarkdown data\u003d\"-------------------\"\u003e\u003c/markdown\u003e \u003cbr /\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\" *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"primary\""},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"viewChanges()\""},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          View Updated Response"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton type\u003d\"submit\" [disabled]\u003d\"testerResponseForm.invalid || isFormPending\" mat-stroked-button color\u003d\"primary\" *ngIf\u003d\"!conflict\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"submit\""},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"testerResponseForm.invalid || isFormPending\""},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"          mat-raised-button"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        \u003cbutton"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"          class\u003d\"editor-action\""},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"          type\u003d\"button\""},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"!this.isNewResponse()\""},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"          mat-stroked-button"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"          color\u003d\"warn\""},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"          (click)\u003d\"cancelEditMode()\""},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"luminousleek":41,"-":49}},{"path":"src/app/shared/view-issue/tester-response/tester-response.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormControl, FormGroup, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Observable, throwError } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { finalize, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../../../core/models/comment.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { TesterResponse } from \u0027../../../core/models/tester-response.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../../../core/models/user.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../../core/services/user.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { CommentEditorComponent } from \u0027../../comment-editor/comment-editor.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../view-issue.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent, TesterResponseConflictData } from \u0027./conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selector: \u0027app-tester-response\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./tester-response.component.html\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./tester-response.component.css\u0027]"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class TesterResponseComponent implements OnInit, OnChanges {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  testerResponseForm: FormGroup;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  isFormPending \u003d false;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  @Input() isEditing: boolean;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  @Output() updateEditState \u003d new EventEmitter\u003cboolean\u003e();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  @ViewChild(CommentEditorComponent, { static: false }) commentEditor: CommentEditorComponent;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private readonly responseRadioIdentifier \u003d \u0027response-radio\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private readonly responseTextIdentifier \u003d \u0027tester-response\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private dialog: MatDialog,"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    private phaseService: PhaseService"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    this.resetForm();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d this.isNewResponse() ? SUBMIT_BUTTON_TEXT.SUBMIT : SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      this.updateEditState.emit(this.isNewResponse());"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ngOnChanges(changes: SimpleChanges) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Whenever there is a change in value of issue, we reset the form so to render the most up to date form."},{"lineNumber":57,"author":{"gitId":"-"},"content":"    if (!this.isEditing \u0026\u0026 changes.issue \u0026\u0026 changes.issue.previousValue !\u003d\u003d changes.issue.currentValue) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      this.resetForm();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  submitTesterResponseForm() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    if (this.testerResponseForm.invalid) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.isFormPending \u003d true;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    this.isSafeToSubmit()"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"      .pipe("},{"lineNumber":70,"author":{"gitId":"-"},"content":"        flatMap((isSaveToSubmit: boolean) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"          if (isSaveToSubmit || this.isUpdatingDeletedResponse() || this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return this.issueService.updateTesterResponse(this.issue, \u003cIssueComment\u003e{"},{"lineNumber":73,"author":{"gitId":"-"},"content":"              ...this.issue.issueComment,"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"              description: this.getTesterResponseFromForm()"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            this.viewChanges();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return throwError(\u0027The content you are editing has changed. Please verify the changes and try again.\u0027);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        finalize(() \u003d\u003e (this.isFormPending \u003d false))"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"      )"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"      .subscribe("},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"        (updatedIssue: Issue) \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          this.issueUpdated.emit(updatedIssue);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          this.resetToDefault();"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        (error) \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * @return - Determines whether it is safe to submit a tester response."},{"lineNumber":97,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  isSafeToSubmit(): Observable\u003cboolean\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    return this.issueService.getLatestIssue(this.issue.id).pipe("},{"lineNumber":100,"author":{"gitId":"-"},"content":"      map((issue: Issue) \u003d\u003e {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!issue.testerResponses) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return issue.testerResponses.reduce((result, response, index) \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          return result \u0026\u0026 response.compareTo(this.issue.testerResponses[index]) \u003d\u003d\u003d 0;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }, true);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":112,"author":{"gitId":"-"},"content":"   * Determines whether the user is updating a response that has already been deleted on Github."},{"lineNumber":113,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  isUpdatingDeletedResponse(): boolean {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    return this.issue.testerResponses \u0026\u0026 !this.issueService.issues[this.issue.id].testerResponses;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   * Pops up a dialog that shows the difference between the outdated tester\u0027s response and the updated one."},{"lineNumber":120,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  viewChanges(): void {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    this.dialog.open(ConflictDialogComponent, {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      data: \u003cTesterResponseConflictData\u003e{"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        outdatedResponses: this.issue.testerResponses,"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"        updatedResponses: this.issueService.issues[this.issue.id].testerResponses"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      autoFocus: false"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  changeToEditMode() {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    this.updateEditState.emit(true);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  cancelEditMode() {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    this.issueService.getIssue(this.issue.id).subscribe((issue: Issue) \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      this.issueUpdated.emit(issue);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      this.resetToDefault();"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   * Resets to default form state."},{"lineNumber":144,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  resetToDefault(): void {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SAVE;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    this.updateEditState.emit(false);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    this.resetForm();"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"  handleChangeOfDisagreeRadioButton(event, index: number) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const responseFormControl \u003d this.testerResponseForm.get(this.getTesterResponseFormId(index));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    const isDisagreeChecked \u003d this.isResponseDisagreed(index);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    if (isDisagreeChecked) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      responseFormControl.enable();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      responseFormControl.disable();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  trackDisagreeList(index: number, item: string[]): string {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    return item[index];"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  isNewResponse(): boolean {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    return !this.issue.status \u0026\u0026 this.userService.currentUser.role \u003d\u003d\u003d UserRole.Student;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   * Will create a form group with initial values in `this.issue`."},{"lineNumber":171,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  createFormGroup() {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    const group: any \u003d {};"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    // initialize fields for tester response and the radio buttons for tester to choose \"Agree\" / \"Disagree\""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    for (let i \u003d 0; i \u003c this.issue.testerResponses.length; i++) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      const response \u003d this.issue.testerResponses[i];"},{"lineNumber":177,"author":{"gitId":"luminousleek"},"content":"      group[this.getTesterResponseFormId(i)] \u003d new FormControl("},{"lineNumber":178,"author":{"gitId":"luminousleek"},"content":"        {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          value: response.reasonForDisagreement,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"          disabled: !response.isDisagree()"},{"lineNumber":181,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":182,"author":{"gitId":"luminousleek"},"content":"        Validators.required"},{"lineNumber":183,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":184,"author":{"gitId":"luminousleek"},"content":"      group[this.getDisagreeRadioFormId(i)] \u003d new FormControl("},{"lineNumber":185,"author":{"gitId":"luminousleek"},"content":"        {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"          value: response.isDisagree(),"},{"lineNumber":187,"author":{"gitId":"-"},"content":"          disabled: !this.isEditing"},{"lineNumber":188,"author":{"gitId":"luminousleek"},"content":"        },"},{"lineNumber":189,"author":{"gitId":"luminousleek"},"content":"        Validators.required"},{"lineNumber":190,"author":{"gitId":"luminousleek"},"content":"      );"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    return group;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"  resetForm(): void {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    this.testerResponseForm \u003d this.formBuilder.group(this.createFormGroup());"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   * Based on the updated form and `this.issue` we obtain the updated tester response in Github format."},{"lineNumber":201,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  getTesterResponseFromForm(): string {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    if (!this.issue.testerResponses) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      return \u0027\u0027;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    const updatedIssue \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    updatedIssue.testerResponses.map((response: TesterResponse, index: number) \u003d\u003e {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      // Filter Keys based on Response Index"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      const isDisagree \u003d this.isResponseDisagreed(index);"},{"lineNumber":212,"author":{"gitId":"luminousleek"},"content":"      const reason \u003d isDisagree ? this.getTesterResponseText(index) || response.reasonForDisagreement : response.INITIAL_RESPONSE;"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"      response.setDisagree(isDisagree);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      response.setReasonForDisagreement(reason);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      return response;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    return updatedIssue.createGithubTesterResponse();"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * @param index - index of action which the tester disagree."},{"lineNumber":224,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  getTesterResponseFormId(index: number): string {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    return `${this.responseTextIdentifier}-${index}`;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   * Gets the Tester\u0027s Response text."},{"lineNumber":231,"author":{"gitId":"-"},"content":"   * @param index Tester Response Index."},{"lineNumber":232,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  getTesterResponseText(index: number): string {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    return this.testerResponseForm.get(this.getTesterResponseFormId(index)).value;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":238,"author":{"gitId":"-"},"content":"   * @param index - index of action which the tester disagree."},{"lineNumber":239,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  getDisagreeRadioFormId(index: number): string {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    return `${this.responseRadioIdentifier}-${index}`;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":245,"author":{"gitId":"-"},"content":"   * Checks if Tester Response was agreed to or disagreed with."},{"lineNumber":246,"author":{"gitId":"-"},"content":"   * @param index Tester Response Index,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * @returns true if response was disagreed with, false if response was agreed with."},{"lineNumber":248,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  isResponseDisagreed(index: number): boolean {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    return this.testerResponseForm.get(this.getDisagreeRadioFormId(index)).value;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"  get conflict(): boolean {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    return this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":27,"-":229}},{"path":"src/app/shared/view-issue/tester-response/tester-response.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../../comment-editor/comment-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../../issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelDropdownModule } from \u0027../../label-dropdown/label-dropdown.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../../shared.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent } from \u0027./conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { TesterResponseComponent } from \u0027./tester-response.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  exports: [TesterResponseComponent],"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  declarations: [TesterResponseComponent, ConflictDialogComponent],"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"  entryComponents: [ConflictDialogComponent],"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  imports: [CommonModule, CommentEditorModule, SharedModule, IssueComponentsModule, LabelDropdownModule, MarkdownModule.forChild()]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class TesterResponseModule {}"}],"authorContributionMap":{"luminousleek":4,"-":13}},{"path":"src/app/shared/view-issue/view-issue.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"isIssueLoading\" class\u003d\"centralize\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-spinner [diameter]\u003d\"47\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"!isIssueLoading\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003capp-issue-title [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-title\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"column left\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003c!-- Tester\u0027s Post --\u003e"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"      \u003capp-issue-description"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"        [isEditing]\u003d\"isIssueDescriptionEditing\""},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"        (changeEditState)\u003d\"updateDescriptionEditState($event)\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TESTER_POST)\""},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        title\u003d\"Description of Issue\""},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/app-issue-description\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c!-- Team\u0027s Response --\u003e"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"      \u003capp-team-response"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TEAM_RESPONSE) \u0026\u0026 issue.teamResponse\""},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        [isEditing]\u003d\"isTeamResponseEditing\""},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        (updateEditState)\u003d\"updateTeamResponseEditState($event)\""},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/app-team-response\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c!-- New Team\u0027s Response --\u003e"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"      \u003capp-new-team-response"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\""},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"          this.isComponentVisible(issueComponentsEnum.NEW_TEAM_RESPONSE) \u0026\u0026 permissions.isTeamResponseEditable() \u0026\u0026 !issue.teamResponse"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        \""},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/app-new-team-response\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c!-- Tester\u0027s Response --\u003e"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"      \u003capp-tester-response"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TESTER_RESPONSE) \u0026\u0026 issue.testerResponses \u0026\u0026 issue.testerResponses.length !\u003d\u003d 0\""},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        [isEditing]\u003d\"isTesterResponseEditing\""},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        (updateEditState)\u003d\"updateTesterResponseEditState($event)\""},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003c/app-tester-response\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"      \u003c!-- Team Accepted --\u003e"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"      \u003capp-team-accepted *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TESTER_RESPONSE) \u0026\u0026 issue.teamAccepted\"\u003e \u003c/app-team-accepted\u003e"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c!-- Issue Disputes For Tutor\u0027s Response --\u003e"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"      \u003capp-issue-dispute"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.ISSUE_DISPUTE)\""},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        [isEditing]\u003d\"isTutorResponseEditing\""},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"        (updateEditState)\u003d\"updateTutorResponseEditState($event)\""},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/app-issue-dispute\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"column right\"\u003e"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"      \u003cdiv"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        *ngIf\u003d\""},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"          (this.isComponentVisible(issueComponentsEnum.NEW_TEAM_RESPONSE) \u0026\u0026 issue.teamResponse) ||"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          (this.isComponentVisible(issueComponentsEnum.TESTER_RESPONSE) \u0026\u0026 this.userService.currentUser.role \u003d\u003d\u003d userRole.Student) ||"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          this.isComponentVisible(issueComponentsEnum.ISSUE_DISPUTE) ||"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"          !this.isComponentVisible(issueComponentsEnum.TEAM_RESPONSE)"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        \""},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"      \u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c!-- Severity Label --\u003e"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"        \u003capp-issue-label"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.SEVERITY_LABEL)\""},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"          [issue]\u003d\"issue\""},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"          attributeName\u003d\"severity\""},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"          (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        \u003e\u003c/app-issue-label\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003c!-- Bug Type Label --\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TYPE_LABEL)\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"type\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003c!-- Response Label --\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.RESPONSE_LABEL)\"\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"responseTag\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        \u003c!-- Assignee to this Issue --\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.ASSIGNEE)\"\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"          \u003capp-assignee-component [issue]\u003d\"issue\" [team]\u003d\"issue.teamAssigned\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-assignee-component\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003c!-- Duplicate information --\u003e"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"        \u003cdiv"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026 (issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\""},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          \u003capp-duplicated-issues-component [issue]\u003d\"issue\"\u003e\u003c/app-duplicated-issues-component\u003e"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"          \u003cbr /\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"        \u003cdiv"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\""},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"            this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"            (issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0)"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"          \""},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          \u003capp-duplicate-of-component [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-duplicate-of-component\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c!-- Faulty issue warning --\u003e"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"        \u003cdiv"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"          style\u003d\"margin-top: 15px; color: red\""},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"          *ngIf\u003d\""},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"            this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"            (issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0 \u0026\u0026"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"            (issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0)"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"          \""},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"        \u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          * Need your resolution. An issue cannot have both duplicated issues and duplicated status."},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        \u003c!-- Unsure checkbox --\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.UNSURE_CHECKBOX)\"\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          \u003capp-unsure-checkbox [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-unsure-checkbox\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"luminousleek":68,"-":72}},{"path":"src/app/shared/view-issue/view-issue.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Subscription } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../../core/models/user.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../core/services/permission.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"export enum ISSUE_COMPONENTS {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  TESTER_POST,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  TEAM_RESPONSE,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  NEW_TEAM_RESPONSE,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  TESTER_RESPONSE,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  ISSUE_DISPUTE,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  SEVERITY_LABEL,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  TYPE_LABEL,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  RESPONSE_LABEL,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ASSIGNEE,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  DUPLICATE,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  UNSURE_CHECKBOX"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"export const SUBMIT_BUTTON_TEXT \u003d {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  SUBMIT: \u0027Submit\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  SAVE: \u0027Save\u0027,"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"  OVERWRITE: \u0027Overwrite\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"};"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  selector: \u0027app-view-issue\u0027,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./view-issue.component.html\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./view-issue.component.css\u0027]"},{"lineNumber":35,"author":{"gitId":"-"},"content":"})"},{"lineNumber":36,"author":{"gitId":"-"},"content":"export class ViewIssueComponent implements OnInit, OnDestroy, OnChanges {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  issue: Issue;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  isIssueLoading \u003d true;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  isTutorResponseEditing \u003d false;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  isIssueDescriptionEditing \u003d false;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  isTeamResponseEditing \u003d false;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  isTesterResponseEditing \u003d false;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  issueSubscription: Subscription;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  @Input() issueId: number;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  @Input() issueComponents: ISSUE_COMPONENTS[];"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  public readonly issueComponentsEnum \u003d ISSUE_COMPONENTS;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  public readonly userRole \u003d UserRole;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"  constructor("},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public permissions: PermissionService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public issueService: IssueService,"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"    private phaseService: PhaseService"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"  ) {}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.getAndPollIssue(this.issueId);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * Will be triggered when there is a change in issueId (e.g. there is a navigation from 1 issue page to another issue page)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * @param changes - The changes being applied to @Input."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  ngOnChanges(changes: SimpleChanges) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    if (!changes.issueId.firstChange) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      this.stopPolling();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      this.isIssueLoading \u003d true;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      this.getAndPollIssue(changes.issueId.currentValue);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  ngOnDestroy() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.stopPolling();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  isComponentVisible(component: ISSUE_COMPONENTS): boolean {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    return this.issueComponents.includes(component);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  isEditing(): boolean {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    return this.isIssueDescriptionEditing || this.isTutorResponseEditing || this.isTeamResponseEditing;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  updateIssue(newIssue: Issue) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.issue \u003d newIssue;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    this.issueService.updateLocalStore(newIssue);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  updateDescriptionEditState(updatedState: boolean) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.isIssueDescriptionEditing \u003d updatedState;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  updateTeamResponseEditState(updatedState: boolean) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.isTeamResponseEditing \u003d updatedState;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  updateTesterResponseEditState(updatedState: boolean) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    this.isTesterResponseEditing \u003d updatedState;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  updateTutorResponseEditState(updatedState: boolean) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    this.isTutorResponseEditing \u003d updatedState;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  private getAndPollIssue(id: number): void {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    this.issueService.getIssue(id).subscribe("},{"lineNumber":110,"author":{"gitId":"-"},"content":"      (issue: Issue) \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.isIssueLoading \u003d false;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.issue \u003d issue;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.pollIssue(id);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      (err) \u003d\u003e this.errorHandlingService.handleError(err)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  private pollIssue(id: number): void {"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"    this.issueSubscription \u003d this.issueService.pollIssue(id).subscribe("},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"      (issue: Issue) \u003d\u003e {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        const updatedIssue \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!this.isIssueLoading) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          // prevent updating of respective attributes while editing"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"          if ("},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"            this.isIssueDescriptionEditing ||"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"            this.isTeamResponseEditing ||"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"            (!this.issue.teamResponse \u0026\u0026 updatedIssue.teamResponse) ||"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"            this.isTesterResponseEditing ||"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"            this.isTutorResponseEditing"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"          ) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            updatedIssue.retainResponses(this.phaseService.currentPhase, this.issue);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        this.issue \u003d updatedIssue;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        this.isIssueLoading \u003d false;"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"      },"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"      (error) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error, () \u003d\u003e this.pollIssue(id));"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"    );"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  private stopPolling(): void {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    if (this.issueSubscription) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      this.issueSubscription.unsubscribe();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":17,"-":132}},{"path":"src/app/shared/view-issue/view-issue.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CommentEditorModule } from \u0027../comment-editor/comment-editor.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComponentsModule } from \u0027../issue/issue-components.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelDropdownModule } from \u0027../label-dropdown/label-dropdown.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueDisputeModule } from \u0027./issue-dispute/issue-dispute.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NewTeamResponseModule } from \u0027./new-team-response/new-team-response.module\u0027;"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import { TeamAcceptedModule } from \u0027./team-accepted/team-accepted.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TeamResponseModule } from \u0027./team-response/team-response.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TesterResponseModule } from \u0027./tester-response/tester-response.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { ViewIssueComponent } from \u0027./view-issue.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  exports: [ViewIssueComponent],"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  declarations: [ViewIssueComponent],"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":19,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    CommentEditorModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    NewTeamResponseModule,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    TeamResponseModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    IssueDisputeModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    TesterResponseModule,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    IssueComponentsModule,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    LabelDropdownModule,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    MarkdownModule.forChild(),"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    TeamAcceptedModule"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":31,"author":{"gitId":"-"},"content":"})"},{"lineNumber":32,"author":{"gitId":"-"},"content":"export class ViewIssueModule {}"}],"authorContributionMap":{"luminousleek":4,"-":28}},{"path":"src/environments/environment.staging.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AppConfig as ProdAppConfig } from \u0027./environment.prod\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export const AppConfig \u003d {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  ...ProdAppConfig,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  clientId: \u002754b9dcc49069dc2f018e\u0027,"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"  origin: \u0027https://catcher-org.github.io\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"luminousleek":1,"-":6}},{"path":"src/index.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"\u003c!DOCTYPE html\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003chtml\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003chead\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003ctitle\u003eCATcher\u003c/title\u003e"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    \u003cmeta charset\u003d\"utf-8\" /\u003e"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    \u003cbase href\u003d\"/\" /\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1\" /\u003e"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    \u003clink rel\u003d\"icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.ico\" /\u003e"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    \u003clink href\u003d\"https://fonts.googleapis.com/css?family\u003dRoboto:300,400,500\" rel\u003d\"stylesheet\" /\u003e"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    \u003clink"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"      href\u003d\"https://fonts.googleapis.com/icon?family\u003dMaterial+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp\""},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"      rel\u003d\"stylesheet\""},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    /\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/head\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cbody\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003capp-root\u003eLoading...\u003c/app-root\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/body\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/html\u003e"}],"authorContributionMap":{"luminousleek":10,"-":9}},{"path":"src/main.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { enableProdMode } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { platformBrowserDynamic } from \u0027@angular/platform-browser-dynamic\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AppModule } from \u0027./app/app.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027./environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"if (AppConfig.production) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  enableProdMode();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"platformBrowserDynamic()"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  .bootstrapModule(AppModule, {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    preserveWhitespaces: false"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  })"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"  .catch((err) \u003d\u003e console.error(err));"}],"authorContributionMap":{"luminousleek":1,"-":14}},{"path":"src/markdown.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@font-face {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-family: octicons-link;"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"  src: url(data:font/woff;charset\u003dutf-8;base64,d09GRgABAAAAAAZwABAAAAAACFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEU0lHAAAGaAAAAAgAAAAIAAAAAUdTVUIAAAZcAAAACgAAAAoAAQAAT1MvMgAAAyQAAABJAAAAYFYEU3RjbWFwAAADcAAAAEUAAACAAJThvmN2dCAAAATkAAAABAAAAAQAAAAAZnBnbQAAA7gAAACyAAABCUM+8IhnYXNwAAAGTAAAABAAAAAQABoAI2dseWYAAAFsAAABPAAAAZwcEq9taGVhZAAAAsgAAAA0AAAANgh4a91oaGVhAAADCAAAABoAAAAkCA8DRGhtdHgAAAL8AAAADAAAAAwGAACfbG9jYQAAAsAAAAAIAAAACABiATBtYXhwAAACqAAAABgAAAAgAA8ASm5hbWUAAAToAAABQgAAAlXu73sOcG9zdAAABiwAAAAeAAAAME3QpOBwcmVwAAAEbAAAAHYAAAB/aFGpk3jaTY6xa8JAGMW/O62BDi0tJLYQincXEypYIiGJjSgHniQ6umTsUEyLm5BV6NDBP8Tpts6F0v+k/0an2i+itHDw3v2+9+DBKTzsJNnWJNTgHEy4BgG3EMI9DCEDOGEXzDADU5hBKMIgNPZqoD3SilVaXZCER3/I7AtxEJLtzzuZfI+VVkprxTlXShWKb3TBecG11rwoNlmmn1P2WYcJczl32etSpKnziC7lQyWe1smVPy/Lt7Kc+0vWY/gAgIIEqAN9we0pwKXreiMasxvabDQMM4riO+qxM2ogwDGOZTXxwxDiycQIcoYFBLj5K3EIaSctAq2kTYiw+ymhce7vwM9jSqO8JyVd5RH9gyTt2+J/yUmYlIR0s04n6+7Vm1ozezUeLEaUjhaDSuXHwVRgvLJn1tQ7xiuVv/ocTRF42mNgZGBgYGbwZOBiAAFGJBIMAAizAFoAAABiAGIAznjaY2BkYGAA4in8zwXi+W2+MjCzMIDApSwvXzC97Z4Ig8N/BxYGZgcgl52BCSQKAA3jCV8CAABfAAAAAAQAAEB42mNgZGBg4f3vACQZQABIMjKgAmYAKEgBXgAAeNpjYGY6wTiBgZWBg2kmUxoDA4MPhGZMYzBi1AHygVLYQUCaawqDA4PChxhmh/8ODDEsvAwHgMKMIDnGL0x7gJQCAwMAJd4MFwAAAHjaY2BgYGaA4DAGRgYQkAHyGMF8NgYrIM3JIAGVYYDT+AEjAwuDFpBmA9KMDEwMCh9i/v8H8sH0/4dQc1iAmAkALaUKLgAAAHjaTY9LDsIgEIbtgqHUPpDi3gPoBVyRTmTddOmqTXThEXqrob2gQ1FjwpDvfwCBdmdXC5AVKFu3e5MfNFJ29KTQT48Ob9/lqYwOGZxeUelN2U2R6+cArgtCJpauW7UQBqnFkUsjAY/kOU1cP+DAgvxwn1chZDwUbd6CFimGXwzwF6tPbFIcjEl+vvmM/byA48e6tWrKArm4ZJlCbdsrxksL1AwWn/yBSJKpYbq8AXaaTb8AAHja28jAwOC00ZrBeQNDQOWO//sdBBgYGRiYWYAEELEwMTE4uzo5Zzo5b2BxdnFOcALxNjA6b2ByTswC8jYwg0VlNuoCTWAMqNzMzsoK1rEhNqByEyerg5PMJlYuVueETKcd/89uBpnpvIEVomeHLoMsAAe1Id4AAAAAAAB42oWQT07CQBTGv0JBhagk7HQzKxca2sJCE1hDt4QF+9JOS0nbaaYDCQfwCJ7Au3AHj+LO13FMmm6cl7785vven0kBjHCBhfpYuNa5Ph1c0e2Xu3jEvWG7UdPDLZ4N92nOm+EBXuAbHmIMSRMs+4aUEd4Nd3CHD8NdvOLTsA2GL8M9PODbcL+hD7C1xoaHeLJSEao0FEW14ckxC+TU8TxvsY6X0eLPmRhry2WVioLpkrbp84LLQPGI7c6sOiUzpWIWS5GzlSgUzzLBSikOPFTOXqly7rqx0Z1Q5BAIoZBSFihQYQOOBEdkCOgXTOHA07HAGjGWiIjaPZNW13/+lm6S9FT7rLHFJ6fQbkATOG1j2OFMucKJJsxIVfQORl+9Jyda6Sl1dUYhSCm1dyClfoeDve4qMYdLEbfqHf3O/AdDumsjAAB42mNgYoAAZQYjBmyAGYQZmdhL8zLdDEydARfoAqIAAAABAAMABwAKABMAB///AA8AAQAAAAAAAAAAAAAAAAABAAAAAA\u003d\u003d)"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    format(\u0027woff\u0027);"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"markdown {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  -ms-text-size-adjust: 100%;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  line-height: 1.5;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  color: #24292e;"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"  font-family: -apple-system, BlinkMacSystemFont, \u0027Segoe UI\u0027, Helvetica, Arial, sans-serif, \u0027Apple Color Emoji\u0027, \u0027Segoe UI Emoji\u0027,"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    \u0027Segoe UI Symbol\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  font-size: 16px;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  word-wrap: break-word;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"markdown .pl-c {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  color: #6a737d;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"markdown .pl-c1,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"markdown .pl-s .pl-v {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  color: #005cc5;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"markdown .pl-e,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"markdown .pl-en {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  color: #6f42c1;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"markdown .pl-smi,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"markdown .pl-s .pl-s1 {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  color: #24292e;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"markdown .pl-ent {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  color: #22863a;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"markdown .pl-k {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  color: #d73a49;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"markdown .pl-s,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"markdown .pl-pds,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"markdown .pl-s .pl-pse .pl-s1,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"markdown .pl-sr,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"markdown .pl-sr .pl-cce,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"markdown .pl-sr .pl-sre,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"markdown .pl-sr .pl-sra {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  color: #032f62;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"markdown .pl-v,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"markdown .pl-smw {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  color: #e36209;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"markdown .pl-bu {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  color: #b31d28;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"markdown .pl-ii {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  color: #fafbfc;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  background-color: #b31d28;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"markdown .pl-c2 {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  color: #fafbfc;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  background-color: #d73a49;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"markdown .pl-c2::before {"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"  content: \u0027^M\u0027;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"markdown .pl-sr .pl-cce {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  color: #22863a;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"markdown .pl-ml {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  color: #735c0f;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"markdown .pl-mh,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"markdown .pl-mh .pl-en,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"markdown .pl-ms {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  color: #005cc5;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"markdown .pl-mi {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  font-style: italic;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  color: #24292e;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"markdown .pl-mb {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  color: #24292e;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"markdown .pl-md {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  color: #b31d28;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  background-color: #ffeef0;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"markdown .pl-mi1 {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  color: #22863a;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  background-color: #f0fff4;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"markdown .pl-mc {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: #e36209;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  background-color: #ffebda;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"markdown .pl-mi2 {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  color: #f6f8fa;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  background-color: #005cc5;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"markdown .pl-mdr {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  color: #6f42c1;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"markdown .pl-ba {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  color: #586069;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"markdown .pl-sg {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  color: #959da5;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"markdown .pl-corl {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  text-decoration: underline;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  color: #032f62;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"markdown .octicon {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  vertical-align: text-top;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  fill: currentColor;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"markdown a {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  background-color: transparent;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"markdown a:active,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"markdown a:hover {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  outline-width: 0;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"markdown strong {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  font-weight: inherit;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"markdown strong {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  font-weight: bolder;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"markdown h1 {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  font-size: 2em;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  margin: 0.67em 0;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"markdown img {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  border-style: none;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"markdown code,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"markdown kbd,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"markdown pre {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  font-family: monospace, monospace;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  font-size: 1em;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"markdown hr {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  box-sizing: content-box;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  height: 0;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  overflow: visible;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"markdown input {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  font: inherit;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"markdown input {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  overflow: visible;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"luminousleek"},"content":"markdown [type\u003d\u0027checkbox\u0027] {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  box-sizing: border-box;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"markdown * {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  box-sizing: border-box;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"markdown input {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  font-family: inherit;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  font-size: inherit;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  line-height: inherit;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"markdown a {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  color: #0366d6;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  text-decoration: none;"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"markdown a:hover {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  text-decoration: underline;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"markdown strong {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"markdown hr {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  height: 0;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  margin: 15px 0;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  overflow: hidden;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  background: transparent;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  border: 0;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid #dfe2e5;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"markdown hr::before {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  display: table;"},{"lineNumber":235,"author":{"gitId":"luminousleek"},"content":"  content: \u0027\u0027;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"markdown hr::after {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  display: table;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  clear: both;"},{"lineNumber":241,"author":{"gitId":"luminousleek"},"content":"  content: \u0027\u0027;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"markdown table {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  border-spacing: 0;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  border-collapse: collapse;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"markdown td,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"markdown th {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"markdown h1,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"markdown h2,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"markdown h3,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"markdown h4,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"markdown h5,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"markdown h6 {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  margin-top: 0;"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"markdown h1 {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  font-size: 32px;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"markdown h2 {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  font-size: 24px;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"markdown h3 {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  font-size: 20px;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"markdown h4 {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  font-size: 16px;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"markdown h5 {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  font-size: 14px;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"markdown h6 {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  font-size: 12px;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"markdown p {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  margin-top: 0;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  margin-bottom: 10px;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"markdown blockquote {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"markdown ul,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"markdown ol {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  padding-left: 0;"},{"lineNumber":306,"author":{"gitId":"-"},"content":"  margin-top: 0;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"markdown ol ol,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"markdown ul ol {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  list-style-type: lower-roman;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"markdown ul ul ol,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"markdown ul ol ol,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"markdown ol ul ol,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"markdown ol ol ol {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  list-style-type: lower-alpha;"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"markdown dd {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  margin-left: 0;"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"markdown code {"},{"lineNumber":327,"author":{"gitId":"luminousleek"},"content":"  font-family: \u0027SFMono-Regular\u0027, Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  font-size: 12px;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"markdown pre {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  margin-top: 0;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":334,"author":{"gitId":"luminousleek"},"content":"  font-family: \u0027SFMono-Regular\u0027, Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  font-size: 12px;"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"markdown .octicon {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  vertical-align: text-bottom;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"markdown .pl-0 {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  padding-left: 0 !important;"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"markdown .pl-1 {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"  padding-left: 4px !important;"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"markdown .pl-2 {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  padding-left: 8px !important;"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"markdown .pl-3 {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"  padding-left: 16px !important;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"markdown .pl-4 {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"  padding-left: 24px !important;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"markdown .pl-5 {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"  padding-left: 32px !important;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"markdown .pl-6 {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  padding-left: 40px !important;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"markdown::before {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  display: table;"},{"lineNumber":372,"author":{"gitId":"luminousleek"},"content":"  content: \u0027\u0027;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"markdown::after {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"  display: table;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  clear: both;"},{"lineNumber":378,"author":{"gitId":"luminousleek"},"content":"  content: \u0027\u0027;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"markdown \u003e *:first-child {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"  margin-top: 0 !important;"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"markdown \u003e *:last-child {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"  margin-bottom: 0 !important;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"markdown a:not([href]) {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  color: inherit;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"  text-decoration: none;"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"markdown .anchor {"},{"lineNumber":395,"author":{"gitId":"-"},"content":"  float: left;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  padding-right: 4px;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  margin-left: -20px;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  line-height: 1;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"markdown .anchor:focus {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  outline: none;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"markdown p,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"markdown blockquote,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"markdown ul,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"markdown ol,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"markdown dl,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"markdown table,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"markdown pre {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"  margin-top: 0;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  margin-bottom: 16px;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"}"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"markdown hr {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"  height: 0.25em;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  margin: 24px 0;"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  background-color: #e1e4e8;"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  border: 0;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"}"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"markdown blockquote {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  padding: 0 1em;"},{"lineNumber":426,"author":{"gitId":"-"},"content":"  color: #6a737d;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"  border-left: 0.25em solid #dfe2e5;"},{"lineNumber":428,"author":{"gitId":"-"},"content":"}"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"markdown blockquote \u003e :first-child {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  margin-top: 0;"},{"lineNumber":432,"author":{"gitId":"-"},"content":"}"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"markdown blockquote \u003e :last-child {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"}"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"markdown kbd {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":440,"author":{"gitId":"-"},"content":"  padding: 3px 5px;"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  font-size: 11px;"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  line-height: 10px;"},{"lineNumber":443,"author":{"gitId":"-"},"content":"  color: #444d56;"},{"lineNumber":444,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"  background-color: #fafbfc;"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  border: solid 1px #c6cbd1;"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  border-bottom-color: #959da5;"},{"lineNumber":448,"author":{"gitId":"-"},"content":"  border-radius: 3px;"},{"lineNumber":449,"author":{"gitId":"-"},"content":"  box-shadow: inset 0 -1px 0 #959da5;"},{"lineNumber":450,"author":{"gitId":"-"},"content":"}"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"markdown h1,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"markdown h2,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"markdown h3,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"markdown h4,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"markdown h5,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"markdown h6 {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"  margin-top: 24px;"},{"lineNumber":459,"author":{"gitId":"-"},"content":"  margin-bottom: 16px;"},{"lineNumber":460,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  line-height: 1.25;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"}"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"markdown h1 .octicon-link,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"markdown h2 .octicon-link,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"markdown h3 .octicon-link,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"markdown h4 .octicon-link,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"markdown h5 .octicon-link,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"markdown h6 .octicon-link {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"  color: #1b1f23;"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  visibility: hidden;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"}"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"markdown h1:hover .anchor,"},{"lineNumber":476,"author":{"gitId":"-"},"content":"markdown h2:hover .anchor,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"markdown h3:hover .anchor,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"markdown h4:hover .anchor,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"markdown h5:hover .anchor,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"markdown h6:hover .anchor {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"  text-decoration: none;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"}"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"markdown h1:hover .anchor .octicon-link,"},{"lineNumber":485,"author":{"gitId":"-"},"content":"markdown h2:hover .anchor .octicon-link,"},{"lineNumber":486,"author":{"gitId":"-"},"content":"markdown h3:hover .anchor .octicon-link,"},{"lineNumber":487,"author":{"gitId":"-"},"content":"markdown h4:hover .anchor .octicon-link,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"markdown h5:hover .anchor .octicon-link,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"markdown h6:hover .anchor .octicon-link {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"  visibility: visible;"},{"lineNumber":491,"author":{"gitId":"-"},"content":"}"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"markdown h1 {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"  padding-bottom: 0.3em;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"  font-size: 2em;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid #eaecef;"},{"lineNumber":497,"author":{"gitId":"-"},"content":"}"},{"lineNumber":498,"author":{"gitId":"-"},"content":""},{"lineNumber":499,"author":{"gitId":"-"},"content":"markdown h2 {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"  padding-bottom: 0.3em;"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  font-size: 1.5em;"},{"lineNumber":502,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid #eaecef;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"}"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"markdown h3 {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"  font-size: 1.25em;"},{"lineNumber":507,"author":{"gitId":"-"},"content":"}"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"markdown h4 {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"  font-size: 1em;"},{"lineNumber":511,"author":{"gitId":"-"},"content":"}"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"markdown h5 {"},{"lineNumber":514,"author":{"gitId":"-"},"content":"  font-size: 0.875em;"},{"lineNumber":515,"author":{"gitId":"-"},"content":"}"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"markdown h6 {"},{"lineNumber":518,"author":{"gitId":"-"},"content":"  font-size: 0.85em;"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  color: #6a737d;"},{"lineNumber":520,"author":{"gitId":"-"},"content":"}"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"markdown ul,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"markdown ol {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"  padding-left: 2em;"},{"lineNumber":525,"author":{"gitId":"-"},"content":"}"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"markdown ul ul,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"markdown ul ol,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"markdown ol ol,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"markdown ol ul {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"  margin-top: 0;"},{"lineNumber":532,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":533,"author":{"gitId":"-"},"content":"}"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"markdown li {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"  word-wrap: break-all;"},{"lineNumber":537,"author":{"gitId":"-"},"content":"}"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"markdown li \u003e p {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  margin-top: 16px;"},{"lineNumber":541,"author":{"gitId":"-"},"content":"}"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"markdown li + li {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"  margin-top: 0.25em;"},{"lineNumber":545,"author":{"gitId":"-"},"content":"}"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"markdown dl {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":549,"author":{"gitId":"-"},"content":"}"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"markdown dl dt {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"  margin-top: 16px;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  font-size: 1em;"},{"lineNumber":555,"author":{"gitId":"-"},"content":"  font-style: italic;"},{"lineNumber":556,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"}"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"markdown dl dd {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"  padding: 0 16px;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"  margin-bottom: 16px;"},{"lineNumber":562,"author":{"gitId":"-"},"content":"}"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"markdown table {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":566,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":567,"author":{"gitId":"-"},"content":"  overflow: auto;"},{"lineNumber":568,"author":{"gitId":"-"},"content":"}"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"markdown table th {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"  font-weight: 600;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"}"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"markdown table th,"},{"lineNumber":575,"author":{"gitId":"-"},"content":"markdown table td {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"  padding: 6px 13px;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"  border: 1px solid #dfe2e5;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"}"},{"lineNumber":579,"author":{"gitId":"-"},"content":""},{"lineNumber":580,"author":{"gitId":"-"},"content":"markdown table tr {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"  background-color: #fff;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"  border-top: 1px solid #c6cbd1;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"}"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"markdown table tr:nth-child(2n) {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"  background-color: #f6f8fa;"},{"lineNumber":587,"author":{"gitId":"-"},"content":"}"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"markdown img {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"  max-width: 100%;"},{"lineNumber":591,"author":{"gitId":"-"},"content":"  box-sizing: content-box;"},{"lineNumber":592,"author":{"gitId":"-"},"content":"  background-color: #fff;"},{"lineNumber":593,"author":{"gitId":"-"},"content":"}"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"luminousleek"},"content":"markdown img[align\u003d\u0027right\u0027] {"},{"lineNumber":596,"author":{"gitId":"-"},"content":"  padding-left: 20px;"},{"lineNumber":597,"author":{"gitId":"-"},"content":"}"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"luminousleek"},"content":"markdown img[align\u003d\u0027left\u0027] {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"  padding-right: 20px;"},{"lineNumber":601,"author":{"gitId":"-"},"content":"}"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"markdown code {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"  padding: 0.2em 0.4em;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":606,"author":{"gitId":"-"},"content":"  font-size: 85%;"},{"lineNumber":607,"author":{"gitId":"-"},"content":"  background-color: rgba(27, 31, 35, 0.05);"},{"lineNumber":608,"author":{"gitId":"-"},"content":"  border-radius: 3px;"},{"lineNumber":609,"author":{"gitId":"-"},"content":"}"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"markdown pre {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"  word-wrap: normal;"},{"lineNumber":613,"author":{"gitId":"-"},"content":"}"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"markdown pre \u003e code {"},{"lineNumber":616,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":617,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"  font-size: 100%;"},{"lineNumber":619,"author":{"gitId":"-"},"content":"  word-break: normal;"},{"lineNumber":620,"author":{"gitId":"-"},"content":"  white-space: pre;"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  background: transparent;"},{"lineNumber":622,"author":{"gitId":"-"},"content":"  border: 0;"},{"lineNumber":623,"author":{"gitId":"-"},"content":"}"},{"lineNumber":624,"author":{"gitId":"-"},"content":""},{"lineNumber":625,"author":{"gitId":"-"},"content":"markdown .highlight {"},{"lineNumber":626,"author":{"gitId":"-"},"content":"  margin-bottom: 16px;"},{"lineNumber":627,"author":{"gitId":"-"},"content":"}"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"markdown .highlight pre {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":631,"author":{"gitId":"-"},"content":"  word-break: normal;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"}"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"markdown .highlight pre,"},{"lineNumber":635,"author":{"gitId":"-"},"content":"markdown pre {"},{"lineNumber":636,"author":{"gitId":"-"},"content":"  padding: 16px;"},{"lineNumber":637,"author":{"gitId":"-"},"content":"  overflow: auto;"},{"lineNumber":638,"author":{"gitId":"-"},"content":"  font-size: 85%;"},{"lineNumber":639,"author":{"gitId":"-"},"content":"  line-height: 1.45;"},{"lineNumber":640,"author":{"gitId":"-"},"content":"  background-color: #f6f8fa;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"  border-radius: 3px;"},{"lineNumber":642,"author":{"gitId":"-"},"content":"}"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"markdown pre code {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"  display: inline;"},{"lineNumber":646,"author":{"gitId":"-"},"content":"  max-width: auto;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":648,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"  overflow: visible;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"  line-height: inherit;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"  word-wrap: normal;"},{"lineNumber":652,"author":{"gitId":"-"},"content":"  background-color: transparent;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"  border: 0;"},{"lineNumber":654,"author":{"gitId":"-"},"content":"}"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"markdown .full-commit .btn-outline:not(:disabled):hover {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"  color: #005cc5;"},{"lineNumber":658,"author":{"gitId":"-"},"content":"  border-color: #005cc5;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"}"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"markdown kbd {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"  padding: 3px 5px;"},{"lineNumber":664,"author":{"gitId":"luminousleek"},"content":"  font: 11px \u0027SFMono-Regular\u0027, Consolas, \u0027Liberation Mono\u0027, Menlo, Courier, monospace;"},{"lineNumber":665,"author":{"gitId":"-"},"content":"  line-height: 10px;"},{"lineNumber":666,"author":{"gitId":"-"},"content":"  color: #444d56;"},{"lineNumber":667,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"  background-color: #fafbfc;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"  border: solid 1px #d1d5da;"},{"lineNumber":670,"author":{"gitId":"-"},"content":"  border-bottom-color: #c6cbd1;"},{"lineNumber":671,"author":{"gitId":"-"},"content":"  border-radius: 3px;"},{"lineNumber":672,"author":{"gitId":"-"},"content":"  box-shadow: inset 0 -1px 0 #c6cbd1;"},{"lineNumber":673,"author":{"gitId":"-"},"content":"}"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"markdown :checked + .radio-label {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":677,"author":{"gitId":"-"},"content":"  z-index: 1;"},{"lineNumber":678,"author":{"gitId":"-"},"content":"  border-color: #0366d6;"},{"lineNumber":679,"author":{"gitId":"-"},"content":"}"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"markdown .task-list-item {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"  list-style-type: none;"},{"lineNumber":683,"author":{"gitId":"-"},"content":"}"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"markdown .task-list-item + .task-list-item {"},{"lineNumber":686,"author":{"gitId":"-"},"content":"  margin-top: 3px;"},{"lineNumber":687,"author":{"gitId":"-"},"content":"}"},{"lineNumber":688,"author":{"gitId":"-"},"content":""},{"lineNumber":689,"author":{"gitId":"-"},"content":"markdown .task-list-item input {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"  margin: 0 0.2em 0.25em -1.6em;"},{"lineNumber":691,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":692,"author":{"gitId":"-"},"content":"}"},{"lineNumber":693,"author":{"gitId":"-"},"content":""},{"lineNumber":694,"author":{"gitId":"-"},"content":"markdown hr {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"  border-bottom-color: #eee;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":15,"-":681}},{"path":"src/styles.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/* You can add global styles to this file, and also import other style files */"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"html,"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"body {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  margin: 0;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  padding: 0;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: 100vh;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  height: 100%;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"html,"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"body {"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"  height: 100%;"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"}"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"body {"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"  margin: 0;"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"  font-family: Roboto, \u0027Helvetica Neue\u0027, sans-serif;"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/* Timeline comment style */"},{"lineNumber":21,"author":{"gitId":"-"},"content":".timeline-header {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  background-color: #f1f8ff;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid #c0d3eb;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  border-top-left-radius: 3px;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  border-top-right-radius: 3px;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  color: #586069;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  height: 35px;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  padding: 5px;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":".timeline-comment {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  overflow: auto;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  border: 1px solid #c0d3eb;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  background-color: #fff;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  border-radius: 3px;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  margin-bottom: 30px;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":".comment {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":".question-mark {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  color: red;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  font-size: 35px;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin: 0 10px 15px 0;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  text-shadow: -1.5px 0 black, 0 1.5px black, 1.5px 0 black, 0 -1.5px black;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":"/* Timeline comment style */"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"/* MaterialUI icon styles */"},{"lineNumber":52,"author":{"gitId":"-"},"content":".material-icons-outlined,"},{"lineNumber":53,"author":{"gitId":"-"},"content":".material-icons.material-icons--outlined,"},{"lineNumber":54,"author":{"gitId":"-"},"content":".material-icons-two-tone,"},{"lineNumber":55,"author":{"gitId":"-"},"content":".material-icons.material-icons--two-tone,"},{"lineNumber":56,"author":{"gitId":"-"},"content":".material-icons-round,"},{"lineNumber":57,"author":{"gitId":"-"},"content":".material-icons.material-icons--round,"},{"lineNumber":58,"author":{"gitId":"-"},"content":".material-icons-sharp,"},{"lineNumber":59,"author":{"gitId":"-"},"content":".material-icons.material-icons--sharp {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  font-weight: normal;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  font-style: normal;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  font-size: 24px;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  line-height: 1;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  letter-spacing: normal;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  text-transform: none;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  white-space: nowrap;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  word-wrap: normal;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  direction: ltr;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \u0027liga\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  -webkit-font-smoothing: antialiased;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":".material-icons-outlined,"},{"lineNumber":75,"author":{"gitId":"-"},"content":".material-icons.material-icons--outlined {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  font-family: \u0027Material Icons Outlined\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":".material-icons-two-tone,"},{"lineNumber":80,"author":{"gitId":"-"},"content":".material-icons.material-icons--two-tone {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-family: \u0027Material Icons Two Tone\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":".material-icons-round,"},{"lineNumber":85,"author":{"gitId":"-"},"content":".material-icons.material-icons--round {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  font-family: \u0027Material Icons Round\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":".material-icons-sharp,"},{"lineNumber":90,"author":{"gitId":"-"},"content":".material-icons.material-icons--sharp {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  font-family: \u0027Material Icons Sharp\u0027;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"},{"lineNumber":93,"author":{"gitId":"-"},"content":"/* MaterialUI icon styles */"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":".link-grey-dark {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  color: #24292e;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  font-weight: 500;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  font-size: 16px;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":".link-grey-dark:hover {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  color: #0366d6;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":".no-underline {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  text-decoration: none !important;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":".grid-flush-left {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  left: 5px;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":".grid-flush-right {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  right: 5px;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":".mat-table tbody tr:hover td {"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"  background-color: #e8e8ee;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"table {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  table-layout: fixed;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":".centralize {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":".editor-actions {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  float: right;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  padding: 10px;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":".editor-action {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  margin-left: 10px !important;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":".bold-name {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  font-weight: 500;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-size: 17px;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":".full-grid-width {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":".white-spinner circle {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  stroke: white !important;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":".sync-spinner {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  margin-left: 16px;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  margin-right: 16px;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":".column.left {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  max-width: 85%;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  min-width: 380px;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":".column.right {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  max-width: 15%;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  min-width: 180px;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"luminousleek":11,"-":161}},{"path":"src/test.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// This file is required by karma.conf.js and loads recursively all the .spec and framework files"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { getTestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from \u0027@angular/platform-browser-dynamic/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import \u0027zone.js/dist/zone-testing\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"declare const require: any;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"// First, initialize the Angular testing environment."},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"getTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting());"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Then we find all the tests."},{"lineNumber":12,"author":{"gitId":"-"},"content":"const context \u003d require.context(\u0027../tests\u0027, true, /\\.spec\\.ts$/);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// And load the modules."},{"lineNumber":14,"author":{"gitId":"-"},"content":"context.keys().map(context);"}],"authorContributionMap":{"luminousleek":2,"-":12}},{"path":"tests/app/shared/issue/assignee/assignee.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DebugElement } from \u0027@angular/core\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { By } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../../../../src/app/core/models/phase.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { Team } from \u0027../../../../../src/app/core/models/team.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { User, UserRole } from \u0027../../../../../src/app/core/models/user.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../../../src/app/core/services/error-handling.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../../../src/app/core/services/issue.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../../../src/app/core/services/permission.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../../../src/app/core/services/phase.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { AssigneeComponent } from \u0027../../../../../src/app/shared/issue/assignee/assignee.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { MaterialModule } from \u0027../../../../../src/app/shared/material.module\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { ISSUE_WITH_EMPTY_DESCRIPTION } from \u0027../../../../constants/githubissue.constants\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"describe(\u0027AssigneeComponent\u0027, () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  let component: AssigneeComponent;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  let debugElement: DebugElement;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  let nativeElement: HTMLElement;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cAssigneeComponent\u003e;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  let dummyIssue: Issue;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  const testStudent: User \u003d {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    loginId: \u0027testStudent\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    role: UserRole.Student"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  const testStudent2: User \u003d {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    loginId: \u0027testStudent2\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    role: UserRole.Student"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  const testStudent3: User \u003d {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    loginId: \u0027testStudent3\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    role: UserRole.Student"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  const testStudent4: User \u003d {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    loginId: \u0027testStudent4\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    role: UserRole.Student"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  const dummyTeam: Team \u003d new Team({"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    id: \u0027F09-2\u0027,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    teamMembers: [testStudent, testStudent2, testStudent3, testStudent4]"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  const phaseService: any \u003d jasmine.createSpyObj(\u0027PhaseService\u0027, [], { currentPhase: Phase.phaseTeamResponse });"},{"lineNumber":54,"author":{"gitId":"chunweii"},"content":"  const issueService: any \u003d jasmine.createSpyObj(\u0027IssueService\u0027, ["},{"lineNumber":55,"author":{"gitId":"chunweii"},"content":"    \u0027getDuplicateIssuesFor\u0027,"},{"lineNumber":56,"author":{"gitId":"chunweii"},"content":"    \u0027getLatestIssue\u0027,"},{"lineNumber":57,"author":{"gitId":"chunweii"},"content":"    \u0027updateIssue\u0027,"},{"lineNumber":58,"author":{"gitId":"chunweii"},"content":"    \u0027updateIssueWithAssigneeCheck\u0027"},{"lineNumber":59,"author":{"gitId":"chunweii"},"content":"  ]);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  const permissionsService: any \u003d jasmine.createSpyObj(\u0027PermissionService\u0027, [\u0027isIssueLabelsEditable\u0027]);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      declarations: [AssigneeComponent],"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      providers: [IssueService, ErrorHandlingService, PhaseService, PermissionService],"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      imports: [FormsModule, MaterialModule, BrowserAnimationsModule]"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      .overrideProvider(IssueService, { useValue: issueService })"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      .overrideProvider(PhaseService, { useValue: phaseService })"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      .overrideProvider(PermissionService, { useValue: permissionsService })"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      .compileComponents();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    permissionsService.isIssueLabelsEditable.and.callFake(() \u003d\u003e true);"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"    issueService.getDuplicateIssuesFor.and.returnValue(of([]));"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(AssigneeComponent);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    dummyIssue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_EMPTY_DESCRIPTION, dummyTeam);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    component.team \u003d dummyTeam;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    component.issue \u003d dummyIssue;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    debugElement \u003d fixture.debugElement;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    nativeElement \u003d fixture.nativeElement;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  it(\u0027should have a placeholder value of - given no assignees\u0027, () \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const matPlaceholderValue: HTMLElement \u003d debugElement.query(By.css(\u0027p\u0027)).nativeElement;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    expect(matPlaceholderValue.innerText).toEqual(\u0027-\u0027); // Placeholder Value"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  it(\u0027should be able to open the assignee selector\u0027, () \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    openMatSelect();"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    const matOption: HTMLElement \u003d debugElement.query(By.css(\u0027.mat-option\u0027)).nativeElement;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    const inputElement: HTMLElement \u003d debugElement.query(By.css(\u0027.mat-select-panel\u0027)).nativeElement;"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    expect(inputElement.children.length).toBe(dummyTeam.teamMembers.length);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    expect(matOption.attributes.getNamedItem(\u0027aria-selected\u0027).value).toEqual(\u0027false\u0027);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  it(\u0027should emit an event containing the issue with updated assignees, upon closing the MatSelect\u0027, () \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    spyOn(component.issueUpdated, \u0027emit\u0027);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    openMatSelect();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    addAssignee();"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    dispatchClosedEvent();"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    expect(component.issueUpdated.emit).toHaveBeenCalledWith(jasmine.objectContaining({ assignees: [testStudent.loginId] }));"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  it(\u0027should show the updated assignees upon receiving an updated issue\u0027, () \u003d\u003e {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    component.issue.assignees \u003d [testStudent.loginId];"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const matListText: HTMLElement \u003d debugElement.query(By.css(\u0027.mat-list-item-content\u0027)).nativeElement;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    expect(matListText.innerText).toEqual(testStudent.loginId);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should update assignees of duplicate issues\u0027, () \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"    const duplicateIssue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_EMPTY_DESCRIPTION, dummyTeam);"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":"    issueService.updateIssue.and.callFake((x: Issue) \u003d\u003e of(x));"},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"    issueService.getDuplicateIssuesFor.and.returnValue(of([duplicateIssue]));"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":"    openMatSelect();"},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"    addAssignee();"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":"    dispatchClosedEvent();"},{"lineNumber":128,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":129,"author":{"gitId":"zhaojj2209"},"content":"    const updatedIssue \u003d dummyIssue.clone(phaseService.currentPhase);"},{"lineNumber":130,"author":{"gitId":"chunweii"},"content":"    updatedIssue.assignees \u003d [testStudent.loginId];"},{"lineNumber":131,"author":{"gitId":"zhaojj2209"},"content":"    const updatedDuplicateIssue \u003d duplicateIssue.clone(phaseService.currentPhase);"},{"lineNumber":132,"author":{"gitId":"chunweii"},"content":"    updatedDuplicateIssue.assignees \u003d [testStudent.loginId];"},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":134,"author":{"gitId":"chunweii"},"content":"    expect(issueService.updateIssueWithAssigneeCheck).toHaveBeenCalledWith(updatedIssue);"},{"lineNumber":135,"author":{"gitId":"zhaojj2209"},"content":"    expect(issueService.updateIssue).toHaveBeenCalledWith(updatedDuplicateIssue);"},{"lineNumber":136,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":137,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  function openMatSelect(): void {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    const matSelectButton: HTMLElement \u003d nativeElement.querySelector(\u0027button\u0027);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    matSelectButton.click();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  function addAssignee(): void {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    const matOption: HTMLElement \u003d debugElement.query(By.css(\u0027.mat-option\u0027)).nativeElement;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    matOption.click();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"  function dispatchClosedEvent() {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const matSelectElement: HTMLElement \u003d debugElement.query(By.css(\u0027.mat-select\u0027)).nativeElement;"},{"lineNumber":152,"author":{"gitId":"chunweii"},"content":"    issueService.updateIssueWithAssigneeCheck.and.callFake((updatedIssue: Issue) \u003d\u003e of(updatedIssue));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    matSelectElement.dispatchEvent(new Event(\u0027closed\u0027));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":16,"chunweii":10,"-":130}},{"path":"tests/app/shared/issue/description/description.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { FormBuilder, NgForm } from \u0027@angular/forms\u0027;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":"import { MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"zhaojj2209"},"content":"import { UserConfirmationComponent } from \u0027../../../../../src/app/core/guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../../../../src/app/core/models/phase.model\u0027;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"import { DialogService } from \u0027../../../../../src/app/core/services/dialog.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../../../src/app/core/services/phase.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { DescriptionComponent } from \u0027../../../../../src/app/shared/issue/description/description.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ISSUE_WITH_EMPTY_DESCRIPTION } from \u0027../../../../constants/githubissue.constants\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"describe(\u0027DescriptionComponent\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  let descriptionComponent: DescriptionComponent;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  let issueService: any;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  let phaseService: PhaseService;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  let formBuilder: FormBuilder;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  let thisIssue: Issue;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  let dialog: any;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  let errorHandlingService: any;"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":"  let dialogService: jasmine.SpyObj\u003cDialogService\u003e;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    formBuilder \u003d new FormBuilder();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    phaseService \u003d new PhaseService(null, null, null);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    phaseService.currentPhase \u003d Phase.phaseTeamResponse;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    dialog \u003d jasmine.createSpyObj(\u0027MatDialog\u0027, [\u0027open\u0027]);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    errorHandlingService \u003d jasmine.createSpyObj(\u0027ErrorHandlingService\u0027, [\u0027handleError\u0027]);"},{"lineNumber":29,"author":{"gitId":"zhaojj2209"},"content":"    issueService \u003d jasmine.createSpyObj(\u0027IssueService\u0027, [\u0027getIssue\u0027, \u0027getLatestIssue\u0027, \u0027updateIssue\u0027]);"},{"lineNumber":30,"author":{"gitId":"zhaojj2209"},"content":"    dialogService \u003d jasmine.createSpyObj(\u0027DialogService\u0027, [\u0027openUserConfirmationModal\u0027]);"},{"lineNumber":31,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":32,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent \u003d new DescriptionComponent("},{"lineNumber":33,"author":{"gitId":"zhaojj2209"},"content":"      issueService,"},{"lineNumber":34,"author":{"gitId":"zhaojj2209"},"content":"      formBuilder,"},{"lineNumber":35,"author":{"gitId":"zhaojj2209"},"content":"      errorHandlingService,"},{"lineNumber":36,"author":{"gitId":"zhaojj2209"},"content":"      dialog,"},{"lineNumber":37,"author":{"gitId":"zhaojj2209"},"content":"      phaseService,"},{"lineNumber":38,"author":{"gitId":"zhaojj2209"},"content":"      null,"},{"lineNumber":39,"author":{"gitId":"zhaojj2209"},"content":"      dialogService"},{"lineNumber":40,"author":{"gitId":"zhaojj2209"},"content":"    );"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    thisIssue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    descriptionComponent.issue \u003d thisIssue;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  it(\u0027should be initialised with a FromGroup instance\u0027, () \u003d\u003e {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    descriptionComponent.ngOnInit();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    expect(descriptionComponent.issueDescriptionForm.value).toEqual({ description: \u0027\u0027 });"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  it(\u0027should update the form value correctly and emit an event when entering edit mode\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    const descriptionComponentEditState \u003d spyOn(descriptionComponent.changeEditState, \u0027emit\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    descriptionComponent.ngOnInit();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    descriptionComponent.changeToEditMode();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    expect(descriptionComponentEditState).toHaveBeenCalledTimes(1);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    expect(descriptionComponent.issueDescriptionForm.value).toEqual({ description: thisIssue.description });"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  it(\u0027should not have its value updated with issue description is invalid\u0027, () \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    descriptionComponent.issue.description \u003d undefined;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    descriptionComponent.ngOnInit();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    descriptionComponent.changeToEditMode();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    expect(descriptionComponent.issueDescriptionForm.value).toEqual({ description: \u0027\u0027 });"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  it(\u0027should highlight conflicting changes, if the issue description was updated simultaneously by another user\u0027, () \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Simulation of getting updated issue from Github."},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const updatedIssue \u003d thisIssue.clone(phaseService.currentPhase);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    updatedIssue.description \u003d \u0027Issue description was modified simultaneously on GitHub\u0027;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    issueService.issues \u003d [];"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    issueService.issues[updatedIssue.id] \u003d updatedIssue;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    descriptionComponent.issue \u003d thisIssue;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    const viewChangesCall \u003d spyOn(descriptionComponent, \u0027viewChanges\u0027);"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    const form \u003d new NgForm([], []);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    descriptionComponent.ngOnInit();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    descriptionComponent.changeToEditMode();"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    issueService.getLatestIssue.and.callFake((x: number) \u003d\u003e of(updatedIssue));"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    dialog.open.and.callFake((x: any) \u003d\u003e {});"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    errorHandlingService.handleError.and.callFake((x: any) \u003d\u003e {});"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    descriptionComponent.updateDescription(form);"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    expect(viewChangesCall).toHaveBeenCalledTimes(1);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    expect(descriptionComponent.conflict.outdatedContent).toEqual(thisIssue.description);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    expect(descriptionComponent.conflict.updatedContent).toEqual(updatedIssue.description);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  it(\u0027should be configured correctly when description is updated\u0027, () \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    const form \u003d new NgForm([], []);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    const formResetForm \u003d spyOn(form, \u0027resetForm\u0027);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const issueUpdatedEmit \u003d spyOn(descriptionComponent.issueUpdated, \u0027emit\u0027);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const resetCall \u003d spyOn(descriptionComponent, \u0027resetToDefault\u0027);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    descriptionComponent.ngOnInit();"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    descriptionComponent.changeToEditMode();"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    issueService.getLatestIssue.and.callFake((x: number) \u003d\u003e of(thisIssue));"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    issueService.updateIssue.and.callFake((x: Issue) \u003d\u003e of(x));"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    descriptionComponent.updateDescription(form);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    expect(formResetForm).toHaveBeenCalledTimes(1);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    expect(issueUpdatedEmit).toHaveBeenCalledTimes(1);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    expect(resetCall).toHaveBeenCalledTimes(1);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":107,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":108,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should revert edits if edit mode is cancelled\u0027, () \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"zhaojj2209"},"content":"    const issueUpdatedEmit \u003d spyOn(descriptionComponent.issueUpdated, \u0027emit\u0027);"},{"lineNumber":110,"author":{"gitId":"zhaojj2209"},"content":"    const resetCall \u003d spyOn(descriptionComponent, \u0027resetToDefault\u0027);"},{"lineNumber":111,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":112,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent.ngOnInit();"},{"lineNumber":113,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent.changeToEditMode();"},{"lineNumber":114,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":115,"author":{"gitId":"zhaojj2209"},"content":"    issueService.getIssue.and.callFake((x: number) \u003d\u003e of(thisIssue));"},{"lineNumber":116,"author":{"gitId":"zhaojj2209"},"content":"    issueService.updateIssue.and.callFake((x: Issue) \u003d\u003e of(x));"},{"lineNumber":117,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent.cancelEditMode();"},{"lineNumber":118,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":119,"author":{"gitId":"zhaojj2209"},"content":"    expect(issueUpdatedEmit).toHaveBeenCalledTimes(1);"},{"lineNumber":120,"author":{"gitId":"zhaojj2209"},"content":"    expect(resetCall).toHaveBeenCalledTimes(1);"},{"lineNumber":121,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":122,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":123,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should cancel edit mode only if confirmed in confirmation dialog\u0027, () \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"zhaojj2209"},"content":"    const cancelEditCall \u003d spyOn(descriptionComponent, \u0027cancelEditMode\u0027);"},{"lineNumber":125,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":126,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent.ngOnInit();"},{"lineNumber":127,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent.changeToEditMode();"},{"lineNumber":128,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":129,"author":{"gitId":"zhaojj2209"},"content":"    dialogService.openUserConfirmationModal.and.returnValue({ afterClosed: () \u003d\u003e of(false) } as MatDialogRef\u003cUserConfirmationComponent\u003e);"},{"lineNumber":130,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent.openCancelDialog();"},{"lineNumber":131,"author":{"gitId":"zhaojj2209"},"content":"    expect(cancelEditCall).toHaveBeenCalledTimes(0);"},{"lineNumber":132,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":133,"author":{"gitId":"zhaojj2209"},"content":"    dialogService.openUserConfirmationModal.and.returnValue({ afterClosed: () \u003d\u003e of(true) } as MatDialogRef\u003cUserConfirmationComponent\u003e);"},{"lineNumber":134,"author":{"gitId":"zhaojj2209"},"content":"    descriptionComponent.openCancelDialog();"},{"lineNumber":135,"author":{"gitId":"zhaojj2209"},"content":"    expect(cancelEditCall).toHaveBeenCalledTimes(1);"},{"lineNumber":136,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":137,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":46,"-":91}},{"path":"tests/app/shared/issue/label/label.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../../../../src/app/core/models/phase.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../../../src/app/core/services/label.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../../../src/app/core/services/phase.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelComponent } from \u0027../../../../../src/app/shared/issue/label/label.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ISSUE_WITH_EMPTY_DESCRIPTION } from \u0027../../../../constants/githubissue.constants\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { COLOR_SEVERITY_HIGH, COLOR_SEVERITY_LOW, SEVERITY, SEVERITY_HIGH, SEVERITY_LABELS } from \u0027../../../../constants/label.constants\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"describe(\u0027LabelComponent\u0027, () \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  let labelComponent: any;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  let issueService: any;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  let labelService: any;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  let phaseService: any;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  let thisIssue: Issue;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  let issueUpdatedEmit: any;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    labelService \u003d jasmine.createSpyObj(LabelService, [\u0027getLabelList\u0027, \u0027getColorOfLabel\u0027]);"},{"lineNumber":20,"author":{"gitId":"zhaojj2209"},"content":"    issueService \u003d jasmine.createSpyObj(\u0027IssueService\u0027, [\u0027getDuplicateIssuesFor\u0027, \u0027updateIssue\u0027]);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    phaseService \u003d jasmine.createSpyObj(PhaseService, [\u0027currentPhase\u0027]);"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    labelComponent \u003d new LabelComponent(issueService, null, phaseService, labelService, null, null);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    thisIssue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    labelComponent.issue \u003d thisIssue;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    labelComponent.attributeName \u003d SEVERITY;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    issueUpdatedEmit \u003d spyOn(labelComponent.issueUpdated, \u0027emit\u0027);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  it(\u0027should be initialised with a list of label values and a labelColor\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    labelService.getLabelList.and.returnValue(SEVERITY_LABELS);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    labelService.getColorOfLabel.and.returnValue(COLOR_SEVERITY_LOW);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    labelComponent.ngOnInit();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    labelComponent.ngOnChanges();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    expect(labelComponent.labelValues).toEqual(SEVERITY_LABELS);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    expect(labelComponent.labelColor).toEqual(COLOR_SEVERITY_LOW);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  it(\u0027should change label color when updateLabel is called\u0027, () \u003d\u003e {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    labelService.getLabelList.and.returnValue(SEVERITY_LABELS);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    labelService.getColorOfLabel.and.returnValue(COLOR_SEVERITY_LOW);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    labelComponent.ngOnInit();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    labelComponent.ngOnChanges();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    labelService.getColorOfLabel.and.returnValue(COLOR_SEVERITY_HIGH);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    phaseService.currentPhase.and.returnValue(Phase.phaseBugReporting);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    issueService.updateIssue.and.callFake((x: Issue) \u003d\u003e of(x));"},{"lineNumber":50,"author":{"gitId":"zhaojj2209"},"content":"    issueService.getDuplicateIssuesFor.and.returnValue(of([]));"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    labelComponent.updateLabel(SEVERITY_HIGH);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    expect(issueUpdatedEmit).toHaveBeenCalledTimes(1);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    expect(labelComponent.labelValues).toEqual(SEVERITY_LABELS);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    expect(labelComponent.labelColor).toEqual(COLOR_SEVERITY_HIGH);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":57,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":58,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should update labels of duplicate issues\u0027, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"zhaojj2209"},"content":"    labelService.getLabelList.and.returnValue(SEVERITY_LABELS);"},{"lineNumber":60,"author":{"gitId":"zhaojj2209"},"content":"    labelService.getColorOfLabel.and.returnValue(COLOR_SEVERITY_LOW);"},{"lineNumber":61,"author":{"gitId":"zhaojj2209"},"content":"    labelComponent.ngOnInit();"},{"lineNumber":62,"author":{"gitId":"zhaojj2209"},"content":"    labelComponent.ngOnChanges();"},{"lineNumber":63,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":64,"author":{"gitId":"zhaojj2209"},"content":"    phaseService.currentPhase.and.returnValue(Phase.phaseTeamResponse);"},{"lineNumber":65,"author":{"gitId":"zhaojj2209"},"content":"    issueService.updateIssue.and.callFake((x: Issue) \u003d\u003e of(x));"},{"lineNumber":66,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":67,"author":{"gitId":"zhaojj2209"},"content":"    const duplicateIssue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":"    issueService.getDuplicateIssuesFor.and.returnValue(of([duplicateIssue]));"},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"    labelComponent.updateLabel(SEVERITY_HIGH);"},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"    const updatedIssue \u003d thisIssue.clone(phaseService.currentPhase);"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":"    updatedIssue.severity \u003d SEVERITY_HIGH;"},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":"    const updatedDuplicateIssue \u003d duplicateIssue.clone(phaseService.currentPhase);"},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"    updatedDuplicateIssue.severity \u003d SEVERITY_HIGH;"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":"    expect(issueService.updateIssue).toHaveBeenCalledWith(updatedIssue);"},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":"    expect(issueService.updateIssue).toHaveBeenCalledWith(updatedDuplicateIssue);"},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":24,"-":55}},{"path":"tests/app/shared/issue/title/title.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { FormBuilder, NgForm } from \u0027@angular/forms\u0027;"},{"lineNumber":2,"author":{"gitId":"zhaojj2209"},"content":"import { MatDialogRef } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"zhaojj2209"},"content":"import { UserConfirmationComponent } from \u0027../../../../../src/app/core/guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../../../../src/app/core/models/phase.model\u0027;"},{"lineNumber":7,"author":{"gitId":"zhaojj2209"},"content":"import { DialogService } from \u0027../../../../../src/app/core/services/dialog.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../../../src/app/core/services/phase.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { TitleComponent } from \u0027../../../../../src/app/shared/issue/title/title.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ISSUE_WITH_EMPTY_DESCRIPTION } from \u0027../../../../constants/githubissue.constants\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"describe(\u0027TitleComponent\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  let titleComponent: TitleComponent;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  let issueService: any;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  let thisIssue: Issue;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  let formBuilder: any;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  let phaseService: PhaseService;"},{"lineNumber":18,"author":{"gitId":"zhaojj2209"},"content":"  let dialogService: jasmine.SpyObj\u003cDialogService\u003e;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    formBuilder \u003d new FormBuilder();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    phaseService \u003d new PhaseService(null, null, null);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    phaseService.currentPhase \u003d Phase.phaseTeamResponse;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    issueService \u003d jasmine.createSpyObj(\u0027IssueService\u0027, [\u0027updateIssue\u0027]);"},{"lineNumber":26,"author":{"gitId":"zhaojj2209"},"content":"    dialogService \u003d jasmine.createSpyObj(\u0027DialogService\u0027, [\u0027openUserConfirmationModal\u0027]);"},{"lineNumber":27,"author":{"gitId":"zhaojj2209"},"content":"    titleComponent \u003d new TitleComponent(issueService, formBuilder, null, null, phaseService, dialogService);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    thisIssue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    titleComponent.issue \u003d thisIssue;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  it(\u0027should be initialised with an issueTitleForm\u0027, () \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    titleComponent.ngOnInit();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    expect(titleComponent.issueTitleForm.value).toEqual({ title: \u0027\u0027 });"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  it(\u0027should be updated with correct flags and values in editing mode\u0027, () \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    titleComponent.ngOnInit();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    titleComponent.changeToEditMode();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    expect(titleComponent.isEditing).toEqual(true);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    expect(titleComponent.issueTitleForm.value).toEqual({ title: thisIssue.title });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  it(\u0027should not have its value updated with issue title is invalid\u0027, () \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    thisIssue.title \u003d undefined;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    titleComponent.issue \u003d thisIssue;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    titleComponent.ngOnInit();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    titleComponent.changeToEditMode();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    expect(titleComponent.isEditing).toEqual(true);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    expect(titleComponent.issueTitleForm.value).toEqual({ title: \u0027\u0027 });"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  it(\u0027should be configured correctly when title is updated\u0027, () \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    const form \u003d new NgForm([], []);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const formResetForm \u003d spyOn(form, \u0027resetForm\u0027);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    const titleComponentEmitter \u003d spyOn(titleComponent.issueUpdated, \u0027emit\u0027);"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    titleComponent.ngOnInit();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    titleComponent.changeToEditMode();"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    issueService.updateIssue.and.callFake((x: Issue) \u003d\u003e of(x));"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    titleComponent.updateTitle(form);"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    expect(formResetForm).toHaveBeenCalledTimes(1);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    expect(titleComponentEmitter).toHaveBeenCalledTimes(1);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    expect(titleComponent.isEditing).toEqual(false);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":68,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":69,"author":{"gitId":"zhaojj2209"},"content":"  it(\u0027should cancel edit mode only if confirmed in confirmation dialog\u0027, () \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"zhaojj2209"},"content":"    titleComponent.ngOnInit();"},{"lineNumber":71,"author":{"gitId":"zhaojj2209"},"content":"    titleComponent.changeToEditMode();"},{"lineNumber":72,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":73,"author":{"gitId":"zhaojj2209"},"content":"    dialogService.openUserConfirmationModal.and.returnValue({ afterClosed: () \u003d\u003e of(false) } as MatDialogRef\u003cUserConfirmationComponent\u003e);"},{"lineNumber":74,"author":{"gitId":"zhaojj2209"},"content":"    titleComponent.openCancelDialog();"},{"lineNumber":75,"author":{"gitId":"zhaojj2209"},"content":"    expect(titleComponent.isEditing).toEqual(true);"},{"lineNumber":76,"author":{"gitId":"zhaojj2209"},"content":""},{"lineNumber":77,"author":{"gitId":"zhaojj2209"},"content":"    dialogService.openUserConfirmationModal.and.returnValue({ afterClosed: () \u003d\u003e of(true) } as MatDialogRef\u003cUserConfirmationComponent\u003e);"},{"lineNumber":78,"author":{"gitId":"zhaojj2209"},"content":"    titleComponent.openCancelDialog();"},{"lineNumber":79,"author":{"gitId":"zhaojj2209"},"content":"    expect(titleComponent.isEditing).toEqual(false);"},{"lineNumber":80,"author":{"gitId":"zhaojj2209"},"content":"  });"},{"lineNumber":81,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"zhaojj2209":19,"-":62}},{"path":"tests/services/profile.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Profile } from \u0027../../src/app/core/models/profile.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../src/app/core/services/github.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ProfileService } from \u0027../../src/app/core/services/profile.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"let githubService: GithubService;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"let profileService: ProfileService;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const EMPTY_PROFILES \u003d [];"},{"lineNumber":9,"author":{"gitId":"-"},"content":"const VALID_PROFILES \u003d ["},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cProfile\u003e{"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    profileName: \u0027CATcher\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    repoName: \u0027CATcher-org/public_data\u0027"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"-"},"content":"];"},{"lineNumber":15,"author":{"gitId":"-"},"content":"const INVALID_PROFILES \u003d ["},{"lineNumber":16,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    profileName: \u0027CATcher\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"];"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"describe(\u0027ProfileService\u0027, () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"    githubService \u003d new GithubService(null, null, null, null);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    profileService \u003d new ProfileService(githubService);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  describe(\u0027.fetchExternalProfiles()\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    it(\u0027should return an empty array if no profiles are given\u0027, () \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      spyOn(window, \u0027fetch\u0027).and.returnValue(generateProfilesPromise(EMPTY_PROFILES));"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      return profileService.fetchExternalProfiles().then((profiles) \u003d\u003e expect(profiles).toEqual(EMPTY_PROFILES));"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    it(\u0027should return the set of profiles if a set of valid profiles is given\u0027, () \u003d\u003e {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      spyOn(window, \u0027fetch\u0027).and.returnValue(generateProfilesPromise(VALID_PROFILES));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      return profileService.fetchExternalProfiles().then((profiles) \u003d\u003e expect(profiles).toEqual(VALID_PROFILES));"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    it(\u0027should throw an error if a set of invalid profiles is given\u0027, () \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      spyOn(window, \u0027fetch\u0027).and.returnValue(generateProfilesPromise(INVALID_PROFILES));"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      return profileService"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        .fetchExternalProfiles()"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        .then(() \u003d\u003e fail())"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .catch((error: Error) \u003d\u003e expect(error.message).toEqual(\u0027profiles.json is malformed\u0027));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":46,"author":{"gitId":"-"},"content":"});"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"function generateProfilesPromise(profiles: any[]): Promise\u003cResponse\u003e {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  const mockResponse: Response \u003d { json: () \u003d\u003e Promise.resolve({ profiles: profiles }) } as Response;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  return Promise.resolve(mockResponse);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chunweii":1,"-":50}}]
